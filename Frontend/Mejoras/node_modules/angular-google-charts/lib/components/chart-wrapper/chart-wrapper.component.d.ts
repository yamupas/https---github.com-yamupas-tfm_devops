/// <reference types="@types/google.visualization" />
import { ElementRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { ScriptLoaderService } from '../../services/script-loader.service';
import { ChartErrorEvent, ChartReadyEvent, ChartSelectionChangedEvent } from '../../types/events';
import { ChartBase } from '../chart-base/chart-base.component';
import * as ɵngcc0 from '@angular/core';
export declare class ChartWrapperComponent implements ChartBase, OnChanges, OnInit {
    private element;
    private scriptLoaderService;
    /**
     * Either a JSON object defining the chart, or a serialized string version of that object.
     * The format of this object is shown in the
     * {@link https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart `drawChart()`} documentation.
     *
     * The `container` and `containerId` will be overwritten by this component to allow
     * rendering the chart into the components' template.
     */
    specs?: google.visualization.ChartSpecs;
    error: EventEmitter<ChartErrorEvent>;
    ready: EventEmitter<ChartReadyEvent<google.visualization.ChartBase>>;
    select: EventEmitter<ChartSelectionChangedEvent>;
    private wrapper;
    private wrapperReadySubject;
    private initialized;
    constructor(element: ElementRef, scriptLoaderService: ScriptLoaderService);
    get chart(): google.visualization.ChartBase | null;
    get wrapperReady$(): import("rxjs").Observable<google.visualization.ChartWrapper>;
    get chartWrapper(): google.visualization.ChartWrapper;
    set chartWrapper(wrapper: google.visualization.ChartWrapper);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private updateChart;
    private drawChart;
    private registerChartEvents;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChartWrapperComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChartWrapperComponent, "chart-wrapper", ["chartWrapper"], { "specs": "specs"; }, { "error": "error"; "ready": "ready"; "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtd3JhcHBlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2hhcnQtd3JhcHBlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwiQHR5cGVzL2dvb2dsZS52aXN1YWxpemF0aW9uXCIgLz5cbmltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNjcmlwdExvYWRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9zY3JpcHQtbG9hZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2hhcnRFcnJvckV2ZW50LCBDaGFydFJlYWR5RXZlbnQsIENoYXJ0U2VsZWN0aW9uQ2hhbmdlZEV2ZW50IH0gZnJvbSAnLi4vLi4vdHlwZXMvZXZlbnRzJztcbmltcG9ydCB7IENoYXJ0QmFzZSB9IGZyb20gJy4uL2NoYXJ0LWJhc2UvY2hhcnQtYmFzZS5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hhcnRXcmFwcGVyQ29tcG9uZW50IGltcGxlbWVudHMgQ2hhcnRCYXNlLCBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBlbGVtZW50O1xuICAgIHByaXZhdGUgc2NyaXB0TG9hZGVyU2VydmljZTtcbiAgICAvKipcbiAgICAgKiBFaXRoZXIgYSBKU09OIG9iamVjdCBkZWZpbmluZyB0aGUgY2hhcnQsIG9yIGEgc2VyaWFsaXplZCBzdHJpbmcgdmVyc2lvbiBvZiB0aGF0IG9iamVjdC5cbiAgICAgKiBUaGUgZm9ybWF0IG9mIHRoaXMgb2JqZWN0IGlzIHNob3duIGluIHRoZVxuICAgICAqIHtAbGluayBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9jaGFydC9pbnRlcmFjdGl2ZS9kb2NzL3JlZmVyZW5jZSNnb29nbGUudmlzdWFsaXphdGlvbi5kcmF3Y2hhcnQgYGRyYXdDaGFydCgpYH0gZG9jdW1lbnRhdGlvbi5cbiAgICAgKlxuICAgICAqIFRoZSBgY29udGFpbmVyYCBhbmQgYGNvbnRhaW5lcklkYCB3aWxsIGJlIG92ZXJ3cml0dGVuIGJ5IHRoaXMgY29tcG9uZW50IHRvIGFsbG93XG4gICAgICogcmVuZGVyaW5nIHRoZSBjaGFydCBpbnRvIHRoZSBjb21wb25lbnRzJyB0ZW1wbGF0ZS5cbiAgICAgKi9cbiAgICBzcGVjcz86IGdvb2dsZS52aXN1YWxpemF0aW9uLkNoYXJ0U3BlY3M7XG4gICAgZXJyb3I6IEV2ZW50RW1pdHRlcjxDaGFydEVycm9yRXZlbnQ+O1xuICAgIHJlYWR5OiBFdmVudEVtaXR0ZXI8Q2hhcnRSZWFkeUV2ZW50PGdvb2dsZS52aXN1YWxpemF0aW9uLkNoYXJ0QmFzZT4+O1xuICAgIHNlbGVjdDogRXZlbnRFbWl0dGVyPENoYXJ0U2VsZWN0aW9uQ2hhbmdlZEV2ZW50PjtcbiAgICBwcml2YXRlIHdyYXBwZXI7XG4gICAgcHJpdmF0ZSB3cmFwcGVyUmVhZHlTdWJqZWN0O1xuICAgIHByaXZhdGUgaW5pdGlhbGl6ZWQ7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZiwgc2NyaXB0TG9hZGVyU2VydmljZTogU2NyaXB0TG9hZGVyU2VydmljZSk7XG4gICAgZ2V0IGNoYXJ0KCk6IGdvb2dsZS52aXN1YWxpemF0aW9uLkNoYXJ0QmFzZSB8IG51bGw7XG4gICAgZ2V0IHdyYXBwZXJSZWFkeSQoKTogaW1wb3J0KFwicnhqc1wiKS5PYnNlcnZhYmxlPGdvb2dsZS52aXN1YWxpemF0aW9uLkNoYXJ0V3JhcHBlcj47XG4gICAgZ2V0IGNoYXJ0V3JhcHBlcigpOiBnb29nbGUudmlzdWFsaXphdGlvbi5DaGFydFdyYXBwZXI7XG4gICAgc2V0IGNoYXJ0V3JhcHBlcih3cmFwcGVyOiBnb29nbGUudmlzdWFsaXphdGlvbi5DaGFydFdyYXBwZXIpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgcHJpdmF0ZSB1cGRhdGVDaGFydDtcbiAgICBwcml2YXRlIGRyYXdDaGFydDtcbiAgICBwcml2YXRlIHJlZ2lzdGVyQ2hhcnRFdmVudHM7XG59XG4iXX0=