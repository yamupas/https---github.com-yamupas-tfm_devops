{"version":3,"file":"mtxGrid.js","sources":["ng://@ng-matero/extensions/data-grid/grid.interface.ts","ng://@ng-matero/extensions/data-grid/grid.service.ts","ng://@ng-matero/extensions/data-grid/grid.component.ts","ng://@ng-matero/extensions/data-grid/cell.component.ts","ng://@ng-matero/extensions/data-grid/column-menu.component.ts","ng://@ng-matero/extensions/data-grid/expansion-toggle.directive.ts","ng://@ng-matero/extensions/data-grid/cell-selection.directive.ts","ng://@ng-matero/extensions/data-grid/grid.module.ts"],"sourcesContent":["import { TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * Tag\r\n */\r\nexport interface MtxGridColumnTag {\r\n  [key: number]: MtxGridColumnTagValue;\r\n  [key: string]: MtxGridColumnTagValue;\r\n}\r\nexport interface MtxGridColumnTagValue {\r\n  text?: string;\r\n  color?: string;\r\n}\r\n\r\n/**\r\n * Button\r\n */\r\nexport interface MtxGridColumnButton {\r\n  type?: 'basic' | 'icon';\r\n  text?: string;\r\n  icon?: string;\r\n  color?: 'primary' | 'accent' | 'warn';\r\n  click?: (record: any) => void;\r\n  pop?: boolean;\r\n  popTitle?: string;\r\n  children?: MtxGridColumnButton[];\r\n  iif?: (record: any) => boolean;\r\n  tooltip?: string;\r\n}\r\n\r\n/**\r\n * Grid\r\n */\r\nexport interface MtxGridColumn {\r\n  field: string;\r\n  header?: string;\r\n  hide?: boolean;\r\n  disabled?: boolean;\r\n  pinned?: 'left' | 'right';\r\n  left?: string;\r\n  right?: string;\r\n  width?: string;\r\n  resizable?: boolean;\r\n  sortable?: boolean | string;\r\n  type?: 'tag' | 'button' | 'link' | 'image' | 'number' | 'currency' | 'percent' | 'boolean';\r\n  tag?: MtxGridColumnTag;\r\n  buttons?: MtxGridColumnButton[];\r\n  formatter?: (rowData: any, colDef?: any) => void;\r\n  cellTemplate?: TemplateRef<any> | null;\r\n  showExpand?: boolean;\r\n  description?: string;\r\n  i18n?: string;\r\n  summary?: ((colData: any, colDef?: any) => void) | string;\r\n}\r\n\r\n/**\r\n * Column selection\r\n */\r\nexport interface MtxGridColumnSelectionItem {\r\n  label: string;\r\n  field: string;\r\n  show?: boolean;\r\n  hide?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\n/**\r\n * Cell Template\r\n */\r\nexport interface MtxGridCellTemplate {\r\n  [key: string]: TemplateRef<any>;\r\n}\r\n\r\n/**\r\n * Row Selection Formatter\r\n */\r\nexport interface MtxGridRowSelectionFormatter {\r\n  disabled?: (rowData: any) => boolean;\r\n  hideCheckbox?: (rowData: any) => boolean;\r\n}\r\n\r\n/**\r\n * Row Class Formatter\r\n */\r\nexport interface MtxGridRowClassFormatter {\r\n  [className: string]: (rowData: any) => boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MtxGridColumn } from './grid.interface';\r\n\r\n@Injectable()\r\nexport class MtxGridService {\r\n  constructor() {}\r\n\r\n  /**\r\n   * Get cell value from column key\r\n   * @param data row data\r\n   * @param col  column definition e.g. `a.b.c`\r\n   */\r\n  getCellValue(data: {}, col: MtxGridColumn) {\r\n    const keyArr = col.field ? col.field.split('.') : [];\r\n\r\n    let tmp = '';\r\n\r\n    keyArr.forEach((key: string, i: number) => {\r\n      if (i === 0) {\r\n        tmp = data[key];\r\n      } else {\r\n        tmp = tmp && tmp[key];\r\n      }\r\n    });\r\n    return tmp;\r\n  }\r\n\r\n  /**\r\n   * Remove white spaces in a string and convert string to array\r\n   * @param str string\r\n   */\r\n  str2arr(str: string) {\r\n    return str.replace(/[\\r\\n\\s]/g, '').split(',');\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { Sort, MatSort } from '@angular/material/sort';\r\n\r\nimport {\r\n  MtxGridColumn,\r\n  MtxGridColumnSelectionItem,\r\n  MtxGridCellTemplate,\r\n  MtxGridRowSelectionFormatter,\r\n  MtxGridRowClassFormatter,\r\n} from './grid.interface';\r\nimport { MtxGridCellSelectionDirective } from './cell-selection.directive';\r\nimport { MtxGridExpansionToggleDirective } from './expansion-toggle.directive';\r\nimport { MtxGridService } from './grid.service';\r\n\r\n@Component({\r\n  selector: 'mtx-grid',\r\n  exportAs: 'mtxGrid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.scss'],\r\n  host: {\r\n    class: 'mtx-grid',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('expansion', [\r\n      state('collapsed', style({ height: '0', minHeight: '0', visibility: 'hidden' })),\r\n      state('expanded', style({ height: '*', visibility: 'visible' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class MtxGridComponent implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  @Input() displayedColumns: string[];\r\n\r\n  @Input() columns: MtxGridColumn[] = [];\r\n  @Input() data = [];\r\n  @Input() length = 0;\r\n  @Input() loading = false;\r\n\r\n  // Tracking function\r\n  @Input() trackBy: TrackByFunction<any>;\r\n\r\n  /** Whether to show tooltip on columns */\r\n  @Input() tooltip = true;\r\n\r\n  /** Whether to page on the front end */\r\n  @Input() pageOnFront = true;\r\n  @Input() showPaginator = true;\r\n  @Input() pageDisabled = false;\r\n  @Input() showFirstLastButtons = true;\r\n  @Input() pageIndex = 0;\r\n  @Input() pageSize = 10;\r\n  @Input() pageSizeOptions = [10, 50, 100];\r\n  @Input() hidePageSize = false;\r\n  @Output() page = new EventEmitter<PageEvent>();\r\n\r\n  /** Sort */\r\n\r\n  @Input() sortOnFront = true;\r\n  @Output() sortChange = new EventEmitter<Sort>();\r\n\r\n  /** Hover & Striped style */\r\n\r\n  @Input() rowHover = false;\r\n  @Input() rowStriped = false;\r\n\r\n  /** Expandable row */\r\n\r\n  expansionRowStates = [];\r\n\r\n  @Input() expandable = false;\r\n  @Input() expansionTemplate: TemplateRef<any>;\r\n  @Output() expansionChange = new EventEmitter<any>();\r\n\r\n  /** Whether support multiple row/cell selection */\r\n\r\n  @Input() multiSelectable = true;\r\n\r\n  /** Row selection */\r\n\r\n  rowSelection: SelectionModel<any> = new SelectionModel<any>(true, []);\r\n\r\n  @Input() rowSelected = [];\r\n  @Input() rowSelectable = false;\r\n  @Input() hideRowSelectionCheckbox = false;\r\n  @Input() rowSelectionFormatter: MtxGridRowSelectionFormatter = {};\r\n  @Input() rowClassFormatter: MtxGridRowClassFormatter = {};\r\n  @Output() rowSelectionChange = new EventEmitter<any[]>();\r\n\r\n  /** Cell selection */\r\n\r\n  cellSelection = [];\r\n\r\n  @Input() cellSelectable = true;\r\n  @Output() cellSelectionChange = new EventEmitter<any[]>();\r\n\r\n  private _selectedCell: MtxGridCellSelectionDirective;\r\n\r\n  /** Toolbar */\r\n\r\n  @Input() showToolbar = false;\r\n  @Input() toolbarTitle = '';\r\n  @Input() toolbarTemplate: TemplateRef<any>;\r\n\r\n  columnMenuData: MtxGridColumnSelectionItem[] = [];\r\n\r\n  @Input() showColumnMenuButton = true;\r\n  @Input() columnMenuButtonText = '';\r\n  @Input() columnMenuButtonType = 'stroked';\r\n  @Input() columnMenuButtonColor = '';\r\n  @Input() columnMenuButtonClass = '';\r\n  @Input() columnMenuButtonIcon = '';\r\n\r\n  @Input() columnHideable = true;\r\n  @Input() columnHidingChecked: 'show' | 'hide' = 'show';\r\n  @Output() columnHidingChange = new EventEmitter<string[]>();\r\n\r\n  @Input() columnMovable = true;\r\n  @Output() columnMovingChange = new EventEmitter<string[]>();\r\n\r\n  @Input() columnPinnable = true;\r\n  @Output() columnPinningChange = new EventEmitter<string[]>();\r\n\r\n  /** No Result */\r\n  @Input() noResultText = 'No records found';\r\n  @Input() noResultTemplate: TemplateRef<any>;\r\n\r\n  get _hasNoResult() {\r\n    return (!this.data || this.data.length === 0) && !this.loading;\r\n  }\r\n\r\n  /** thead */\r\n  @Input() headerTemplate: TemplateRef<any> | MtxGridCellTemplate;\r\n\r\n  /** tbody */\r\n  @Input() cellTemplate: TemplateRef<any> | MtxGridCellTemplate;\r\n\r\n  /** tfoot */\r\n  @Input() showSummary = false;\r\n  @Input() summaryTemplate: TemplateRef<any> | MtxGridCellTemplate;\r\n\r\n  // TODO:\r\n  get _whetherShowSummary() {\r\n    return this.showSummary;\r\n  }\r\n\r\n  /** Sidebar */\r\n  @Input() showSidebar = false;\r\n\r\n  _getColData(data: any, colDef: MtxGridColumn) {\r\n    return data.map((item: any) => item[colDef.field]);\r\n  }\r\n\r\n  _formatSummary(summary: any, data: any, colDef: MtxGridColumn) {\r\n    if (this._isString(summary)) {\r\n      return summary;\r\n    } else if (this._isFunction(summary)) {\r\n      const colData = this._getColData(data, colDef);\r\n      return summary(colData, colDef);\r\n    }\r\n  }\r\n\r\n  constructor(private _dataGridSrv: MtxGridService) {}\r\n\r\n  _isTemplateRef(obj: any) {\r\n    return obj instanceof TemplateRef;\r\n  }\r\n\r\n  _isString(fn: any) {\r\n    return Object.prototype.toString.call(fn) === '[object String]';\r\n  }\r\n\r\n  _isFunction(fn: any) {\r\n    return Object.prototype.toString.call(fn) === '[object Function]';\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  // Waiting for async data\r\n  ngOnChanges() {\r\n    this._countPinnedPosition();\r\n\r\n    this.displayedColumns = this.columns.filter(item => !item.hide).map(item => item.field);\r\n\r\n    if (this.showColumnMenuButton) {\r\n      this.columnMenuData = this.columns.map(item => {\r\n        return {\r\n          label: item.header as string,\r\n          field: item.field,\r\n          show: !item.hide,\r\n          hide: item.hide,\r\n          disabled: item.disabled,\r\n        };\r\n      });\r\n    }\r\n\r\n    if (this.rowSelectable && !this.hideRowSelectionCheckbox) {\r\n      this.displayedColumns.unshift('MtxGridCheckboxColumnDef');\r\n    }\r\n\r\n    // We should copy each item of data for expansion data\r\n    if (this.expandable) {\r\n      this.expansionRowStates = []; // reset\r\n\r\n      this.data?.forEach(_ => {\r\n        this.expansionRowStates.push({ expanded: false });\r\n      });\r\n    }\r\n\r\n    // TODO:\r\n    this.dataSource = new MatTableDataSource<any>(this.data);\r\n\r\n    if (this.pageOnFront) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    if (this.sortOnFront) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    if (this.rowSelectable) {\r\n      this.rowSelection = new SelectionModel<any>(this.multiSelectable, this.rowSelected);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  _countPinnedPosition() {\r\n    const count = (acc: number, cur: MtxGridColumn) => acc + parseFloat(cur.width || '80px');\r\n\r\n    const pinnedLeftCols = this.columns.filter(col => col.pinned && col.pinned === 'left');\r\n    pinnedLeftCols.forEach((item, idx) => {\r\n      item.left = pinnedLeftCols.slice(0, idx).reduce(count, 0) + 'px';\r\n    });\r\n\r\n    const pinnedRightCols = this.columns\r\n      .filter(col => col.pinned && col.pinned === 'right')\r\n      .reverse();\r\n    pinnedRightCols.forEach((item, idx) => {\r\n      item.right = pinnedRightCols.slice(0, idx).reduce(count, 0) + 'px';\r\n    });\r\n  }\r\n\r\n  _isOddRow(index: number, dataIndex: number) {\r\n    return typeof index === 'undefined' ? dataIndex % 2 : index % 2;\r\n  }\r\n\r\n  _getIndex(index: number, dataIndex: number) {\r\n    return typeof index === 'undefined' ? dataIndex : index;\r\n  }\r\n\r\n  _handleSortChange(sort: Sort) {\r\n    this.sortChange.emit(sort);\r\n  }\r\n\r\n  /** Expansion change event */\r\n  _handleExpansionChange(\r\n    expansionRef: MtxGridExpansionToggleDirective,\r\n    rowData: any,\r\n    column: any,\r\n    index: number\r\n  ) {\r\n    if (this.expandable) {\r\n      this.expansionRowStates[index].expanded = !this.expansionRowStates[index].expanded;\r\n    }\r\n    this.expansionChange.emit({ opened: expansionRef.expended, data: rowData, index, column });\r\n  }\r\n\r\n  /** Cell select event */\r\n  _selectCell(cellRef: MtxGridCellSelectionDirective, rowData: any, colDef: any): void {\r\n    // If not the same cell\r\n    if (this._selectedCell !== cellRef) {\r\n      const colValue = this._dataGridSrv.getCellValue(rowData, colDef);\r\n      this.cellSelection = []; // reset\r\n      this.cellSelection.push({ cellData: colValue, rowData, colDef });\r\n\r\n      this.cellSelectionChange.emit(this.cellSelection);\r\n\r\n      if (this._selectedCell) {\r\n        this._selectedCell.deselect(); // the selectedCell will be undefined\r\n      }\r\n    }\r\n\r\n    this._selectedCell = cellRef.selected ? cellRef : undefined;\r\n  }\r\n\r\n  /** Row select event */\r\n  _selectRow(event: MouseEvent, rowData: any) {\r\n    if (\r\n      this.rowSelectable &&\r\n      !(this.rowSelectionFormatter.disabled && this.rowSelectionFormatter.disabled(rowData)) &&\r\n      !(this.rowSelectionFormatter.hideCheckbox && this.rowSelectionFormatter.hideCheckbox(rowData))\r\n    ) {\r\n      // metaKey -> command key\r\n      if (!event.ctrlKey && !event.metaKey) {\r\n        this.rowSelection.clear();\r\n      }\r\n\r\n      this._toggleNormalCheckbox(rowData);\r\n    }\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  _isAllSelected() {\r\n    const numSelected = this.rowSelection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Select all rows if they are not all selected; otherwise clear selection. */\r\n  _toggleMasterCheckbox() {\r\n    this._isAllSelected()\r\n      ? this.rowSelection.clear()\r\n      : this.dataSource.data.forEach(row => this.rowSelection.select(row));\r\n    this.rowSelectionChange.emit(this.rowSelection.selected);\r\n  }\r\n\r\n  /** Select normal row */\r\n  _toggleNormalCheckbox(row: any) {\r\n    this.rowSelection.toggle(row);\r\n    this.rowSelectionChange.emit(this.rowSelection.selected);\r\n  }\r\n\r\n  /** Column change event */\r\n\r\n  _handleColumnHidingChange(columns: string[]) {\r\n    this.columnHidingChange.emit(columns);\r\n\r\n    this.displayedColumns = Object.assign([], columns);\r\n\r\n    if (this.rowSelectable && !this.hideRowSelectionCheckbox) {\r\n      this.displayedColumns.unshift('MtxGridCheckboxColumnDef');\r\n    }\r\n  }\r\n\r\n  _handleColumnMovingChange(columns: string[]) {\r\n    this.columnMovingChange.emit(columns);\r\n\r\n    this.displayedColumns = Object.assign([], columns);\r\n\r\n    if (this.rowSelectable && !this.hideRowSelectionCheckbox) {\r\n      this.displayedColumns.unshift('MtxGridCheckboxColumnDef');\r\n    }\r\n  }\r\n\r\n  /** Customize expansion event */\r\n  toggleExpansion(index: number) {\r\n    if (!this.expandable) {\r\n      throw new Error('The `expandable` should be set true.');\r\n    }\r\n    this.expansionRowStates[index].expanded = !this.expansionRowStates[index].expanded;\r\n    return this.expansionRowStates[index].expanded;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MtxDialog } from '@ng-matero/extensions/dialog';\r\nimport { MtxGridColumn, MtxGridColumnButton } from './grid.interface';\r\nimport { MtxGridService } from './grid.service';\r\nimport PhotoViewer from 'photoviewer';\r\n\r\n@Component({\r\n  selector: 'mtx-grid-cell',\r\n  exportAs: 'mtxGridCell',\r\n  templateUrl: './cell.component.html',\r\n})\r\nexport class MtxGridCellComponent implements OnInit {\r\n  /** Row data */\r\n  @Input() rowData = {};\r\n\r\n  /** Column definition */\r\n  @Input() colDef: MtxGridColumn;\r\n\r\n  _colValue = '';\r\n\r\n  _viewer: PhotoViewer;\r\n\r\n  constructor(private _dialog: MtxDialog, private _dataGridSrv: MtxGridService) {}\r\n\r\n  ngOnInit() {\r\n    this._colValue = this._dataGridSrv.getCellValue(this.rowData, this.colDef);\r\n  }\r\n\r\n  _handleActionConfirm(event: MouseEvent, title: string, fn?: (p: any) => void, data?: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this._dialog.confirm(title, () => fn(data));\r\n  }\r\n\r\n  _handleActionClick(event: MouseEvent, btn: MtxGridColumnButton, rowData: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    btn.click(rowData);\r\n  }\r\n\r\n  /** Preview big image */\r\n  _onPreview(urlStr: string, multi = false) {\r\n    const imgs = [];\r\n\r\n    let options: PhotoViewer.Options = {};\r\n\r\n    if (multi) {\r\n      this._dataGridSrv.str2arr(urlStr).forEach((url, index) => {\r\n        imgs.push({ title: index + 1, src: url });\r\n      });\r\n    } else {\r\n      this._dataGridSrv.str2arr(urlStr).forEach((url, index) => {\r\n        imgs.push({ src: url });\r\n      });\r\n\r\n      options = {\r\n        title: false,\r\n        footToolbar: ['zoomIn', 'zoomOut', 'rotateRight', 'rotateLeft', 'actualSize'],\r\n      };\r\n    }\r\n\r\n    this._viewer = new PhotoViewer(imgs, options);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { MtxGridColumnSelectionItem } from './grid.interface';\r\n\r\n@Component({\r\n  selector: 'mtx-grid-column-menu',\r\n  exportAs: 'mtxGridColumnMenu',\r\n  templateUrl: './column-menu.component.html',\r\n  styleUrls: ['./column-menu.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MtxGridColumnMenuComponent implements OnInit {\r\n  @Input() columns = [];\r\n  @Input() selectable = true;\r\n  @Input() selectedType: 'show' | 'hide' = 'show';\r\n  @Input() sortable = true;\r\n  @Input() dndSortable = true;\r\n\r\n  @Input() get buttonText() {\r\n    const defaultText = `Columns ${this.selectedType === 'show' ? 'Shown' : 'Hidden'}`;\r\n    const text = this._buttonText ? this._buttonText : defaultText;\r\n    return text;\r\n  }\r\n  set buttonText(value: string) {\r\n    this._buttonText = value;\r\n  }\r\n  private _buttonText = '';\r\n\r\n  @Input() buttonType: 'raised' | 'stroked' | 'flat' | 'icon' | 'fab' | 'mini-fab' | '' = 'stroked';\r\n  @Input() buttonColor: 'primary' | 'accent' | 'warn' | '' = '';\r\n  @Input() buttonClass = '';\r\n  @Input() buttonIcon = '';\r\n\r\n  @Output() selectionChange = new EventEmitter<string[]>();\r\n  @Output() sortChange = new EventEmitter<string[]>();\r\n\r\n  get columnFields(): string[] {\r\n    const fields = this.columns\r\n      .filter((item: MtxGridColumnSelectionItem) =>\r\n        this.selectedType === 'show' ? item.show : !item.hide\r\n      )\r\n      .map((item: MtxGridColumnSelectionItem) => item.field);\r\n    return fields;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  _handleDroped(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\r\n    this.sortChange.emit(this.columnFields);\r\n  }\r\n\r\n  _handleSelection(e: any) {\r\n    this.selectionChange.emit(this.columnFields);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[mtx-expansion-toggle]',\r\n})\r\nexport class MtxGridExpansionToggleDirective {\r\n  private _opened = false;\r\n  private _row: any;\r\n  private _tplRef: TemplateRef<any>;\r\n\r\n  @HostBinding('class.expanded')\r\n  get expended(): boolean {\r\n    return this._opened;\r\n  }\r\n\r\n  @Input()\r\n  set expandableRow(value: any) {\r\n    if (value !== this._row) {\r\n      this._row = value;\r\n    }\r\n  }\r\n\r\n  @Input('expansionRowTpl')\r\n  set template(value: TemplateRef<any>) {\r\n    if (value !== this._tplRef) {\r\n      this._tplRef = value;\r\n    }\r\n  }\r\n\r\n  @Output() toggleChange = new EventEmitter<MtxGridExpansionToggleDirective>();\r\n\r\n  constructor() {}\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.toggle();\r\n  }\r\n\r\n  toggle(): void {\r\n    this._opened = !this._opened;\r\n    this.toggleChange.emit(this);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { MtxGridComponent } from './grid.component';\r\n\r\n@Directive({\r\n  selector: '[mtx-selectable-cell]',\r\n})\r\nexport class MtxGridCellSelectionDirective {\r\n  private _selected = false;\r\n  private _rowData: any;\r\n\r\n  shiftKeyPressed = false;\r\n  ctrlKeyPressed = false;\r\n\r\n  @HostBinding('class.selected')\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  @Input()\r\n  set matSelectableRowData(value: any) {\r\n    if (value !== this._rowData) {\r\n      this._rowData = value;\r\n    }\r\n  }\r\n\r\n  @Output() cellSelectionChange = new EventEmitter<MtxGridCellSelectionDirective>();\r\n\r\n  constructor(private _dataGrid: MtxGridComponent) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.ctrlKeyPressed = event.ctrlKey;\r\n    this.shiftKeyPressed = event.shiftKey;\r\n\r\n    if (this._dataGrid.cellSelectable) {\r\n      this.select();\r\n    }\r\n  }\r\n\r\n  select(): void {\r\n    this._selected = true;\r\n    this.cellSelectionChange.emit(this);\r\n  }\r\n\r\n  deselect(): void {\r\n    this._selected = false;\r\n    this.cellSelectionChange.emit(this);\r\n  }\r\n\r\n  toggle(): void {\r\n    this._selected = !this._selected;\r\n    this.cellSelectionChange.emit(this);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\nimport { MtxDialogModule } from '@ng-matero/extensions/dialog';\r\nimport { MtxGridComponent } from './grid.component';\r\nimport { MtxGridCellComponent } from './cell.component';\r\nimport { MtxGridColumnMenuComponent } from './column-menu.component';\r\nimport { MtxGridExpansionToggleDirective } from './expansion-toggle.directive';\r\nimport { MtxGridCellSelectionDirective } from './cell-selection.directive';\r\nimport { MtxGridService } from './grid.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MtxDialogModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatMenuModule,\r\n    DragDropModule,\r\n  ],\r\n  exports: [\r\n    MtxGridComponent,\r\n    MtxGridCellComponent,\r\n    MtxGridColumnMenuComponent,\r\n    MtxGridExpansionToggleDirective,\r\n    MtxGridCellSelectionDirective,\r\n  ],\r\n  declarations: [\r\n    MtxGridComponent,\r\n    MtxGridCellComponent,\r\n    MtxGridColumnMenuComponent,\r\n    MtxGridExpansionToggleDirective,\r\n    MtxGridCellSelectionDirective,\r\n  ],\r\n  providers: [MtxGridService],\r\n})\r\nexport class MtxGridModule {}\r\n"],"names":[],"mappings":"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"}