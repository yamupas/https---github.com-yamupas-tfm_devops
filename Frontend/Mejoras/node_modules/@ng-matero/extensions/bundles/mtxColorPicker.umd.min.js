!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@angular/material/menu"),require("@angular/material/form-field"),require("@angular/material/input"),require("ngx-color/chrome"),require("@angular/cdk/a11y"),require("@angular/cdk/coercion"),require("@angular/cdk/platform"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@ng-matero/extensions/color-picker",["exports","@angular/core","@angular/common","@angular/forms","@angular/material/menu","@angular/material/form-field","@angular/material/input","ngx-color/chrome","@angular/cdk/a11y","@angular/cdk/coercion","@angular/cdk/platform","rxjs","rxjs/operators"],t):t(((e=e||self)["ng-matero"]=e["ng-matero"]||{},e["ng-matero"].extensions=e["ng-matero"].extensions||{},e["ng-matero"].extensions["color-picker"]={}),e.ng.core,e.ng.common,e.ng.forms,e.ng.material.menu,e.ng.material.formField,e.ng.material.input,e["ngx-color-chrome"],e.ng.cdk.a11y,e.ng.cdk.coercion,e.ng.cdk.platform,e.rxjs,e.rxjs.operators)}(this,(function(e,t,o,n,r,i,a,c,s,l,u,p,d){"use strict";var h=0,g=function(){function e(e,o,n,r,i,a,c){var s=this;this._focusMonitor=e,this._elementRef=o,this._changeDetectorRef=n,this._zone=r,this.ngControl=i,this._formField=a,this._document=c,this._value="",this.stateChanges=new p.Subject,this._uid="mtx-color-picker-"+h++,this._focused=!1,this._required=!1,this._disabled=!1,this.errorState=!1,this.controlType="mtx-color-picker",this._onChange=function(){},this._onTouched=function(){},this.colorChange=new t.EventEmitter,this._panelOpen=!1,this._canOpenOnNextFocus=!0,this._windowBlurHandler=function(){s._canOpenOnNextFocus=s._document.activeElement!==s._elementRef.nativeElement||s._panelOpen},e.monitor(o,!0).subscribe((function(e){s._focused&&!e&&s._onTouched(),s._focused=!!e,s.stateChanges.next()})),null!=this.ngControl&&(this.ngControl.valueAccessor=this)}return Object.defineProperty(e.prototype,"value",{get:function(){return this._value},set:function(e){this._value=e,this._onChange(e),this.stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this._id},set:function(e){this._id=e||this._uid,this.stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"placeholder",{get:function(){return this._placeholder},set:function(e){this._placeholder=e,this.stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"focused",{get:function(){return this._focused||this._panelOpen},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"empty",{get:function(){return!this.value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shouldLabelFloat",{get:function(){return this.focused||!this.empty},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"required",{get:function(){return this._required},set:function(e){this._required=l.coerceBooleanProperty(e),this.stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=l.coerceBooleanProperty(e),this.stateChanges.next()},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.ngDoCheck=function(){this.ngControl&&(this.errorState=this.ngControl.invalid&&this.ngControl.touched,this.stateChanges.next())},e.prototype.ngAfterViewInit=function(){var e=this;if("undefined"!=typeof window&&(this._zone.runOutsideAngular((function(){window.addEventListener("blur",e._windowBlurHandler)})),u._supportsShadowDom())){var t=this._elementRef.nativeElement,o=t.getRootNode?t.getRootNode():null;this._isInsideShadowRoot=o instanceof window.ShadowRoot}},e.prototype.ngOnDestroy=function(){this.stateChanges.complete(),this._focusMonitor.stopMonitoring(this._elementRef)},e.prototype.setDescribedByIds=function(e){this._ariaDescribedby=e.join(" ")},e.prototype.onContainerClick=function(){},e.prototype.writeValue=function(e){this._value=e||"",this._changeDetectorRef.markForCheck()},e.prototype.registerOnChange=function(e){this._onChange=e},e.prototype.registerOnTouched=function(e){this._onTouched=e},e.prototype._handleFocus=function(){var e=this;this.trigger.openMenu(),this._closingActionsSubscription=p.merge(this._getOutsideClickStream()).pipe().subscribe((function(t){e.trigger.closeMenu(),e._closingActionsSubscription.unsubscribe()}))},e.prototype._openPanel=function(){this._focused&&(this._panelOpen=!0)},e.prototype._closePanel=function(){this._panelOpen&&(this._panelOpen=!1,this._changeDetectorRef.markForCheck(),this._onTouched())},e.prototype._onColorChanged=function(e){this.value=e.color.hex,this.colorChange.emit({color:e.color,$event:e.$event})},e.prototype._getOutsideClickStream=function(){var e=this;return p.merge(p.fromEvent(this._document,"click"),p.fromEvent(this._document,"touchend")).pipe(d.filter((function(t){var o=e._isInsideShadowRoot&&t.composedPath?t.composedPath()[0]:t.target,n=e._formField?e._formField._elementRef.nativeElement:null;return!(o===e._elementRef.nativeElement||n&&n.contains(o))})))},e.decorators=[{type:t.Component,args:[{selector:"mtx-color-picker",exportAs:"mtxColorPicker",template:'<input matInput\n       [(ngModel)]="value"\n       [placeholder]="placeholder"\n       [disabled]="disabled"\n       (focus)="_handleFocus()"\n       autocomplete="off">\n\n<div #colorPickerTrigger="matMenuTrigger"\n     [matMenuTriggerFor]="colorPickerPopover"\n     (menuOpened)="_openPanel()"\n     (menuClosed)="_closePanel()">\n</div>\n\n<mat-menu #colorPickerPopover="matMenu" class="mtx-color-picker-panel" [hasBackdrop]="false">\n  <div class="mtx-color-picker"\n       (click)="$event.stopPropagation()"\n       (keydown)="$event.stopPropagation()">\n    <color-chrome [color]="value" (onChangeComplete)="_onColorChanged($event)"></color-chrome>\n  </div>\n</mat-menu>\n',encapsulation:t.ViewEncapsulation.None,changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[{provide:i.MatFormFieldControl,useExisting:e}],styles:[".mtx-color-picker-panel .mat-menu-content:not(:empty){padding:0}.mtx-color-picker-panel .mtx-color-picker{padding:8px}.mtx-color-picker-panel .mtx-color-picker .chrome-picker{box-shadow:none;border-radius:0}.mtx-color-picker-panel .mtx-color-picker .chrome-picker .saturation{border-radius:0}"]}]}],e.ctorParameters=function(){return[{type:s.FocusMonitor},{type:t.ElementRef},{type:t.ChangeDetectorRef},{type:t.NgZone},{type:n.NgControl,decorators:[{type:t.Optional},{type:t.Self}]},{type:i.MatFormField,decorators:[{type:t.Optional},{type:t.Host}]},{type:void 0,decorators:[{type:t.Optional},{type:t.Inject,args:[o.DOCUMENT]}]}]},e.propDecorators={value:[{type:t.Input}],id:[{type:t.Input}],placeholder:[{type:t.Input}],required:[{type:t.Input}],disabled:[{type:t.Input}],colorChange:[{type:t.Output}],trigger:[{type:t.ViewChild,args:[r.MatMenuTrigger,{static:!0}]}]},e}();var m=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule,n.FormsModule,r.MatMenuModule,i.MatFormFieldModule,a.MatInputModule,c.ColorChromeModule],exports:[g],declarations:[g]}]}],e}();e.MtxColorPickerComponent=g,e.MtxColorPickerModule=m,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=mtxColorPicker.umd.min.js.map