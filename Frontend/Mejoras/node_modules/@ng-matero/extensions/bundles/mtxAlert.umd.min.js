!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@ng-matero/extensions/alert",["exports","@angular/core","@angular/common"],t):t(((e=e||self)["ng-matero"]=e["ng-matero"]||{},e["ng-matero"].extensions=e["ng-matero"].extensions||{},e["ng-matero"].extensions.alert={}),e.ng.core,e.ng.common)}(this,(function(e,t,o){"use strict";var n=function(){function e(e){this._changeDetectorRef=e,this.type="default",this.isOpen=!0,this.elevation=0,this.closed=new t.EventEmitter}return e.prototype._onClosed=function(){this.isOpen=!1,this._changeDetectorRef.markForCheck(),this.closed.emit(this)},e.decorators=[{type:t.Component,args:[{selector:"mtx-alert",exportAs:"mtxAlert",host:{class:"mtx-alert"},template:'<ng-template [ngIf]="isOpen">\n  <div [ngClass]="[\'mtx-alert-ref\',\n                   \'mtx-alert-\' + type,\n                   \'mat-elevation-z\' + elevation,\n                    dismissible ? \'mtx-alert-dismissible\' : \'\']"\n       role="alert">\n    <ng-content></ng-content>\n    <ng-template [ngIf]="dismissible">\n      <button type="button" class="mtx-alert-close" aria-label="Close" (click)="_onClosed()">\n        <span aria-hidden="true">&times;</span>\n      </button>\n    </ng-template>\n  </div>\n</ng-template>\n',encapsulation:t.ViewEncapsulation.None,changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".mtx-alert-ref{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.mtx-alert-close{position:absolute;top:0;bottom:0;right:0;padding:0 1.25rem;font-size:1.5rem;line-height:1;color:inherit;opacity:.5;background-color:transparent;border:0;cursor:pointer}[dir=rtl] .mtx-alert-close{right:unset;left:0}.mtx-alert-close:hover{opacity:.75}.mtx-alert-dismissible{padding-right:4rem}.mtx-alert-success{background-color:#4caf50;border-color:#4caf50;color:#fff}.mtx-alert-info{background-color:#2196f3;border-color:#2196f3;color:#fff}.mtx-alert-warning{background-color:#fb8c00;border-color:#fb8c00;color:#fff}.mtx-alert-danger{background-color:#ff5252;border-color:#ff5252;color:#fff}"]}]}],e.ctorParameters=function(){return[{type:t.ChangeDetectorRef}]},e.propDecorators={type:[{type:t.Input}],isOpen:[{type:t.Input}],dismissible:[{type:t.Input}],color:[{type:t.Input}],elevation:[{type:t.Input}],closed:[{type:t.Output}]},e}();var r=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule],exports:[n],declarations:[n]}]}],e}();e.MtxAlertComponent=n,e.MtxAlertModule=r,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=mtxAlert.umd.min.js.map