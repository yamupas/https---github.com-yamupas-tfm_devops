{"version":3,"sources":["ng://@ng-matero/extensions/checkbox-group/checkbox-group.component.ts","ng://@ng-matero/extensions/checkbox-group/checkbox-group.module.ts"],"names":["MtxCheckboxGroupComponent","_changeDetectorRef","this","selectAllLabel","showSelectAll","change","EventEmitter","selectAll","selectAllIndeterminate","options","controlDisabled","_onChange","_onTouched","prototype","ngOnInit","writeValue","value","_checkMasterCheckboxState","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","filter","item","checked","disabled","every","_updateNormalCheckboxState","e","index","emit","model","_updateMasterCheckboxState","forEach","Component","args","selector","exportAs","host","class","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ChangeDetectorRef","Input","Output","MtxCheckboxGroupModule","NgModule","imports","CommonModule","FormsModule","MatCheckboxModule","exports","declarations"],"mappings":"+nBAiDE,SAAAA,EAAoBC,GAAAC,KAAAD,mBAAAA,EAfXC,KAAAC,eAAiB,aACjBD,KAAAE,eAAgB,EAEfF,KAAAG,OAAS,IAAIC,EAAAA,aAEvBJ,KAAAK,WAAY,EACZL,KAAAM,wBAAyB,EAEzBN,KAAAO,QAAoC,GAEpCP,KAAAQ,iBAAkB,EAElBR,KAAAS,UAAS,WAAoD,OAAA,MAC7DT,KAAAU,WAAU,WAAqB,OAAA,MAoEjC,OAhEEZ,EAAAa,UAAAC,SAAA,aAEAd,EAAAa,UAAAE,WAAA,SAAWC,GACLA,IACFd,KAAKO,QAAUO,GAGjBd,KAAKe,4BACLf,KAAKD,mBAAmBiB,gBAG1BlB,EAAAa,UAAAM,iBAAA,SAAiBC,GACflB,KAAKS,UAAYS,GAGnBpB,EAAAa,UAAAQ,kBAAA,SAAkBD,GAChBlB,KAAKU,WAAaQ,GAGpBpB,EAAAa,UAAAS,iBAAA,SAAiBC,GACfrB,KAAKQ,gBAAkBa,GAGjBvB,EAAAa,UAAAI,0BAAR,WACMf,KAAKO,QAAQe,QAAM,SAACC,GAAQ,OAAAA,EAAKC,UAAYD,EAAKE,YAAUC,OAAK,SAACH,GAAQ,OAACA,EAAKC,YAClFxB,KAAKK,WAAY,EACjBL,KAAKM,wBAAyB,GAE9BN,KAAKO,QAAQe,QAAM,SAACC,GAAQ,OAAAA,EAAKC,UAAYD,EAAKE,YAAUC,OAAK,SAACH,GAAQ,OAAAA,EAAKC,YAE/ExB,KAAKK,WAAY,EACjBL,KAAKM,wBAAyB,GAE9BN,KAAKM,wBAAyB,GAIlCR,EAAAa,UAAAgB,2BAAA,SAA2BC,EAAaC,GACtC7B,KAAKe,4BAELf,KAAKG,OAAO2B,KAAK,CACfC,MAAO/B,KAAKO,QACZsB,MAAKA,KAIT/B,EAAAa,UAAAqB,2BAAA,SAA2BJ,EAAaC,GACtC7B,KAAKK,WAAaL,KAAKK,UACvBL,KAAKM,wBAAyB,EAC1BN,KAAKK,UACPL,KAAKO,QACFe,QAAM,SAACC,GAAQ,OAAAA,EAAKC,UAAYD,EAAKE,YACrCQ,SAAO,SAACV,GAAQ,OAACA,EAAKC,SAAU,KAEnCxB,KAAKO,QACFe,QAAM,SAACC,GAAQ,OAAAA,EAAKC,UAAYD,EAAKE,YACrCQ,SAAO,SAACV,GAAQ,OAACA,EAAKC,UAAYD,EAAKE,YAG5CzB,KAAKG,OAAO2B,KAAK,CACfC,MAAO/B,KAAKO,QACZsB,MAAKA,yBAjGVK,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAU,mBACVC,KAAM,CACJC,MAAO,sBAETC,SAAA,4nBAEAC,cAAeC,EAAAA,kBAAkBC,KACjCC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAU,WAAO,OAAArD,KAC9BsD,OAAO,kOArBXC,EAAAA,6DA0BCC,EAAAA,6BACAA,EAAAA,sBAEAC,EAAAA,UA8EHzD,sBC5GA,SAAA0D,KAKqC,2BALpCC,EAAAA,SAAQtB,KAAA,CAAC,CACRuB,QAAS,CAACC,EAAAA,aAAcC,EAAAA,YAAaC,EAAAA,mBACrCC,QAAS,CAAChE,GACViE,aAAc,CAACjE,OAEoB0D","sourcesContent":["import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { MtxCheckboxGroupOption } from './checkbox-group.interface';\n\n@Component({\n  selector: 'mtx-checkbox-group',\n  exportAs: 'mtxCheckboxGroup',\n  host: {\n    class: 'mtx-checkbox-group',\n  },\n  templateUrl: './checkbox-group.component.html',\n  styleUrls: ['./checkbox-group.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MtxCheckboxGroupComponent),\n      multi: true,\n    },\n  ],\n})\nexport class MtxCheckboxGroupComponent implements OnInit, ControlValueAccessor {\n  @Input() selectAllLabel = 'Select All';\n  @Input() showSelectAll = true;\n\n  @Output() change = new EventEmitter<{ model: MtxCheckboxGroupOption[]; index: number }>();\n\n  selectAll = false;\n  selectAllIndeterminate = false;\n\n  options: MtxCheckboxGroupOption[] = [];\n\n  controlDisabled = false;\n\n  _onChange: (value: MtxCheckboxGroupOption[]) => void = () => null;\n  _onTouched: () => void = () => null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {}\n\n  writeValue(value: MtxCheckboxGroupOption[]): void {\n    if (value) {\n      this.options = value;\n    }\n\n    this._checkMasterCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  registerOnChange(fn: (value: MtxCheckboxGroupOption[]) => {}): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.controlDisabled = isDisabled;\n  }\n\n  private _checkMasterCheckboxState() {\n    if (this.options.filter(item => item.checked || !item.disabled).every(item => !item.checked)) {\n      this.selectAll = false;\n      this.selectAllIndeterminate = false;\n    } else if (\n      this.options.filter(item => item.checked || !item.disabled).every(item => item.checked)\n    ) {\n      this.selectAll = true;\n      this.selectAllIndeterminate = false;\n    } else {\n      this.selectAllIndeterminate = true;\n    }\n  }\n\n  _updateNormalCheckboxState(e?: boolean, index?: number): void {\n    this._checkMasterCheckboxState();\n\n    this.change.emit({\n      model: this.options,\n      index,\n    });\n  }\n\n  _updateMasterCheckboxState(e?: boolean, index?: number): void {\n    this.selectAll = !this.selectAll;\n    this.selectAllIndeterminate = false;\n    if (this.selectAll) {\n      this.options\n        .filter(item => item.checked || !item.disabled)\n        .forEach(item => (item.checked = true));\n    } else {\n      this.options\n        .filter(item => item.checked || !item.disabled)\n        .forEach(item => (item.checked = !!item.disabled));\n    }\n\n    this.change.emit({\n      model: this.options,\n      index,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MtxCheckboxGroupComponent } from './checkbox-group.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, MatCheckboxModule],\n  exports: [MtxCheckboxGroupComponent],\n  declarations: [MtxCheckboxGroupComponent],\n})\nexport class MtxCheckboxGroupModule {}\n"]}