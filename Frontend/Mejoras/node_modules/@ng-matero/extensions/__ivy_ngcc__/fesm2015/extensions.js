import { MtxAlertModule } from '@ng-matero/extensions/alert';
import * as ɵngcc0 from '@angular/core';
export { MtxAlertComponent, MtxAlertModule } from '@ng-matero/extensions/alert';
import { MtxCheckboxGroupModule } from '@ng-matero/extensions/checkbox-group';
export { MtxCheckboxGroupComponent, MtxCheckboxGroupModule } from '@ng-matero/extensions/checkbox-group';
import { MtxColorPickerModule } from '@ng-matero/extensions/color-picker';
export { MtxColorPickerComponent, MtxColorPickerModule } from '@ng-matero/extensions/color-picker';
import { MtxGridModule } from '@ng-matero/extensions/data-grid';
export { MtxGridCellComponent, MtxGridCellSelectionDirective, MtxGridColumnMenuComponent, MtxGridComponent, MtxGridExpansionToggleDirective, MtxGridModule, MtxGridService } from '@ng-matero/extensions/data-grid';
import { MtxDialogModule } from '@ng-matero/extensions/dialog';
export { MtxDialog, MtxDialogComponent, MtxDialogModule } from '@ng-matero/extensions/dialog';
import { MtxProgressModule } from '@ng-matero/extensions/progress';
export { MtxProgressComponent, MtxProgressModule } from '@ng-matero/extensions/progress';
import { MtxSelectModule } from '@ng-matero/extensions/select';
export { MtxSelectComponent, MtxSelectModule, ɵa, ɵb, ɵc, ɵd, ɵe, ɵf, ɵg, ɵh, ɵi, ɵj, ɵk, ɵl } from '@ng-matero/extensions/select';
import { MtxSplitModule } from '@ng-matero/extensions/split-pane';
export { MtxSplitComponent, MtxSplitModule, MtxSplitPaneDirective, getAreaMaxSize, getAreaMinSize, getElementPixelSize, getGutterSideAbsorptionCapacity, getInputBoolean, getInputPositiveNumber, getPointFromEvent, isUserSizesValid, updateAreaSize } from '@ng-matero/extensions/split-pane';
import { MtxText3dModule } from '@ng-matero/extensions/text3d';
export { MtxText3dComponent, MtxText3dModule } from '@ng-matero/extensions/text3d';
import { NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * Generated from: extensions.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MaterialExtensionsModule {
}
MaterialExtensionsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MaterialExtensionsModule });
MaterialExtensionsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MaterialExtensionsModule_Factory(t) { return new (t || MaterialExtensionsModule)(); }, imports: [MtxAlertModule,
        MtxCheckboxGroupModule,
        MtxColorPickerModule,
        MtxGridModule,
        MtxDialogModule,
        MtxProgressModule,
        MtxSelectModule,
        MtxText3dModule,
        MtxSplitModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MaterialExtensionsModule, { exports: function () { return [MtxAlertModule,
        MtxCheckboxGroupModule,
        MtxColorPickerModule,
        MtxGridModule,
        MtxDialogModule,
        MtxProgressModule,
        MtxSelectModule,
        MtxText3dModule,
        MtxSplitModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaterialExtensionsModule, [{
        type: NgModule,
        args: [{
                exports: [
                    MtxAlertModule,
                    MtxCheckboxGroupModule,
                    MtxColorPickerModule,
                    MtxGridModule,
                    MtxDialogModule,
                    MtxProgressModule,
                    MtxSelectModule,
                    MtxText3dModule,
                    MtxSplitModule
                ],
                declarations: []
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: extensions.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { MaterialExtensionsModule };

//# sourceMappingURL=extensions.js.map