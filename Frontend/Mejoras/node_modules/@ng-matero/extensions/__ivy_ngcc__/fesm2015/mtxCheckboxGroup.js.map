{"version":3,"file":"mtxCheckboxGroup.js","sources":["ng:/@ng-matero/extensions/checkbox-group/checkbox-group.component.ts","ng:/@ng-matero/extensions/checkbox-group/checkbox-group.module.ts","ng:/@ng-matero/extensions/checkbox-group/checkbox-group.interface.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { MtxCheckboxGroupOption } from './checkbox-group.interface';\n\n@Component({\n  selector: 'mtx-checkbox-group',\n  exportAs: 'mtxCheckboxGroup',\n  host: {\n    class: 'mtx-checkbox-group',\n  },\n  templateUrl: './checkbox-group.component.html',\n  styleUrls: ['./checkbox-group.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MtxCheckboxGroupComponent),\n      multi: true,\n    },\n  ],\n})\nexport class MtxCheckboxGroupComponent implements OnInit, ControlValueAccessor {\n  @Input() selectAllLabel = 'Select All';\n  @Input() showSelectAll = true;\n\n  @Output() change = new EventEmitter<{ model: MtxCheckboxGroupOption[]; index: number }>();\n\n  selectAll = false;\n  selectAllIndeterminate = false;\n\n  options: MtxCheckboxGroupOption[] = [];\n\n  controlDisabled = false;\n\n  _onChange: (value: MtxCheckboxGroupOption[]) => void = () => null;\n  _onTouched: () => void = () => null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {}\n\n  writeValue(value: MtxCheckboxGroupOption[]): void {\n    if (value) {\n      this.options = value;\n    }\n\n    this._checkMasterCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  registerOnChange(fn: (value: MtxCheckboxGroupOption[]) => {}): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.controlDisabled = isDisabled;\n  }\n\n  private _checkMasterCheckboxState() {\n    if (this.options.filter(item => item.checked || !item.disabled).every(item => !item.checked)) {\n      this.selectAll = false;\n      this.selectAllIndeterminate = false;\n    } else if (\n      this.options.filter(item => item.checked || !item.disabled).every(item => item.checked)\n    ) {\n      this.selectAll = true;\n      this.selectAllIndeterminate = false;\n    } else {\n      this.selectAllIndeterminate = true;\n    }\n  }\n\n  _updateNormalCheckboxState(e?: boolean, index?: number): void {\n    this._checkMasterCheckboxState();\n\n    this.change.emit({\n      model: this.options,\n      index,\n    });\n  }\n\n  _updateMasterCheckboxState(e?: boolean, index?: number): void {\n    this.selectAll = !this.selectAll;\n    this.selectAllIndeterminate = false;\n    if (this.selectAll) {\n      this.options\n        .filter(item => item.checked || !item.disabled)\n        .forEach(item => (item.checked = true));\n    } else {\n      this.options\n        .filter(item => item.checked || !item.disabled)\n        .forEach(item => (item.checked = !!item.disabled));\n    }\n\n    this.change.emit({\n      model: this.options,\n      index,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MtxCheckboxGroupComponent } from './checkbox-group.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, MatCheckboxModule],\n  exports: [MtxCheckboxGroupComponent],\n  declarations: [MtxCheckboxGroupComponent],\n})\nexport class MtxCheckboxGroupModule {}\n","export interface MtxCheckboxGroupOption {\n  label: string;\n  value: string;\n  checked?: boolean;\n  disabled?: boolean;\n}\n"]}