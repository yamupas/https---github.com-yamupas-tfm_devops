{"version":3,"file":"mtxSplit.js","sources":["ng:/@ng-matero/extensions/split-pane/interface.ts","ng:/@ng-matero/extensions/split-pane/utils.ts","ng:/@ng-matero/extensions/split-pane/split.component.ts","ng:/@ng-matero/extensions/split-pane/split-pane.directive.ts","ng:/@ng-matero/extensions/split-pane/split.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { MtxSplitPaneDirective } from './split-pane.directive';\r\n\r\nexport interface MtxSplitPoint {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface MtxSplitArea {\r\n  component: MtxSplitPaneDirective;\r\n  order: number;\r\n  size: number | null;\r\n  minSize: number | null;\r\n  maxSize: number | null;\r\n}\r\n\r\n// CREATED ON DRAG START\r\n\r\nexport interface MtxSplitSnapshot {\r\n  gutterNum: number;\r\n  allAreasSizePixel: number;\r\n  allInvolvedAreasSizePercent: number;\r\n  lastSteppedOffset: number;\r\n  areasBeforeGutter: Array<MtxSplitAreaSnapshot>;\r\n  areasAfterGutter: Array<MtxSplitAreaSnapshot>;\r\n}\r\n\r\nexport interface MtxSplitAreaSnapshot {\r\n  area: MtxSplitArea;\r\n  sizePixelAtStart: number;\r\n  sizePercentAtStart: number;\r\n}\r\n\r\n// CREATED ON DRAG PROGRESS\r\n\r\nexport interface MtxSplitSideAbsorptionCapacity {\r\n  remain: number;\r\n  list: Array<MtxSplitAreaAbsorptionCapacity>;\r\n}\r\n\r\nexport interface MtxSplitAreaAbsorptionCapacity {\r\n  areaSnapshot: MtxSplitAreaSnapshot;\r\n  pixelAbsorb: number;\r\n  percentAfterAbsorption: number;\r\n  pixelRemain: number;\r\n}\r\n\r\n// CREATED TO SEND OUTSIDE\r\n\r\nexport interface MtxSplitOutputData {\r\n  gutterNum: number;\r\n  sizes: MtxSplitOutputAreaSizes;\r\n}\r\n\r\nexport interface MtxSplitOutputAreaSizes extends Array<number | '*'> { }\r\n","import { ElementRef } from '@angular/core';\r\n\r\nimport {\r\n  MtxSplitArea,\r\n  MtxSplitPoint,\r\n  MtxSplitAreaSnapshot,\r\n  MtxSplitSideAbsorptionCapacity,\r\n  MtxSplitAreaAbsorptionCapacity,\r\n} from './interface';\r\n\r\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): MtxSplitPoint {\r\n  // TouchEvent\r\n  if (\r\n    (event as TouchEvent).changedTouches !== undefined &&\r\n    (event as TouchEvent).changedTouches.length > 0\r\n  ) {\r\n    return {\r\n      x: (event as TouchEvent).changedTouches[0].clientX,\r\n      y: (event as TouchEvent).changedTouches[0].clientY,\r\n    };\r\n  }\r\n  // MouseEvent\r\n  // tslint:disable-next-line: one-line\r\n  else if (\r\n    (event as MouseEvent).clientX !== undefined &&\r\n    (event as MouseEvent).clientY !== undefined\r\n  ) {\r\n    return {\r\n      x: (event as MouseEvent).clientX,\r\n      y: (event as MouseEvent).clientY,\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function getElementPixelSize(\r\n  elRef: ElementRef,\r\n  direction: 'horizontal' | 'vertical'\r\n): number {\r\n  const rect = (elRef.nativeElement as HTMLElement).getBoundingClientRect();\r\n\r\n  return direction === 'horizontal' ? rect.width : rect.height;\r\n}\r\n\r\nexport function getInputBoolean(v: any): boolean {\r\n  return typeof v === 'boolean' ? v : v === 'false' ? false : true;\r\n}\r\n\r\nexport function getInputPositiveNumber<T>(v: any, defaultValue: T): number | T {\r\n  if (v === null || v === undefined) {\r\n    return defaultValue;\r\n  }\r\n\r\n  v = Number(v);\r\n  return !isNaN(v) && v >= 0 ? v : defaultValue;\r\n}\r\n\r\nexport function isUserSizesValid(unit: 'percent' | 'pixel', sizes: Array<number | null>): boolean {\r\n  // All sizes have to be not null and total should be 100\r\n  if (unit === 'percent') {\r\n    const total = sizes.reduce((_total, s) => (s !== null ? _total + s : _total), 0);\r\n    return sizes.every(s => s !== null) && total > 99.9 && total < 100.1;\r\n  }\r\n\r\n  // A size at null is mandatory but only one.\r\n  if (unit === 'pixel') {\r\n    return sizes.filter(s => s === null).length === 1;\r\n  }\r\n}\r\n\r\nexport function getAreaMinSize(a: MtxSplitArea): null | number {\r\n  if (a.size === null) {\r\n    return null;\r\n  }\r\n\r\n  if (a.component.lockSize === true) {\r\n    return a.size;\r\n  }\r\n\r\n  if (a.component.minSize === null) {\r\n    return null;\r\n  }\r\n\r\n  if (a.component.minSize > a.size) {\r\n    return a.size;\r\n  }\r\n\r\n  return a.component.minSize;\r\n}\r\n\r\nexport function getAreaMaxSize(a: MtxSplitArea): null | number {\r\n  if (a.size === null) {\r\n    return null;\r\n  }\r\n\r\n  if (a.component.lockSize === true) {\r\n    return a.size;\r\n  }\r\n\r\n  if (a.component.maxSize === null) {\r\n    return null;\r\n  }\r\n\r\n  if (a.component.maxSize < a.size) {\r\n    return a.size;\r\n  }\r\n\r\n  return a.component.maxSize;\r\n}\r\n\r\nexport function getGutterSideAbsorptionCapacity(\r\n  unit: 'percent' | 'pixel',\r\n  sideAreas: Array<MtxSplitAreaSnapshot>,\r\n  pixels: number,\r\n  allAreasSizePixel: number\r\n): MtxSplitSideAbsorptionCapacity {\r\n  return sideAreas.reduce(\r\n    (acc, area) => {\r\n      const res = getAreaAbsorptionCapacity(unit, area, acc.remain, allAreasSizePixel);\r\n      acc.list.push(res);\r\n      acc.remain = res.pixelRemain;\r\n      return acc;\r\n    },\r\n    { remain: pixels, list: [] }\r\n  );\r\n}\r\n\r\nfunction getAreaAbsorptionCapacity(\r\n  unit: 'percent' | 'pixel',\r\n  areaSnapshot: MtxSplitAreaSnapshot,\r\n  pixels: number,\r\n  allAreasSizePixel: number\r\n): MtxSplitAreaAbsorptionCapacity {\r\n  // No pain no gain\r\n  if (pixels === 0) {\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: 0,\r\n      percentAfterAbsorption: areaSnapshot.sizePercentAtStart,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n\r\n  // Area start at zero and need to be reduced, not possible\r\n  if (areaSnapshot.sizePixelAtStart === 0 && pixels < 0) {\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: 0,\r\n      percentAfterAbsorption: 0,\r\n      pixelRemain: pixels,\r\n    };\r\n  }\r\n\r\n  if (unit === 'percent') {\r\n    return getAreaAbsorptionCapacityPercent(areaSnapshot, pixels, allAreasSizePixel);\r\n  }\r\n\r\n  if (unit === 'pixel') {\r\n    return getAreaAbsorptionCapacityPixel(areaSnapshot, pixels, allAreasSizePixel);\r\n  }\r\n}\r\n\r\nfunction getAreaAbsorptionCapacityPercent(\r\n  areaSnapshot: MtxSplitAreaSnapshot,\r\n  pixels: number,\r\n  allAreasSizePixel: number\r\n): MtxSplitAreaAbsorptionCapacity {\r\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\r\n  const tempPercentSize = (tempPixelSize / allAreasSizePixel) * 100;\r\n\r\n  // ENLARGE AREA\r\n\r\n  if (pixels > 0) {\r\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\r\n    if (areaSnapshot.area.maxSize !== null && tempPercentSize > areaSnapshot.area.maxSize) {\r\n      // Use area.area.maxSize as newPercentSize and return calculate pixels remaining\r\n      const maxSizePixel = (areaSnapshot.area.maxSize / 100) * allAreasSizePixel;\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: maxSizePixel,\r\n        percentAfterAbsorption: areaSnapshot.area.maxSize,\r\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - maxSizePixel,\r\n      };\r\n    }\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: pixels,\r\n      percentAfterAbsorption: tempPercentSize > 100 ? 100 : tempPercentSize,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n\r\n  // REDUCE AREA\r\n  // tslint:disable-next-line: one-line\r\n  else if (pixels < 0) {\r\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\r\n    if (areaSnapshot.area.minSize !== null && tempPercentSize < areaSnapshot.area.minSize) {\r\n      // Use area.area.minSize as newPercentSize and return calculate pixels remaining\r\n      const minSizePixel = (areaSnapshot.area.minSize / 100) * allAreasSizePixel;\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: minSizePixel,\r\n        percentAfterAbsorption: areaSnapshot.area.minSize,\r\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - minSizePixel,\r\n      };\r\n    }\r\n    // If reduced under zero > return remaining pixels\r\n    // tslint:disable-next-line: one-line\r\n    else if (tempPercentSize < 0) {\r\n      // Use 0 as newPercentSize and return calculate pixels remaining\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\r\n        percentAfterAbsorption: 0,\r\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\r\n      };\r\n    }\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: pixels,\r\n      percentAfterAbsorption: tempPercentSize,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n}\r\n\r\nfunction getAreaAbsorptionCapacityPixel(\r\n  areaSnapshot: MtxSplitAreaSnapshot,\r\n  pixels: number,\r\n  containerSizePixel: number\r\n): MtxSplitAreaAbsorptionCapacity {\r\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\r\n\r\n  // ENLARGE AREA\r\n\r\n  if (pixels > 0) {\r\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\r\n    if (areaSnapshot.area.maxSize !== null && tempPixelSize > areaSnapshot.area.maxSize) {\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: areaSnapshot.area.maxSize - areaSnapshot.sizePixelAtStart,\r\n        percentAfterAbsorption: -1,\r\n        pixelRemain: tempPixelSize - areaSnapshot.area.maxSize,\r\n      };\r\n    }\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: pixels,\r\n      percentAfterAbsorption: -1,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n\r\n  // REDUCE AREA\r\n  // tslint:disable-next-line: one-line\r\n  else if (pixels < 0) {\r\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\r\n    if (areaSnapshot.area.minSize !== null && tempPixelSize < areaSnapshot.area.minSize) {\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: areaSnapshot.area.minSize + pixels - tempPixelSize,\r\n        percentAfterAbsorption: -1,\r\n        pixelRemain: tempPixelSize - areaSnapshot.area.minSize,\r\n      };\r\n    }\r\n    // If reduced under zero > return remaining pixels\r\n    // tslint:disable-next-line: one-line\r\n    else if (tempPixelSize < 0) {\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\r\n        percentAfterAbsorption: -1,\r\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\r\n      };\r\n    }\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: pixels,\r\n      percentAfterAbsorption: -1,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n}\r\n\r\nexport function updateAreaSize(unit: 'percent' | 'pixel', item: MtxSplitAreaAbsorptionCapacity) {\r\n  if (unit === 'percent') {\r\n    item.areaSnapshot.area.size = item.percentAfterAbsorption;\r\n  } else if (unit === 'pixel') {\r\n    // Update size except for the wildcard size area\r\n    if (item.areaSnapshot.area.size !== null) {\r\n      item.areaSnapshot.area.size = item.areaSnapshot.sizePixelAtStart + item.pixelAbsorb;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Renderer2,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  ElementRef,\r\n  NgZone,\r\n  ViewChildren,\r\n  QueryList,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { Observable, Subscriber, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport {\r\n  MtxSplitArea,\r\n  MtxSplitPoint,\r\n  MtxSplitSnapshot,\r\n  MtxSplitAreaSnapshot,\r\n  MtxSplitOutputData,\r\n  MtxSplitOutputAreaSizes,\r\n} from './interface';\r\nimport { MtxSplitPaneDirective } from './split-pane.directive';\r\nimport {\r\n  getInputPositiveNumber,\r\n  getInputBoolean,\r\n  isUserSizesValid,\r\n  getAreaMinSize,\r\n  getAreaMaxSize,\r\n  getPointFromEvent,\r\n  getElementPixelSize,\r\n  getGutterSideAbsorptionCapacity,\r\n  updateAreaSize,\r\n} from './utils';\r\n\r\n/**\r\n * mtx-split\r\n *\r\n *\r\n *  PERCENT MODE ([unit]=\"'percent'\")\r\n *  ___________________________________________________________________________________________\r\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\r\n * |-------------------------------------------------------------------------------------------|\r\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\r\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\r\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\r\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\r\n * |___________________________________________________________________________________________|\r\n *                                                                                 800px         <-- el.getBoundingClientRect().width\r\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\r\n *\r\n *\r\n *  PIXEL MODE ([unit]=\"'pixel'\")\r\n *  ___________________________________________________________________________________________\r\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\r\n * |-------------------------------------------------------------------------------------------|\r\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\r\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\r\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\r\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\r\n * |___________________________________________________________________________________________|\r\n *                                                                                 800px         <-- el.getBoundingClientRect().width\r\n *\r\n */\r\n\r\n@Component({\r\n  selector: 'mtx-split',\r\n  exportAs: 'mtxSplit',\r\n  host: {\r\n    class: 'mtx-split',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: [`./split.component.scss`],\r\n  templateUrl: './split.component.html',\r\n})\r\nexport class MtxSplitComponent implements AfterViewInit, OnDestroy {\r\n  private _direction: 'horizontal' | 'vertical' = 'horizontal';\r\n\r\n  @Input() set direction(v: 'horizontal' | 'vertical') {\r\n    this._direction = v === 'vertical' ? 'vertical' : 'horizontal';\r\n\r\n    this.renderer.addClass(this.elRef.nativeElement, `mtx-split-${this._direction}`);\r\n    this.renderer.removeClass(\r\n      this.elRef.nativeElement,\r\n      `mtx-split-${this._direction === 'vertical' ? 'horizontal' : 'vertical'}`\r\n    );\r\n\r\n    this.build(false, false);\r\n  }\r\n\r\n  get direction(): 'horizontal' | 'vertical' {\r\n    return this._direction;\r\n  }\r\n\r\n  ////\r\n\r\n  private _unit: 'percent' | 'pixel' = 'percent';\r\n\r\n  @Input() set unit(v: 'percent' | 'pixel') {\r\n    this._unit = v === 'pixel' ? 'pixel' : 'percent';\r\n\r\n    this.renderer.addClass(this.elRef.nativeElement, `mtx-split-${this._unit}`);\r\n    this.renderer.removeClass(\r\n      this.elRef.nativeElement,\r\n      `mtx-split-${this._unit === 'pixel' ? 'percent' : 'pixel'}`\r\n    );\r\n\r\n    this.build(false, true);\r\n  }\r\n\r\n  get unit(): 'percent' | 'pixel' {\r\n    return this._unit;\r\n  }\r\n\r\n  ////\r\n\r\n  private _gutterSize = 12;\r\n\r\n  @Input() set gutterSize(v: number | null) {\r\n    this._gutterSize = getInputPositiveNumber(v, 11);\r\n\r\n    this.build(false, false);\r\n  }\r\n\r\n  get gutterSize(): number {\r\n    return this._gutterSize;\r\n  }\r\n\r\n  ////\r\n\r\n  private _gutterStep = 1;\r\n\r\n  @Input() set gutterStep(v: number) {\r\n    this._gutterStep = getInputPositiveNumber(v, 1);\r\n  }\r\n\r\n  get gutterStep(): number {\r\n    return this._gutterStep;\r\n  }\r\n\r\n  ////\r\n\r\n  private _restrictMove = false;\r\n\r\n  @Input() set restrictMove(v: boolean) {\r\n    this._restrictMove = getInputBoolean(v);\r\n  }\r\n\r\n  get restrictMove(): boolean {\r\n    return this._restrictMove;\r\n  }\r\n\r\n  ////\r\n\r\n  private _useTransition = false;\r\n\r\n  @Input() set useTransition(v: boolean) {\r\n    this._useTransition = getInputBoolean(v);\r\n\r\n    if (this._useTransition) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'mtx-split-transition');\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'mtx-split-transition');\r\n    }\r\n  }\r\n\r\n  get useTransition(): boolean {\r\n    return this._useTransition;\r\n  }\r\n\r\n  ////\r\n\r\n  private _disabled = false;\r\n\r\n  @Input() set disabled(v: boolean) {\r\n    this._disabled = getInputBoolean(v);\r\n\r\n    if (this._disabled) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'mtx-split-disabled');\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'mtx-split-disabled');\r\n    }\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  ////\r\n\r\n  private _dir: 'ltr' | 'rtl' = 'ltr';\r\n\r\n  @Input() set dir(v: 'ltr' | 'rtl') {\r\n    this._dir = v === 'rtl' ? 'rtl' : 'ltr';\r\n\r\n    this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);\r\n  }\r\n\r\n  get dir(): 'ltr' | 'rtl' {\r\n    return this._dir;\r\n  }\r\n\r\n  ////\r\n\r\n  private _gutterDblClickDuration = 0;\r\n\r\n  @Input() set gutterDblClickDuration(v: number) {\r\n    this._gutterDblClickDuration = getInputPositiveNumber(v, 0);\r\n  }\r\n\r\n  get gutterDblClickDuration(): number {\r\n    return this._gutterDblClickDuration;\r\n  }\r\n\r\n  ////\r\n\r\n  @Output() dragStart = new EventEmitter<MtxSplitOutputData>(false);\r\n  @Output() dragEnd = new EventEmitter<MtxSplitOutputData>(false);\r\n  @Output() gutterClick = new EventEmitter<MtxSplitOutputData>(false);\r\n  @Output() gutterDblClick = new EventEmitter<MtxSplitOutputData>(false);\r\n\r\n  private transitionEndSubscriber: Subscriber<MtxSplitOutputAreaSizes>;\r\n  @Output() get transitionEnd(): Observable<MtxSplitOutputAreaSizes> {\r\n    return new Observable(subscriber => (this.transitionEndSubscriber = subscriber)).pipe(\r\n      debounceTime<MtxSplitOutputAreaSizes>(20)\r\n    );\r\n  }\r\n\r\n  private dragProgressSubject: Subject<MtxSplitOutputData> = new Subject();\r\n  dragProgress$: Observable<MtxSplitOutputData> = this.dragProgressSubject.asObservable();\r\n\r\n  ////\r\n\r\n  private isDragging = false;\r\n  private dragListeners: Array<() => void> = [];\r\n  private snapshot: MtxSplitSnapshot | null = null;\r\n  private startPoint: MtxSplitPoint | null = null;\r\n  private endPoint: MtxSplitPoint | null = null;\r\n\r\n  public readonly displayedAreas: Array<MtxSplitArea> = [];\r\n  private readonly hidedAreas: Array<MtxSplitArea> = [];\r\n\r\n  @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>;\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private elRef: ElementRef,\r\n    private cdRef: ChangeDetectorRef,\r\n    private renderer: Renderer2\r\n  ) {\r\n    // To force adding default class, could be override by user @Input() or not\r\n    this.direction = this._direction;\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      // To avoid transition at first rendering\r\n      setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'mtx-split-init'));\r\n    });\r\n  }\r\n\r\n  private getNbGutters(): number {\r\n    return this.displayedAreas.length === 0 ? 0 : this.displayedAreas.length - 1;\r\n  }\r\n\r\n  public addArea(component: MtxSplitPaneDirective): void {\r\n    const newArea: MtxSplitArea = {\r\n      component,\r\n      order: 0,\r\n      size: 0,\r\n      minSize: null,\r\n      maxSize: null,\r\n    };\r\n\r\n    if (component.visible === true) {\r\n      this.displayedAreas.push(newArea);\r\n\r\n      this.build(true, true);\r\n    } else {\r\n      this.hidedAreas.push(newArea);\r\n    }\r\n  }\r\n\r\n  public removeArea(component: MtxSplitPaneDirective): void {\r\n    if (this.displayedAreas.some(a => a.component === component)) {\r\n      const area = this.displayedAreas.find(a => a.component === component);\r\n      this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\r\n\r\n      this.build(true, true);\r\n    } else if (this.hidedAreas.some(a => a.component === component)) {\r\n      const area = this.hidedAreas.find(a => a.component === component);\r\n      this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\r\n    }\r\n  }\r\n\r\n  public updateArea(\r\n    component: MtxSplitPaneDirective,\r\n    resetOrders: boolean,\r\n    resetSizes: boolean\r\n  ): void {\r\n    if (component.visible === true) {\r\n      this.build(resetOrders, resetSizes);\r\n    }\r\n  }\r\n\r\n  public showArea(component: MtxSplitPaneDirective): void {\r\n    const area = this.hidedAreas.find(a => a.component === component);\r\n    if (area === undefined) {\r\n      return;\r\n    }\r\n\r\n    const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\r\n    this.displayedAreas.push(...areas);\r\n\r\n    this.build(true, true);\r\n  }\r\n\r\n  public hideArea(comp: MtxSplitPaneDirective): void {\r\n    const area = this.displayedAreas.find(a => a.component === comp);\r\n    if (area === undefined) {\r\n      return;\r\n    }\r\n\r\n    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\r\n    areas.forEach(_area => {\r\n      _area.order = 0;\r\n      _area.size = 0;\r\n    });\r\n    this.hidedAreas.push(...areas);\r\n\r\n    this.build(true, true);\r\n  }\r\n\r\n  public getVisibleAreaSizes(): MtxSplitOutputAreaSizes {\r\n    return this.displayedAreas.map(a => (a.size === null ? '*' : a.size));\r\n  }\r\n\r\n  public setVisibleAreaSizes(sizes: MtxSplitOutputAreaSizes): boolean {\r\n    if (sizes.length !== this.displayedAreas.length) {\r\n      return false;\r\n    }\r\n\r\n    const formatedSizes = sizes.map(s => getInputPositiveNumber(s, null));\r\n    const isValid = isUserSizesValid(this.unit, formatedSizes);\r\n\r\n    if (isValid === false) {\r\n      return false;\r\n    }\r\n\r\n    // @ts-ignore\r\n    this.displayedAreas.forEach((area, i) => (area.component._size = formatedSizes[i]));\r\n\r\n    this.build(false, true);\r\n    return true;\r\n  }\r\n\r\n  private build(resetOrders: boolean, resetSizes: boolean): void {\r\n    this.stopDragging();\r\n\r\n    // ¤ AREAS ORDER\r\n\r\n    if (resetOrders === true) {\r\n      // If user provided 'order' for each area, use it to sort them.\r\n      if (this.displayedAreas.every(a => a.component.order !== null)) {\r\n        this.displayedAreas.sort(\r\n          (a, b) => ((a.component.order as number) - b.component.order) as number\r\n        );\r\n      }\r\n\r\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\r\n      this.displayedAreas.forEach((area, i) => {\r\n        area.order = i * 2;\r\n        area.component.setStyleOrder(area.order);\r\n      });\r\n    }\r\n\r\n    // ¤ AREAS SIZE\r\n\r\n    if (resetSizes === true) {\r\n      const useUserSizes = isUserSizesValid(\r\n        this.unit,\r\n        this.displayedAreas.map(a => a.component.size)\r\n      );\r\n\r\n      switch (this.unit) {\r\n        case 'percent': {\r\n          const defaultSize = 100 / this.displayedAreas.length;\r\n\r\n          this.displayedAreas.forEach(area => {\r\n            area.size = useUserSizes ? (area.component.size as number) : defaultSize;\r\n            area.minSize = getAreaMinSize(area);\r\n            area.maxSize = getAreaMaxSize(area);\r\n          });\r\n          break;\r\n        }\r\n        case 'pixel': {\r\n          if (useUserSizes) {\r\n            this.displayedAreas.forEach(area => {\r\n              area.size = area.component.size;\r\n              area.minSize = getAreaMinSize(area);\r\n              area.maxSize = getAreaMaxSize(area);\r\n            });\r\n          } else {\r\n            const wildcardSizeAreas = this.displayedAreas.filter(a => a.component.size === null);\r\n\r\n            // No wildcard area > Need to select one arbitrarily > first\r\n            if (wildcardSizeAreas.length === 0 && this.displayedAreas.length > 0) {\r\n              this.displayedAreas.forEach((area, i) => {\r\n                area.size = i === 0 ? null : area.component.size;\r\n                area.minSize = i === 0 ? null : getAreaMinSize(area);\r\n                area.maxSize = i === 0 ? null : getAreaMaxSize(area);\r\n              });\r\n            }\r\n            // More than one wildcard area > Need to keep only one arbitrarly > first\r\n            // tslint:disable-next-line: one-line\r\n            else if (wildcardSizeAreas.length > 1) {\r\n              let alreadyGotOne = false;\r\n              this.displayedAreas.forEach(area => {\r\n                if (area.component.size === null) {\r\n                  if (alreadyGotOne === false) {\r\n                    area.size = null;\r\n                    area.minSize = null;\r\n                    area.maxSize = null;\r\n                    alreadyGotOne = true;\r\n                  } else {\r\n                    area.size = 100;\r\n                    area.minSize = null;\r\n                    area.maxSize = null;\r\n                  }\r\n                } else {\r\n                  area.size = area.component.size;\r\n                  area.minSize = getAreaMinSize(area);\r\n                  area.maxSize = getAreaMaxSize(area);\r\n                }\r\n              });\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.refreshStyleSizes();\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  private refreshStyleSizes(): void {\r\n    ///////////////////////////////////////////\r\n    // PERCENT MODE\r\n    if (this.unit === 'percent') {\r\n      // Only one area > flex-basis 100%\r\n      if (this.displayedAreas.length === 1) {\r\n        this.displayedAreas[0].component.setStyleFlex(0, 0, `100%`, false, false);\r\n      }\r\n      // Multiple areas > use each percent basis\r\n      // tslint:disable-next-line: one-line\r\n      else {\r\n        const sumGutterSize = this.getNbGutters() * this.gutterSize;\r\n\r\n        this.displayedAreas.forEach(area => {\r\n          area.component.setStyleFlex(\r\n            0,\r\n            0,\r\n            `calc( ${area.size}% - ${((area.size as number) / 100) * sumGutterSize}px )`,\r\n            area.minSize !== null && area.minSize === area.size ? true : false,\r\n            area.maxSize !== null && area.maxSize === area.size ? true : false\r\n          );\r\n        });\r\n      }\r\n    }\r\n    ///////////////////////////////////////////\r\n    // PIXEL MODE\r\n    // tslint:disable-next-line: one-line\r\n    else if (this.unit === 'pixel') {\r\n      this.displayedAreas.forEach(area => {\r\n        // Area with wildcard size\r\n        if (area.size === null) {\r\n          if (this.displayedAreas.length === 1) {\r\n            area.component.setStyleFlex(1, 1, `100%`, false, false);\r\n          } else {\r\n            area.component.setStyleFlex(1, 1, `auto`, false, false);\r\n          }\r\n        }\r\n        // Area with pixel size\r\n        // tslint:disable-next-line: one-line\r\n        else {\r\n          // Only one area > flex-basis 100%\r\n          if (this.displayedAreas.length === 1) {\r\n            area.component.setStyleFlex(0, 0, `100%`, false, false);\r\n          }\r\n          // Multiple areas > use each pixel basis\r\n          // tslint:disable-next-line: one-line\r\n          else {\r\n            area.component.setStyleFlex(\r\n              0,\r\n              0,\r\n              `${area.size}px`,\r\n              area.minSize !== null && area.minSize === area.size ? true : false,\r\n              area.maxSize !== null && area.maxSize === area.size ? true : false\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _clickTimeout: number | null = null;\r\n\r\n  public clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\r\n    const tempPoint = getPointFromEvent(event);\r\n\r\n    // Be sure mouseup/touchend happened at same point as mousedown/touchstart to trigger click/dblclick\r\n    if (this.startPoint && this.startPoint.x === tempPoint.x && this.startPoint.y === tempPoint.y) {\r\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\r\n      if (this._clickTimeout !== null) {\r\n        window.clearTimeout(this._clickTimeout);\r\n        this._clickTimeout = null;\r\n        this.notify('dblclick', gutterNum);\r\n        this.stopDragging();\r\n      }\r\n      // Else start timeout to call clickEvent at end\r\n      // tslint:disable-next-line: one-line\r\n      else {\r\n        this._clickTimeout = window.setTimeout(() => {\r\n          this._clickTimeout = null;\r\n          this.notify('click', gutterNum);\r\n          this.stopDragging();\r\n        }, this.gutterDblClickDuration);\r\n      }\r\n    }\r\n  }\r\n\r\n  public startDragging(\r\n    event: MouseEvent | TouchEvent,\r\n    gutterOrder: number,\r\n    gutterNum: number\r\n  ): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.startPoint = getPointFromEvent(event);\r\n    if (this.startPoint === null || this.disabled === true) {\r\n      return;\r\n    }\r\n\r\n    this.snapshot = {\r\n      gutterNum,\r\n      lastSteppedOffset: 0,\r\n      allAreasSizePixel:\r\n        getElementPixelSize(this.elRef, this.direction) - this.getNbGutters() * this.gutterSize,\r\n      allInvolvedAreasSizePercent: 100,\r\n      areasBeforeGutter: [],\r\n      areasAfterGutter: [],\r\n    };\r\n\r\n    this.displayedAreas.forEach(area => {\r\n      const areaSnapshot: MtxSplitAreaSnapshot = {\r\n        area,\r\n        sizePixelAtStart: getElementPixelSize(area.component.elRef, this.direction),\r\n        sizePercentAtStart: this.unit === 'percent' ? area.size : -1, // If pixel mode, anyway, will not be used.\r\n      };\r\n\r\n      if (area.order < gutterOrder) {\r\n        if (this.restrictMove === true) {\r\n          this.snapshot.areasBeforeGutter = [areaSnapshot];\r\n        } else {\r\n          this.snapshot.areasBeforeGutter.unshift(areaSnapshot);\r\n        }\r\n      } else if (area.order > gutterOrder) {\r\n        if (this.restrictMove === true) {\r\n          if (this.snapshot.areasAfterGutter.length === 0) {\r\n            this.snapshot.areasAfterGutter = [areaSnapshot];\r\n          }\r\n        } else {\r\n          this.snapshot.areasAfterGutter.push(areaSnapshot);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.snapshot.allInvolvedAreasSizePercent = [\r\n      ...this.snapshot.areasBeforeGutter,\r\n      ...this.snapshot.areasAfterGutter,\r\n    ].reduce((t, a) => t + a.sizePercentAtStart, 0);\r\n\r\n    if (\r\n      this.snapshot.areasBeforeGutter.length === 0 ||\r\n      this.snapshot.areasAfterGutter.length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.dragListeners.push(\r\n      this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this))\r\n    );\r\n    this.dragListeners.push(\r\n      this.renderer.listen('document', 'touchend', this.stopDragging.bind(this))\r\n    );\r\n    this.dragListeners.push(\r\n      this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this))\r\n    );\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.dragListeners.push(\r\n        this.renderer.listen('document', 'mousemove', this.dragEvent.bind(this))\r\n      );\r\n      this.dragListeners.push(\r\n        this.renderer.listen('document', 'touchmove', this.dragEvent.bind(this))\r\n      );\r\n    });\r\n\r\n    this.displayedAreas.forEach(area => area.component.lockEvents());\r\n\r\n    this.isDragging = true;\r\n    this.renderer.addClass(this.elRef.nativeElement, 'mtx-dragging');\r\n    this.renderer.addClass(\r\n      this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement,\r\n      'mtx-dragged'\r\n    );\r\n\r\n    this.notify('start', this.snapshot.gutterNum);\r\n  }\r\n\r\n  private dragEvent(event: MouseEvent | TouchEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this._clickTimeout !== null) {\r\n      window.clearTimeout(this._clickTimeout);\r\n      this._clickTimeout = null;\r\n    }\r\n\r\n    if (this.isDragging === false) {\r\n      return;\r\n    }\r\n\r\n    this.endPoint = getPointFromEvent(event);\r\n    if (this.endPoint === null) {\r\n      return;\r\n    }\r\n\r\n    // Calculate steppedOffset\r\n\r\n    let offset =\r\n      this.direction === 'horizontal'\r\n        ? this.startPoint.x - this.endPoint.x\r\n        : this.startPoint.y - this.endPoint.y;\r\n    if (this.dir === 'rtl') {\r\n      offset = -offset;\r\n    }\r\n    const steppedOffset = Math.round(offset / this.gutterStep) * this.gutterStep;\r\n\r\n    if (steppedOffset === this.snapshot.lastSteppedOffset) {\r\n      return;\r\n    }\r\n\r\n    this.snapshot.lastSteppedOffset = steppedOffset;\r\n\r\n    // Need to know if each gutter side areas could reacts to steppedOffset\r\n\r\n    let areasBefore = getGutterSideAbsorptionCapacity(\r\n      this.unit,\r\n      this.snapshot.areasBeforeGutter,\r\n      -steppedOffset,\r\n      this.snapshot.allAreasSizePixel\r\n    );\r\n    let areasAfter = getGutterSideAbsorptionCapacity(\r\n      this.unit,\r\n      this.snapshot.areasAfterGutter,\r\n      steppedOffset,\r\n      this.snapshot.allAreasSizePixel\r\n    );\r\n\r\n    // Each gutter side areas can't absorb all offset\r\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\r\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\r\n      } else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\r\n        areasAfter = getGutterSideAbsorptionCapacity(\r\n          this.unit,\r\n          this.snapshot.areasAfterGutter,\r\n          steppedOffset + areasBefore.remain,\r\n          this.snapshot.allAreasSizePixel\r\n        );\r\n      } else {\r\n        areasBefore = getGutterSideAbsorptionCapacity(\r\n          this.unit,\r\n          this.snapshot.areasBeforeGutter,\r\n          -(steppedOffset - areasAfter.remain),\r\n          this.snapshot.allAreasSizePixel\r\n        );\r\n      }\r\n    }\r\n    // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after gutter.\r\n    // tslint:disable-next-line: one-line\r\n    else if (areasBefore.remain !== 0) {\r\n      areasAfter = getGutterSideAbsorptionCapacity(\r\n        this.unit,\r\n        this.snapshot.areasAfterGutter,\r\n        steppedOffset + areasBefore.remain,\r\n        this.snapshot.allAreasSizePixel\r\n      );\r\n    }\r\n    // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before gutter.\r\n    // tslint:disable-next-line: one-line\r\n    else if (areasAfter.remain !== 0) {\r\n      areasBefore = getGutterSideAbsorptionCapacity(\r\n        this.unit,\r\n        this.snapshot.areasBeforeGutter,\r\n        -(steppedOffset - areasAfter.remain),\r\n        this.snapshot.allAreasSizePixel\r\n      );\r\n    }\r\n\r\n    if (this.unit === 'percent') {\r\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) -> el.getBoundingClientRect()\r\n      // If not there, playing with gutters makes total going down to 99.99875% then 99.99286%, 99.98986%,..\r\n      const all = [...areasBefore.list, ...areasAfter.list];\r\n      const areaToReset = all.find(\r\n        a =>\r\n          a.percentAfterAbsorption !== 0 &&\r\n          a.percentAfterAbsorption !== a.areaSnapshot.area.minSize &&\r\n          a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize\r\n      );\r\n\r\n      if (areaToReset) {\r\n        areaToReset.percentAfterAbsorption =\r\n          this.snapshot.allInvolvedAreasSizePercent -\r\n          all\r\n            .filter(a => a !== areaToReset)\r\n            .reduce((total, a) => total + a.percentAfterAbsorption, 0);\r\n      }\r\n    }\r\n\r\n    // Now we know areas could absorb steppedOffset, time to really update sizes\r\n\r\n    areasBefore.list.forEach(item => updateAreaSize(this.unit, item));\r\n    areasAfter.list.forEach(item => updateAreaSize(this.unit, item));\r\n\r\n    this.refreshStyleSizes();\r\n    this.notify('progress', this.snapshot.gutterNum);\r\n  }\r\n\r\n  private stopDragging(event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    if (this.isDragging === false) {\r\n      return;\r\n    }\r\n\r\n    this.displayedAreas.forEach(area => area.component.unlockEvents());\r\n\r\n    while (this.dragListeners.length > 0) {\r\n      const fct = this.dragListeners.pop();\r\n      if (fct) {\r\n        fct();\r\n      }\r\n    }\r\n\r\n    // Warning: Have to be before \"notify('end')\"\r\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\r\n    this.isDragging = false;\r\n\r\n    // If moved from starting point, notify end\r\n    if (\r\n      this.endPoint &&\r\n      (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y)\r\n    ) {\r\n      this.notify('end', this.snapshot.gutterNum);\r\n    }\r\n\r\n    this.renderer.removeClass(this.elRef.nativeElement, 'mtx-dragging');\r\n    this.renderer.removeClass(\r\n      this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement,\r\n      'mtx-dragged'\r\n    );\r\n    this.snapshot = null;\r\n\r\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\r\n    this.ngZone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        this.startPoint = null;\r\n        this.endPoint = null;\r\n      });\r\n    });\r\n  }\r\n\r\n  public notify(\r\n    type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd',\r\n    gutterNum: number\r\n  ): void {\r\n    const sizes = this.getVisibleAreaSizes();\r\n\r\n    if (type === 'start') {\r\n      this.dragStart.emit({ gutterNum, sizes });\r\n    } else if (type === 'end') {\r\n      this.dragEnd.emit({ gutterNum, sizes });\r\n    } else if (type === 'click') {\r\n      this.gutterClick.emit({ gutterNum, sizes });\r\n    } else if (type === 'dblclick') {\r\n      this.gutterDblClick.emit({ gutterNum, sizes });\r\n    } else if (type === 'transitionEnd') {\r\n      if (this.transitionEndSubscriber) {\r\n        this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));\r\n      }\r\n    } else if (type === 'progress') {\r\n      // Stay outside zone to allow users do what they want about change detection mechanism.\r\n      this.dragProgressSubject.next({ gutterNum, sizes });\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.stopDragging();\r\n  }\r\n}\r\n","import { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core';\r\n\r\nimport { MtxSplitComponent } from './split.component';\r\nimport { getInputPositiveNumber, getInputBoolean } from './utils';\r\n\r\n@Directive({\r\n  selector: 'mtx-split-pane, [mtx-split-pane]',\r\n  exportAs: 'mtxSplitPane',\r\n})\r\nexport class MtxSplitPaneDirective implements OnInit, OnDestroy {\r\n  private _order: number | null = null;\r\n\r\n  @Input() set order(v: number | null) {\r\n    this._order = getInputPositiveNumber(v, null);\r\n\r\n    this.split.updateArea(this, true, false);\r\n  }\r\n\r\n  get order(): number | null {\r\n    return this._order;\r\n  }\r\n\r\n  ////\r\n\r\n  private _size: number | null = null;\r\n\r\n  @Input() set size(v: number | null) {\r\n    this._size = getInputPositiveNumber(v, null);\r\n\r\n    this.split.updateArea(this, false, true);\r\n  }\r\n\r\n  get size(): number | null {\r\n    return this._size;\r\n  }\r\n\r\n  ////\r\n\r\n  private _minSize: number | null = null;\r\n\r\n  @Input() set minSize(v: number | null) {\r\n    this._minSize = getInputPositiveNumber(v, null);\r\n\r\n    this.split.updateArea(this, false, true);\r\n  }\r\n\r\n  get minSize(): number | null {\r\n    return this._minSize;\r\n  }\r\n\r\n  ////\r\n\r\n  private _maxSize: number | null = null;\r\n\r\n  @Input() set maxSize(v: number | null) {\r\n    this._maxSize = getInputPositiveNumber(v, null);\r\n\r\n    this.split.updateArea(this, false, true);\r\n  }\r\n\r\n  get maxSize(): number | null {\r\n    return this._maxSize;\r\n  }\r\n\r\n  ////\r\n\r\n  private _lockSize = false;\r\n\r\n  @Input() set lockSize(v: boolean) {\r\n    this._lockSize = getInputBoolean(v);\r\n\r\n    this.split.updateArea(this, false, true);\r\n  }\r\n\r\n  get lockSize(): boolean {\r\n    return this._lockSize;\r\n  }\r\n\r\n  ////\r\n\r\n  private _visible = true;\r\n\r\n  @Input() set visible(v: boolean) {\r\n    this._visible = getInputBoolean(v);\r\n\r\n    if (this._visible) {\r\n      this.split.showArea(this);\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'mtx-split-pane-hidden');\r\n    } else {\r\n      this.split.hideArea(this);\r\n      this.renderer.addClass(this.elRef.nativeElement, 'mtx-split-pane-hidden');\r\n    }\r\n  }\r\n\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  ////\r\n\r\n  private transitionListener: () => void;\r\n  private readonly lockListeners: Array<() => void> = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    public elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private split: MtxSplitComponent\r\n  ) {\r\n    this.renderer.addClass(this.elRef.nativeElement, 'mtx-split-pane');\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.split.addArea(this);\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.transitionListener = this.renderer.listen(\r\n        this.elRef.nativeElement,\r\n        'transitionend',\r\n        (event: TransitionEvent) => {\r\n          // Limit only flex-basis transition to trigger the event\r\n          if (event.propertyName === 'flex-basis') {\r\n            this.split.notify('transitionEnd', -1);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  public setStyleOrder(value: number): void {\r\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\r\n  }\r\n\r\n  public setStyleFlex(\r\n    grow: number,\r\n    shrink: number,\r\n    basis: string,\r\n    isMin: boolean,\r\n    isMax: boolean\r\n  ): void {\r\n    // Need 3 separated properties to work on IE11 (https://github.com/angular/flex-layout/issues/323)\r\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow);\r\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink);\r\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis);\r\n\r\n    if (isMin === true) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'mtx-min');\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'mtx-min');\r\n    }\r\n\r\n    if (isMax === true) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'mtx-max');\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'mtx-max');\r\n    }\r\n  }\r\n\r\n  public lockEvents(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.lockListeners.push(\r\n        this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false)\r\n      );\r\n      this.lockListeners.push(\r\n        this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false)\r\n      );\r\n    });\r\n  }\r\n\r\n  public unlockEvents(): void {\r\n    while (this.lockListeners.length > 0) {\r\n      const fct = this.lockListeners.pop();\r\n      if (fct) {\r\n        fct();\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.unlockEvents();\r\n\r\n    if (this.transitionListener) {\r\n      this.transitionListener();\r\n    }\r\n\r\n    this.split.removeArea(this);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MtxSplitComponent } from './split.component';\r\nimport { MtxSplitPaneDirective } from './split-pane.directive';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [MtxSplitComponent, MtxSplitPaneDirective],\r\n  exports: [MtxSplitComponent, MtxSplitPaneDirective],\r\n})\r\nexport class MtxSplitModule {}\r\n"]}