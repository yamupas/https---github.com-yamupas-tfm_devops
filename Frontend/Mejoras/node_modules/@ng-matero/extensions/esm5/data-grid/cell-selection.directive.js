/**
 * @fileoverview added by tsickle
 * Generated from: cell-selection.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, EventEmitter, HostBinding, HostListener, Input, Output, } from '@angular/core';
import { MtxGridComponent } from './grid.component';
var MtxGridCellSelectionDirective = /** @class */ (function () {
    function MtxGridCellSelectionDirective(_dataGrid) {
        this._dataGrid = _dataGrid;
        this._selected = false;
        this.shiftKeyPressed = false;
        this.ctrlKeyPressed = false;
        this.cellSelectionChange = new EventEmitter();
    }
    Object.defineProperty(MtxGridCellSelectionDirective.prototype, "selected", {
        get: /**
         * @return {?}
         */
        function () {
            return this._selected;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MtxGridCellSelectionDirective.prototype, "matSelectableRowData", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== this._rowData) {
                this._rowData = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    MtxGridCellSelectionDirective.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.ctrlKeyPressed = event.ctrlKey;
        this.shiftKeyPressed = event.shiftKey;
        if (this._dataGrid.cellSelectable) {
            this.select();
        }
    };
    /**
     * @return {?}
     */
    MtxGridCellSelectionDirective.prototype.select = /**
     * @return {?}
     */
    function () {
        this._selected = true;
        this.cellSelectionChange.emit(this);
    };
    /**
     * @return {?}
     */
    MtxGridCellSelectionDirective.prototype.deselect = /**
     * @return {?}
     */
    function () {
        this._selected = false;
        this.cellSelectionChange.emit(this);
    };
    /**
     * @return {?}
     */
    MtxGridCellSelectionDirective.prototype.toggle = /**
     * @return {?}
     */
    function () {
        this._selected = !this._selected;
        this.cellSelectionChange.emit(this);
    };
    MtxGridCellSelectionDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[mtx-selectable-cell]',
                },] }
    ];
    /** @nocollapse */
    MtxGridCellSelectionDirective.ctorParameters = function () { return [
        { type: MtxGridComponent }
    ]; };
    MtxGridCellSelectionDirective.propDecorators = {
        selected: [{ type: HostBinding, args: ['class.selected',] }],
        matSelectableRowData: [{ type: Input }],
        cellSelectionChange: [{ type: Output }],
        onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
    };
    return MtxGridCellSelectionDirective;
}());
export { MtxGridCellSelectionDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    MtxGridCellSelectionDirective.prototype._selected;
    /**
     * @type {?}
     * @private
     */
    MtxGridCellSelectionDirective.prototype._rowData;
    /** @type {?} */
    MtxGridCellSelectionDirective.prototype.shiftKeyPressed;
    /** @type {?} */
    MtxGridCellSelectionDirective.prototype.ctrlKeyPressed;
    /** @type {?} */
    MtxGridCellSelectionDirective.prototype.cellSelectionChange;
    /**
     * @type {?}
     * @private
     */
    MtxGridCellSelectionDirective.prototype._dataGrid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC1zZWxlY3Rpb24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5nLW1hdGVyby9leHRlbnNpb25zL2RhdGEtZ3JpZC8iLCJzb3VyY2VzIjpbImNlbGwtc2VsZWN0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sR0FDUCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVwRDtJQXdCRSx1Q0FBb0IsU0FBMkI7UUFBM0IsY0FBUyxHQUFULFNBQVMsQ0FBa0I7UUFwQnZDLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFHMUIsb0JBQWUsR0FBRyxLQUFLLENBQUM7UUFDeEIsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFjYix3QkFBbUIsR0FBRyxJQUFJLFlBQVksRUFBaUMsQ0FBQztJQUUvQixDQUFDO0lBZHBELHNCQUNJLG1EQUFROzs7O1FBRFo7WUFFRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDeEIsQ0FBQzs7O09BQUE7SUFFRCxzQkFDSSwrREFBb0I7Ozs7O1FBRHhCLFVBQ3lCLEtBQVU7WUFDakMsSUFBSSxLQUFLLEtBQUssSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7YUFDdkI7UUFDSCxDQUFDOzs7T0FBQTs7Ozs7SUFPRCwrQ0FBTzs7OztJQURQLFVBQ1EsS0FBaUI7UUFDdkIsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQztRQUV0QyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUNmO0lBQ0gsQ0FBQzs7OztJQUVELDhDQUFNOzs7SUFBTjtRQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7OztJQUVELGdEQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7OztJQUVELDhDQUFNOzs7SUFBTjtRQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7Z0JBakRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsdUJBQXVCO2lCQUNsQzs7OztnQkFKUSxnQkFBZ0I7OzsyQkFZdEIsV0FBVyxTQUFDLGdCQUFnQjt1Q0FLNUIsS0FBSztzQ0FPTCxNQUFNOzBCQUlOLFlBQVksU0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7O0lBd0JuQyxvQ0FBQztDQUFBLEFBbERELElBa0RDO1NBL0NZLDZCQUE2Qjs7Ozs7O0lBQ3hDLGtEQUEwQjs7Ozs7SUFDMUIsaURBQXNCOztJQUV0Qix3REFBd0I7O0lBQ3hCLHVEQUF1Qjs7SUFjdkIsNERBQWtGOzs7OztJQUV0RSxrREFBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIERpcmVjdGl2ZSxcclxuICBFdmVudEVtaXR0ZXIsXHJcbiAgSG9zdEJpbmRpbmcsXHJcbiAgSG9zdExpc3RlbmVyLFxyXG4gIElucHV0LFxyXG4gIE91dHB1dCxcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IE10eEdyaWRDb21wb25lbnQgfSBmcm9tICcuL2dyaWQuY29tcG9uZW50JztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW210eC1zZWxlY3RhYmxlLWNlbGxdJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIE10eEdyaWRDZWxsU2VsZWN0aW9uRGlyZWN0aXZlIHtcclxuICBwcml2YXRlIF9zZWxlY3RlZCA9IGZhbHNlO1xyXG4gIHByaXZhdGUgX3Jvd0RhdGE6IGFueTtcclxuXHJcbiAgc2hpZnRLZXlQcmVzc2VkID0gZmFsc2U7XHJcbiAgY3RybEtleVByZXNzZWQgPSBmYWxzZTtcclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zZWxlY3RlZCcpXHJcbiAgZ2V0IHNlbGVjdGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3NlbGVjdGVkO1xyXG4gIH1cclxuXHJcbiAgQElucHV0KClcclxuICBzZXQgbWF0U2VsZWN0YWJsZVJvd0RhdGEodmFsdWU6IGFueSkge1xyXG4gICAgaWYgKHZhbHVlICE9PSB0aGlzLl9yb3dEYXRhKSB7XHJcbiAgICAgIHRoaXMuX3Jvd0RhdGEgPSB2YWx1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBPdXRwdXQoKSBjZWxsU2VsZWN0aW9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxNdHhHcmlkQ2VsbFNlbGVjdGlvbkRpcmVjdGl2ZT4oKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZGF0YUdyaWQ6IE10eEdyaWRDb21wb25lbnQpIHsgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXHJcbiAgb25DbGljayhldmVudDogTW91c2VFdmVudCk6IHZvaWQge1xyXG4gICAgdGhpcy5jdHJsS2V5UHJlc3NlZCA9IGV2ZW50LmN0cmxLZXk7XHJcbiAgICB0aGlzLnNoaWZ0S2V5UHJlc3NlZCA9IGV2ZW50LnNoaWZ0S2V5O1xyXG5cclxuICAgIGlmICh0aGlzLl9kYXRhR3JpZC5jZWxsU2VsZWN0YWJsZSkge1xyXG4gICAgICB0aGlzLnNlbGVjdCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2VsZWN0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5fc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgdGhpcy5jZWxsU2VsZWN0aW9uQ2hhbmdlLmVtaXQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBkZXNlbGVjdCgpOiB2b2lkIHtcclxuICAgIHRoaXMuX3NlbGVjdGVkID0gZmFsc2U7XHJcbiAgICB0aGlzLmNlbGxTZWxlY3Rpb25DaGFuZ2UuZW1pdCh0aGlzKTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuX3NlbGVjdGVkID0gIXRoaXMuX3NlbGVjdGVkO1xyXG4gICAgdGhpcy5jZWxsU2VsZWN0aW9uQ2hhbmdlLmVtaXQodGhpcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==