import { ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core';
import { MtxSplitComponent } from './split.component';
import * as ɵngcc0 from '@angular/core';
export declare class MtxSplitPaneDirective implements OnInit, OnDestroy {
    private ngZone;
    elRef: ElementRef;
    private renderer;
    private split;
    private _order;
    set order(v: number | null);
    get order(): number | null;
    private _size;
    set size(v: number | null);
    get size(): number | null;
    private _minSize;
    set minSize(v: number | null);
    get minSize(): number | null;
    private _maxSize;
    set maxSize(v: number | null);
    get maxSize(): number | null;
    private _lockSize;
    set lockSize(v: boolean);
    get lockSize(): boolean;
    private _visible;
    set visible(v: boolean);
    get visible(): boolean;
    private transitionListener;
    private readonly lockListeners;
    constructor(ngZone: NgZone, elRef: ElementRef, renderer: Renderer2, split: MtxSplitComponent);
    ngOnInit(): void;
    setStyleOrder(value: number): void;
    setStyleFlex(grow: number, shrink: number, basis: string, isMin: boolean, isMax: boolean): void;
    lockEvents(): void;
    unlockEvents(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MtxSplitPaneDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MtxSplitPaneDirective, "mtx-split-pane, [mtx-split-pane]", ["mtxSplitPane"], { "order": "order"; "size": "size"; "minSize": "minSize"; "maxSize": "maxSize"; "lockSize": "lockSize"; "visible": "visible"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQtcGFuZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsic3BsaXQtcGFuZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBPbkluaXQsIE9uRGVzdHJveSwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNdHhTcGxpdENvbXBvbmVudCB9IGZyb20gJy4vc3BsaXQuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE10eFNwbGl0UGFuZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBlbFJlZjogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgc3BsaXQ7XG4gICAgcHJpdmF0ZSBfb3JkZXI7XG4gICAgc2V0IG9yZGVyKHY6IG51bWJlciB8IG51bGwpO1xuICAgIGdldCBvcmRlcigpOiBudW1iZXIgfCBudWxsO1xuICAgIHByaXZhdGUgX3NpemU7XG4gICAgc2V0IHNpemUodjogbnVtYmVyIHwgbnVsbCk7XG4gICAgZ2V0IHNpemUoKTogbnVtYmVyIHwgbnVsbDtcbiAgICBwcml2YXRlIF9taW5TaXplO1xuICAgIHNldCBtaW5TaXplKHY6IG51bWJlciB8IG51bGwpO1xuICAgIGdldCBtaW5TaXplKCk6IG51bWJlciB8IG51bGw7XG4gICAgcHJpdmF0ZSBfbWF4U2l6ZTtcbiAgICBzZXQgbWF4U2l6ZSh2OiBudW1iZXIgfCBudWxsKTtcbiAgICBnZXQgbWF4U2l6ZSgpOiBudW1iZXIgfCBudWxsO1xuICAgIHByaXZhdGUgX2xvY2tTaXplO1xuICAgIHNldCBsb2NrU2l6ZSh2OiBib29sZWFuKTtcbiAgICBnZXQgbG9ja1NpemUoKTogYm9vbGVhbjtcbiAgICBwcml2YXRlIF92aXNpYmxlO1xuICAgIHNldCB2aXNpYmxlKHY6IGJvb2xlYW4pO1xuICAgIGdldCB2aXNpYmxlKCk6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSB0cmFuc2l0aW9uTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBsb2NrTGlzdGVuZXJzO1xuICAgIGNvbnN0cnVjdG9yKG5nWm9uZTogTmdab25lLCBlbFJlZjogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgc3BsaXQ6IE10eFNwbGl0Q29tcG9uZW50KTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHNldFN0eWxlT3JkZXIodmFsdWU6IG51bWJlcik6IHZvaWQ7XG4gICAgc2V0U3R5bGVGbGV4KGdyb3c6IG51bWJlciwgc2hyaW5rOiBudW1iZXIsIGJhc2lzOiBzdHJpbmcsIGlzTWluOiBib29sZWFuLCBpc01heDogYm9vbGVhbik6IHZvaWQ7XG4gICAgbG9ja0V2ZW50cygpOiB2b2lkO1xuICAgIHVubG9ja0V2ZW50cygpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=