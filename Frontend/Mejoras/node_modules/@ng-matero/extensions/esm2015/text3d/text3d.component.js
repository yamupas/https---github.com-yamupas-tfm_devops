/**
 * @fileoverview added by tsickle
 * Generated from: text3d.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ContentChild, TemplateRef, ViewEncapsulation, ChangeDetectionStrategy, } from '@angular/core';
export class MtxText3dComponent {
    constructor() {
        this.text = '';
        this.depth = 20;
        this.rotateX = 60;
        this.rotateY = 0;
        this.rotateZ = 0;
    }
    /**
     * @return {?}
     */
    get transform() {
        return `rotateX(${this.rotateX}deg) rotateY(${this.rotateY}deg) rotateZ(${this.rotateZ}deg)`;
    }
    /**
     * @return {?}
     */
    get depthArr() {
        /** @type {?} */
        const tmpArr = [];
        for (let i = 1; i <= this.depth; i++) {
            tmpArr.push(i);
        }
        return tmpArr;
    }
}
MtxText3dComponent.decorators = [
    { type: Component, args: [{
                selector: 'mtx-text3d',
                exportAs: 'mtxText3d',
                host: {
                    'class': 'mtx-text3d',
                    '[style.transform]': 'transform',
                },
                template: "<span class=\"mtx-text3d-layer\" *ngFor=\"let i of depthArr\"\n      [ngStyle]=\"{'z-index': -i, 'transform': 'translate3d(0, 0,'+ -i + 'px)'}\">\n  {{text}}\n  <ng-container [ngTemplateOutlet]=\"template\"></ng-container>\n</span>\n",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".mtx-text3d{display:block;transform-style:preserve-3d;-webkit-animation:5s infinite rotate;animation:5s infinite rotate;font-weight:700}.mtx-text3d .mtx-text3d-layer{display:block;text-align:center;font-size:10rem;text-shadow:0 0 1px rgba(0,0,0,.5)}.mtx-text3d .mtx-text3d-layer:not(:first-child){position:absolute;top:0;left:0;right:0;margin:auto;transform-style:preserve-3d;color:#fbfbfb;text-shadow:0 0 20px rgba(124,124,124,.4)}.mtx-text3d .mtx-text3d-layer:first-child{color:#171717}"]
            }] }
];
/** @nocollapse */
MtxText3dComponent.ctorParameters = () => [];
MtxText3dComponent.propDecorators = {
    template: [{ type: ContentChild, args: [TemplateRef, { static: false },] }],
    text: [{ type: Input }],
    depth: [{ type: Input }],
    rotateX: [{ type: Input }],
    rotateY: [{ type: Input }],
    rotateZ: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MtxText3dComponent.prototype.template;
    /** @type {?} */
    MtxText3dComponent.prototype.text;
    /** @type {?} */
    MtxText3dComponent.prototype.depth;
    /** @type {?} */
    MtxText3dComponent.prototype.rotateX;
    /** @type {?} */
    MtxText3dComponent.prototype.rotateY;
    /** @type {?} */
    MtxText3dComponent.prototype.rotateZ;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dDNkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1tYXRlcm8vZXh0ZW5zaW9ucy90ZXh0M2QvIiwic291cmNlcyI6WyJ0ZXh0M2QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsWUFBWSxFQUNaLFdBQVcsRUFDWCxpQkFBaUIsRUFDakIsdUJBQXVCLEdBQ3hCLE1BQU0sZUFBZSxDQUFDO0FBY3ZCLE1BQU0sT0FBTyxrQkFBa0I7SUF1QjdCO1FBcEJTLFNBQUksR0FBRyxFQUFFLENBQUM7UUFFVixVQUFLLEdBQUcsRUFBRSxDQUFDO1FBRVgsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUNiLFlBQU8sR0FBRyxDQUFDLENBQUM7UUFDWixZQUFPLEdBQUcsQ0FBQyxDQUFDO0lBY04sQ0FBQzs7OztJQVpoQixJQUFJLFNBQVM7UUFDWCxPQUFPLFdBQVcsSUFBSSxDQUFDLE9BQU8sZ0JBQWdCLElBQUksQ0FBQyxPQUFPLGdCQUFnQixJQUFJLENBQUMsT0FBTyxNQUFNLENBQUM7SUFDL0YsQ0FBQzs7OztJQUVELElBQUksUUFBUTs7Y0FDSixNQUFNLEdBQUcsRUFBRTtRQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNwQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2hCO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7O1lBakNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLElBQUksRUFBRTtvQkFDSixPQUFPLEVBQUUsWUFBWTtvQkFDckIsbUJBQW1CLEVBQUUsV0FBVztpQkFDakM7Z0JBQ0QscVBBQXNDO2dCQUV0QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtnQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2FBQ2hEOzs7Ozt1QkFFRSxZQUFZLFNBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTttQkFFM0MsS0FBSztvQkFFTCxLQUFLO3NCQUVMLEtBQUs7c0JBQ0wsS0FBSztzQkFDTCxLQUFLOzs7O0lBUk4sc0NBQXlFOztJQUV6RSxrQ0FBbUI7O0lBRW5CLG1DQUFvQjs7SUFFcEIscUNBQXNCOztJQUN0QixxQ0FBcUI7O0lBQ3JCLHFDQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIENvbnRlbnRDaGlsZCxcbiAgVGVtcGxhdGVSZWYsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ210eC10ZXh0M2QnLFxuICBleHBvcnRBczogJ210eFRleHQzZCcsXG4gIGhvc3Q6IHtcbiAgICAnY2xhc3MnOiAnbXR4LXRleHQzZCcsXG4gICAgJ1tzdHlsZS50cmFuc2Zvcm1dJzogJ3RyYW5zZm9ybScsXG4gIH0sXG4gIHRlbXBsYXRlVXJsOiAnLi90ZXh0M2QuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90ZXh0M2QuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE10eFRleHQzZENvbXBvbmVudCB7XG4gIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYsIHsgc3RhdGljOiBmYWxzZSB9KSB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICBASW5wdXQoKSB0ZXh0ID0gJyc7XG5cbiAgQElucHV0KCkgZGVwdGggPSAyMDtcblxuICBASW5wdXQoKSByb3RhdGVYID0gNjA7XG4gIEBJbnB1dCgpIHJvdGF0ZVkgPSAwO1xuICBASW5wdXQoKSByb3RhdGVaID0gMDtcblxuICBnZXQgdHJhbnNmb3JtKCkge1xuICAgIHJldHVybiBgcm90YXRlWCgke3RoaXMucm90YXRlWH1kZWcpIHJvdGF0ZVkoJHt0aGlzLnJvdGF0ZVl9ZGVnKSByb3RhdGVaKCR7dGhpcy5yb3RhdGVafWRlZylgO1xuICB9XG5cbiAgZ2V0IGRlcHRoQXJyKCkge1xuICAgIGNvbnN0IHRtcEFyciA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHRoaXMuZGVwdGg7IGkrKykge1xuICAgICAgdG1wQXJyLnB1c2goaSk7XG4gICAgfVxuICAgIHJldHVybiB0bXBBcnI7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHt9XG59XG4iXX0=