import { OnInit, OnDestroy, AfterViewInit, TemplateRef } from '@angular/core';
import { FieldType as CoreFieldType, FormlyFieldConfig } from '@ngx-formly/core';
import { Subject } from 'rxjs';
import { MatFormField, MatFormFieldControl } from '@angular/material/form-field';
import { FormlyErrorStateMatcher } from './formly.error-state-matcher';
import * as ɵngcc0 from '@angular/core';
export declare abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> extends CoreFieldType<F> implements OnInit, AfterViewInit, OnDestroy, MatFormFieldControl<any> {
    matPrefix: TemplateRef<any>;
    matSuffix: TemplateRef<any>;
    formFieldControl: MatFormFieldControl<any>;
    errorStateMatcher: FormlyErrorStateMatcher;
    stateChanges: Subject<void>;
    _errorState: boolean;
    private _control;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    setDescribedByIds(ids: string[]): void;
    onContainerClick(event: MouseEvent): void;
    readonly errorState: boolean;
    readonly controlType: string;
    readonly focused: boolean;
    readonly disabled: boolean;
    readonly required: boolean;
    readonly placeholder: string;
    readonly shouldPlaceholderFloat: boolean;
    value: any;
    readonly ngControl: any;
    readonly empty: boolean;
    readonly shouldLabelFloat: boolean;
    readonly formField: MatFormField;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FieldType<any>, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FieldType<any>, never, never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQudHlwZS5kLnRzIiwic291cmNlcyI6WyJmaWVsZC50eXBlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIE9uRGVzdHJveSwgQWZ0ZXJWaWV3SW5pdCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpZWxkVHlwZSBhcyBDb3JlRmllbGRUeXBlLCBGb3JtbHlGaWVsZENvbmZpZyB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTWF0Rm9ybUZpZWxkLCBNYXRGb3JtRmllbGRDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZm9ybS1maWVsZCc7XG5pbXBvcnQgeyBGb3JtbHlFcnJvclN0YXRlTWF0Y2hlciB9IGZyb20gJy4vZm9ybWx5LmVycm9yLXN0YXRlLW1hdGNoZXInO1xuZXhwb3J0IGRlY2xhcmUgYWJzdHJhY3QgY2xhc3MgRmllbGRUeXBlPEYgZXh0ZW5kcyBGb3JtbHlGaWVsZENvbmZpZyA9IEZvcm1seUZpZWxkQ29uZmlnPiBleHRlbmRzIENvcmVGaWVsZFR5cGU8Rj4gaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSwgTWF0Rm9ybUZpZWxkQ29udHJvbDxhbnk+IHtcbiAgICBtYXRQcmVmaXg6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgbWF0U3VmZml4OiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGZvcm1GaWVsZENvbnRyb2w6IE1hdEZvcm1GaWVsZENvbnRyb2w8YW55PjtcbiAgICBlcnJvclN0YXRlTWF0Y2hlcjogRm9ybWx5RXJyb3JTdGF0ZU1hdGNoZXI7XG4gICAgc3RhdGVDaGFuZ2VzOiBTdWJqZWN0PHZvaWQ+O1xuICAgIF9lcnJvclN0YXRlOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2NvbnRyb2w7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHNldERlc2NyaWJlZEJ5SWRzKGlkczogc3RyaW5nW10pOiB2b2lkO1xuICAgIG9uQ29udGFpbmVyQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIHJlYWRvbmx5IGVycm9yU3RhdGU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgY29udHJvbFR5cGU6IHN0cmluZztcbiAgICByZWFkb25seSBmb2N1c2VkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGRpc2FibGVkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHJlcXVpcmVkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgc2hvdWxkUGxhY2Vob2xkZXJGbG9hdDogYm9vbGVhbjtcbiAgICB2YWx1ZTogYW55O1xuICAgIHJlYWRvbmx5IG5nQ29udHJvbDogYW55O1xuICAgIHJlYWRvbmx5IGVtcHR5OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHNob3VsZExhYmVsRmxvYXQ6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZm9ybUZpZWxkOiBNYXRGb3JtRmllbGQ7XG59XG4iXX0=