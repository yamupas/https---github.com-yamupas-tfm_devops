{"version":3,"file":"mat-currency-format.umd.js","sources":["ng://mat-currency-format/lib/mat-currency-format.directive.ts","ng://mat-currency-format/lib/mat-currency-format.module.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener, AfterViewInit, Input, Renderer2, Inject, LOCALE_ID } from '@angular/core';\nimport { CurrencyPipe } from '@angular/common';\n\n\n/**\n * The function to reverse the number format\n */\nexport function reverseFormatNumber(val, locale) {\n  const group = new Intl.NumberFormat(locale).format(1111).replace(/1/g, '');\n  const decimal = new Intl.NumberFormat(locale).format(1.1).replace(/1/g, '');\n  let reversedCurrencyVal = val.replace(new RegExp('\\\\' + group, 'g'), '');\n  reversedCurrencyVal = reversedCurrencyVal.replace(new RegExp('\\\\' + decimal, 'g'), '.');\n  const reversedVal = reversedCurrencyVal.replace(/[^\\d.-]/g, '');\n  return Number.isNaN(reversedVal) ? 0 : reversedVal;\n}\n@Directive({\n  selector: '[mvndrMatCurrencyFormat]',\n  providers: [CurrencyPipe]\n})\nexport class MatCurrencyFormatDirective  implements AfterViewInit {\n\n  @Input() currencyCode = 'USD';\n  @Input() allowNegative = false;\n\n  constructor(private el: ElementRef, private currencyPipe: CurrencyPipe,\n              private renderer: Renderer2, @Inject(LOCALE_ID) private locale: string) { }\n\n  private regex = {\n    positiveDecimal: new RegExp(/^\\d*[\\.|,]?\\d*$/g),\n    allDecimal: new RegExp(/^-?\\d*[\\.|,]?\\d*$/g)\n  };\n\n  private specialKeys: Array<string> = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Del'];\n\n  ngAfterViewInit() {\n    this.el.nativeElement.value = this.currencyPipe.transform(this.el.nativeElement.value, this.currencyCode);\n  }\n\n  @HostListener('focus') onFocus() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/[^\\d.,-]/g, '');\n    this.el.nativeElement.select();\n  }\n\n  @HostListener('focusout') onFocusout() {\n    let val = this.el.nativeElement.value;\n    if (val.length === 0 || (val.length === 1 && [',', '.', ''].indexOf(val[0]) > -1)) {\n      val = '0';\n    }\n    this.el.nativeElement.value = this.currencyPipe.transform(val, this.currencyCode);\n  }\n\n  @HostListener('keydown', [ '$event' ])\n    onKeyDown(event: KeyboardEvent) {\n      if (this.specialKeys.indexOf(event.key) !== -1) {\n        return;\n      }\n      const matches = this.allowNegative ? event.key.match(this.regex.allDecimal) : event.key.match(this.regex.positiveDecimal);\n      if (!matches) {\n        event.preventDefault();\n      }\n  }\n\n  @HostListener('blur') onBlur($event) {\n    const amount = reverseFormatNumber(this.el.nativeElement.value, this.locale).replace(/^[^0-9]{2}..*/g, '');\n    this.el.nativeElement.value = amount;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatCurrencyFormatDirective } from './mat-currency-format.directive';\n\n\n\n@NgModule({\n  declarations: [ MatCurrencyFormatDirective],\n  imports: [\n  ],\n  exports: [MatCurrencyFormatDirective ]\n})\nexport class MatCurrencyFormatModule { }\n"],"names":["Directive","CurrencyPipe","ElementRef","Renderer2","Inject","LOCALE_ID","Input","HostListener","NgModule"],"mappings":"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"}