import { EventEmitter, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';
import { StrategyFunction } from '../service/configuration.service';
import * as ɵngcc0 from '@angular/core';
export declare class NgxPermissionsAllowStubDirective implements OnInit {
    private viewContainer;
    private templateRef;
    ngxPermissionsOnly: string | string[];
    ngxPermissionsOnlyThen: TemplateRef<any>;
    ngxPermissionsOnlyElse: TemplateRef<any>;
    ngxPermissionsExcept: string | string[];
    ngxPermissionsExceptElse: TemplateRef<any>;
    ngxPermissionsExceptThen: TemplateRef<any>;
    ngxPermissionsThen: TemplateRef<any>;
    ngxPermissionsElse: TemplateRef<any>;
    ngxPermissionsOnlyAuthorisedStrategy: string | StrategyFunction;
    ngxPermissionsOnlyUnauthorisedStrategy: string | StrategyFunction;
    ngxPermissionsExceptUnauthorisedStrategy: string | StrategyFunction;
    ngxPermissionsExceptAuthorisedStrategy: string | StrategyFunction;
    ngxPermissionsUnauthorisedStrategy: string | StrategyFunction;
    ngxPermissionsAuthorisedStrategy: string | StrategyFunction;
    permissionsAuthorized: EventEmitter<{}>;
    permissionsUnauthorized: EventEmitter<{}>;
    constructor(viewContainer: ViewContainerRef, templateRef: TemplateRef<any>);
    ngOnInit(): void;
    private getAuthorizedTemplate;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxPermissionsAllowStubDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NgxPermissionsAllowStubDirective, "[ngxPermissionsOnly],[ngxPermissionsExcept]", never, { "ngxPermissionsOnly": "ngxPermissionsOnly"; "ngxPermissionsOnlyThen": "ngxPermissionsOnlyThen"; "ngxPermissionsOnlyElse": "ngxPermissionsOnlyElse"; "ngxPermissionsExcept": "ngxPermissionsExcept"; "ngxPermissionsExceptElse": "ngxPermissionsExceptElse"; "ngxPermissionsExceptThen": "ngxPermissionsExceptThen"; "ngxPermissionsThen": "ngxPermissionsThen"; "ngxPermissionsElse": "ngxPermissionsElse"; "ngxPermissionsOnlyAuthorisedStrategy": "ngxPermissionsOnlyAuthorisedStrategy"; "ngxPermissionsOnlyUnauthorisedStrategy": "ngxPermissionsOnlyUnauthorisedStrategy"; "ngxPermissionsExceptUnauthorisedStrategy": "ngxPermissionsExceptUnauthorisedStrategy"; "ngxPermissionsExceptAuthorisedStrategy": "ngxPermissionsExceptAuthorisedStrategy"; "ngxPermissionsUnauthorisedStrategy": "ngxPermissionsUnauthorisedStrategy"; "ngxPermissionsAuthorisedStrategy": "ngxPermissionsAuthorisedStrategy"; }, { "permissionsAuthorized": "permissionsAuthorized"; "permissionsUnauthorized": "permissionsUnauthorized"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbnMtYWxsb3cuZGlyZWN0aXZlLnN0dWIuZC50cyIsInNvdXJjZXMiOlsicGVybWlzc2lvbnMtYWxsb3cuZGlyZWN0aXZlLnN0dWIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25Jbml0LCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdHJhdGVneUZ1bmN0aW9uIH0gZnJvbSAnLi4vc2VydmljZS9jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hQZXJtaXNzaW9uc0FsbG93U3R1YkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXI7XHJcbiAgICBwcml2YXRlIHRlbXBsYXRlUmVmO1xyXG4gICAgbmd4UGVybWlzc2lvbnNPbmx5OiBzdHJpbmcgfCBzdHJpbmdbXTtcclxuICAgIG5neFBlcm1pc3Npb25zT25seVRoZW46IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBuZ3hQZXJtaXNzaW9uc09ubHlFbHNlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgbmd4UGVybWlzc2lvbnNFeGNlcHQ6IHN0cmluZyB8IHN0cmluZ1tdO1xyXG4gICAgbmd4UGVybWlzc2lvbnNFeGNlcHRFbHNlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgbmd4UGVybWlzc2lvbnNFeGNlcHRUaGVuOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgbmd4UGVybWlzc2lvbnNUaGVuOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgbmd4UGVybWlzc2lvbnNFbHNlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgbmd4UGVybWlzc2lvbnNPbmx5QXV0aG9yaXNlZFN0cmF0ZWd5OiBzdHJpbmcgfCBTdHJhdGVneUZ1bmN0aW9uO1xyXG4gICAgbmd4UGVybWlzc2lvbnNPbmx5VW5hdXRob3Jpc2VkU3RyYXRlZ3k6IHN0cmluZyB8IFN0cmF0ZWd5RnVuY3Rpb247XHJcbiAgICBuZ3hQZXJtaXNzaW9uc0V4Y2VwdFVuYXV0aG9yaXNlZFN0cmF0ZWd5OiBzdHJpbmcgfCBTdHJhdGVneUZ1bmN0aW9uO1xyXG4gICAgbmd4UGVybWlzc2lvbnNFeGNlcHRBdXRob3Jpc2VkU3RyYXRlZ3k6IHN0cmluZyB8IFN0cmF0ZWd5RnVuY3Rpb247XHJcbiAgICBuZ3hQZXJtaXNzaW9uc1VuYXV0aG9yaXNlZFN0cmF0ZWd5OiBzdHJpbmcgfCBTdHJhdGVneUZ1bmN0aW9uO1xyXG4gICAgbmd4UGVybWlzc2lvbnNBdXRob3Jpc2VkU3RyYXRlZ3k6IHN0cmluZyB8IFN0cmF0ZWd5RnVuY3Rpb247XHJcbiAgICBwZXJtaXNzaW9uc0F1dGhvcml6ZWQ6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBwZXJtaXNzaW9uc1VuYXV0aG9yaXplZDogRXZlbnRFbWl0dGVyPHt9PjtcclxuICAgIGNvbnN0cnVjdG9yKHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYsIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIGdldEF1dGhvcml6ZWRUZW1wbGF0ZTtcclxufVxyXG4iXX0=