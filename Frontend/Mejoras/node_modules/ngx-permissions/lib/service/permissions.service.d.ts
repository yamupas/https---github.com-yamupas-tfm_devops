import { InjectionToken } from '@angular/core';
import { Observable } from 'rxjs';
import { NgxPermission } from '../model/permission.model';
import { NgxPermissionsStore } from '../store/permissions.store';
import * as ɵngcc0 from '@angular/core';
export declare type NgxPermissionsObject = {
    [name: string]: NgxPermission;
};
export declare const USE_PERMISSIONS_STORE: InjectionToken<{}>;
export declare class NgxPermissionsService {
    private isolate;
    private permissionsStore;
    private permissionsSource;
    permissions$: Observable<NgxPermissionsObject>;
    constructor(isolate: boolean, permissionsStore: NgxPermissionsStore);
    /**
     * Remove all permissions from permissions source
     */
    flushPermissions(): void;
    hasPermission(permission: string | string[]): Promise<boolean>;
    loadPermissions(permissions: string[], validationFunction?: Function): void;
    addPermission(permission: string | string[], validationFunction?: Function): void;
    removePermission(permissionName: string): void;
    getPermission(name: string): NgxPermission;
    getPermissions(): NgxPermissionsObject;
    private reducePermission;
    private hasArrayPermission;
    private hasPermissionValidationFunction;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxPermissionsService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NgxPermissionsService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbnMuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJwZXJtaXNzaW9ucy5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE5neFBlcm1pc3Npb24gfSBmcm9tICcuLi9tb2RlbC9wZXJtaXNzaW9uLm1vZGVsJztcclxuaW1wb3J0IHsgTmd4UGVybWlzc2lvbnNTdG9yZSB9IGZyb20gJy4uL3N0b3JlL3Blcm1pc3Npb25zLnN0b3JlJztcclxuZXhwb3J0IGRlY2xhcmUgdHlwZSBOZ3hQZXJtaXNzaW9uc09iamVjdCA9IHtcclxuICAgIFtuYW1lOiBzdHJpbmddOiBOZ3hQZXJtaXNzaW9uO1xyXG59O1xyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBVU0VfUEVSTUlTU0lPTlNfU1RPUkU6IEluamVjdGlvblRva2VuPHt9PjtcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmd4UGVybWlzc2lvbnNTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgaXNvbGF0ZTtcclxuICAgIHByaXZhdGUgcGVybWlzc2lvbnNTdG9yZTtcclxuICAgIHByaXZhdGUgcGVybWlzc2lvbnNTb3VyY2U7XHJcbiAgICBwZXJtaXNzaW9ucyQ6IE9ic2VydmFibGU8Tmd4UGVybWlzc2lvbnNPYmplY3Q+O1xyXG4gICAgY29uc3RydWN0b3IoaXNvbGF0ZTogYm9vbGVhbiwgcGVybWlzc2lvbnNTdG9yZTogTmd4UGVybWlzc2lvbnNTdG9yZSk7XHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZSBhbGwgcGVybWlzc2lvbnMgZnJvbSBwZXJtaXNzaW9ucyBzb3VyY2VcclxuICAgICAqL1xyXG4gICAgZmx1c2hQZXJtaXNzaW9ucygpOiB2b2lkO1xyXG4gICAgaGFzUGVybWlzc2lvbihwZXJtaXNzaW9uOiBzdHJpbmcgfCBzdHJpbmdbXSk6IFByb21pc2U8Ym9vbGVhbj47XHJcbiAgICBsb2FkUGVybWlzc2lvbnMocGVybWlzc2lvbnM6IHN0cmluZ1tdLCB2YWxpZGF0aW9uRnVuY3Rpb24/OiBGdW5jdGlvbik6IHZvaWQ7XHJcbiAgICBhZGRQZXJtaXNzaW9uKHBlcm1pc3Npb246IHN0cmluZyB8IHN0cmluZ1tdLCB2YWxpZGF0aW9uRnVuY3Rpb24/OiBGdW5jdGlvbik6IHZvaWQ7XHJcbiAgICByZW1vdmVQZXJtaXNzaW9uKHBlcm1pc3Npb25OYW1lOiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgZ2V0UGVybWlzc2lvbihuYW1lOiBzdHJpbmcpOiBOZ3hQZXJtaXNzaW9uO1xyXG4gICAgZ2V0UGVybWlzc2lvbnMoKTogTmd4UGVybWlzc2lvbnNPYmplY3Q7XHJcbiAgICBwcml2YXRlIHJlZHVjZVBlcm1pc3Npb247XHJcbiAgICBwcml2YXRlIGhhc0FycmF5UGVybWlzc2lvbjtcclxuICAgIHByaXZhdGUgaGFzUGVybWlzc2lvblZhbGlkYXRpb25GdW5jdGlvbjtcclxufVxyXG4iXX0=