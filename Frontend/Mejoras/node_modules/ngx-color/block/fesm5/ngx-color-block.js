import { __decorate, __extends } from 'tslib';
import { CommonModule } from '@angular/common';
import { EventEmitter, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { getContrastingColor, isValidHex, ColorWrap, CheckboardModule, SwatchModule, EditableInputModule } from 'ngx-color';

var BlockSwatchesComponent = /** @class */ (function () {
    function BlockSwatchesComponent() {
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
    }
    BlockSwatchesComponent.prototype.ngOnInit = function () {
        this.swatchStyle = {
            width: '22px',
            height: '22px',
            float: 'left',
            marginRight: '10px',
            marginBottom: '10px',
            borderRadius: '4px',
        };
    };
    BlockSwatchesComponent.prototype.handleClick = function (_a) {
        var hex = _a.hex, $event = _a.$event;
        this.onClick.emit({ hex: hex, $event: $event });
    };
    BlockSwatchesComponent.prototype.focusStyle = function (c) {
        return {
            boxShadow: c + " 0 0 4px",
        };
    };
    __decorate([
        Input()
    ], BlockSwatchesComponent.prototype, "colors", void 0);
    __decorate([
        Output()
    ], BlockSwatchesComponent.prototype, "onClick", void 0);
    __decorate([
        Output()
    ], BlockSwatchesComponent.prototype, "onSwatchHover", void 0);
    BlockSwatchesComponent = __decorate([
        Component({
            selector: 'color-block-swatches',
            template: "\n    <div class=\"block-swatches\">\n      <color-swatch\n        *ngFor=\"let c of colors\"\n        [color]=\"c\"\n        [style]=\"swatchStyle\"\n        [focusStyle]=\"focusStyle(c)\"\n        (onClick)=\"handleClick($event)\"\n        (onHover)=\"onSwatchHover.emit($event)\"\n      ></color-swatch>\n      <div class=\"clear\"></div>\n    </div>\n  ",
            styles: ["\n    .block-swatches {\n      margin-right: -10px;\n    }\n    .clear {\n      clear: both;\n    }\n  "]
        })
    ], BlockSwatchesComponent);
    return BlockSwatchesComponent;
}());

var BlockComponent = /** @class */ (function (_super) {
    __extends(BlockComponent, _super);
    function BlockComponent() {
        var _this = _super.call(this) || this;
        /** Pixel value for picker width */
        _this.width = 170;
        /** Color squares to display */
        _this.colors = [
            '#D9E3F0',
            '#F47373',
            '#697689',
            '#37D67A',
            '#2CCCE4',
            '#555555',
            '#dce775',
            '#ff8a65',
            '#ba68c8',
        ];
        _this.triangle = 'top';
        _this.input = {
            width: '100%',
            fontSize: '12px',
            color: '#666',
            border: '0px',
            outline: 'none',
            height: '22px',
            boxShadow: 'inset 0 0 0 1px #ddd',
            borderRadius: '4px',
            padding: '0 7px',
            boxSizing: 'border-box',
        };
        _this.wrap = {
            position: 'relative',
            width: '100%',
        };
        return _this;
    }
    BlockComponent.prototype.handleValueChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleBlockChange({ hex: data, $event: $event });
    };
    BlockComponent.prototype.getContrastingColor = function (hex) {
        return getContrastingColor(hex);
    };
    BlockComponent.prototype.handleBlockChange = function (_a) {
        var hex = _a.hex, $event = _a.$event;
        if (isValidHex(hex)) {
            // this.hex = hex;
            this.handleChange({
                hex: hex,
                source: 'hex',
            }, $event);
        }
    };
    __decorate([
        Input()
    ], BlockComponent.prototype, "width", void 0);
    __decorate([
        Input()
    ], BlockComponent.prototype, "colors", void 0);
    __decorate([
        Input()
    ], BlockComponent.prototype, "triangle", void 0);
    BlockComponent = __decorate([
        Component({
            selector: 'color-block',
            template: "\n  <div class=\"block-card block-picker {{ className }}\">\n    <div class=\"block-triangle\" *ngIf=\"triangle !== 'hide'\"\n      [style.border-color]=\"'transparent transparent ' + this.hex + ' transparent'\"\n    ></div>\n\n    <div class=\"block-head\" [style.background]=\"hex\">\n      <color-checkboard *ngIf=\"hex === 'transparent'\"\n        borderRadius=\"6px 6px 0 0\"\n      ></color-checkboard>\n      <div class=\"block-label\" [style.color]=\"getContrastingColor(hex)\">\n        {{ hex }}\n      </div>\n    </div>\n\n    <div class=\"block-body\">\n      <color-block-swatches [colors]=\"colors\"\n        (onClick)=\"handleBlockChange($event)\"\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\n      ></color-block-swatches>\n      <color-editable-input [value]=\"hex\"\n        (onChange)=\"handleValueChange($event)\"\n        [style]=\"{input: input, wrap: wrap}\"\n      ></color-editable-input>\n    </div>\n  </div>\n  ",
            preserveWhitespaces: false,
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: ["\n    .block-card {\n      background: #fff;\n      border-radius: 6px;\n      box-shadow: 0 1px rgba(0, 0, 0, .1);\n      position: relative;\n    }\n    .block-head {\n      align-items: center;\n      border-radius: 6px 6px 0 0;\n      display: flex;\n      height: 110px;\n      justify-content: center;\n      position: relative;\n    }\n    .block-body {\n      padding: 10px;\n    }\n    .block-label {\n      font-size: 18px;\n      position: relative;\n    }\n    .block-triangle {\n      border-style: solid;\n      border-width: 0 10px 10px 10px;\n      height: 0;\n      left: 50%;\n      margin-left: -10px;\n      position: absolute;\n      top: -10px;\n      width: 0;\n    }\n  "]
        })
    ], BlockComponent);
    return BlockComponent;
}(ColorWrap));
var ColorBlockModule = /** @class */ (function () {
    function ColorBlockModule() {
    }
    ColorBlockModule = __decorate([
        NgModule({
            declarations: [BlockComponent, BlockSwatchesComponent],
            exports: [BlockComponent, BlockSwatchesComponent],
            imports: [CommonModule, CheckboardModule, SwatchModule, EditableInputModule],
        })
    ], ColorBlockModule);
    return ColorBlockModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { BlockComponent, ColorBlockModule, BlockSwatchesComponent as Éµa };
//# sourceMappingURL=ngx-color-block.js.map
