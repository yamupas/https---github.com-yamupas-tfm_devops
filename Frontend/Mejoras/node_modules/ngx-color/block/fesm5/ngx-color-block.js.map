{"version":3,"file":"ngx-color-block.js","sources":["ng://ngx-color/block/block-swatches.component.ts","ng://ngx-color/block/block.component.ts","ng://ngx-color/block/ngx-color-block.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Shape } from 'ngx-color';\n\n@Component({\n  selector: 'color-block-swatches',\n  template: `\n    <div class=\"block-swatches\">\n      <color-swatch\n        *ngFor=\"let c of colors\"\n        [color]=\"c\"\n        [style]=\"swatchStyle\"\n        [focusStyle]=\"focusStyle(c)\"\n        (onClick)=\"handleClick($event)\"\n        (onHover)=\"onSwatchHover.emit($event)\"\n      ></color-swatch>\n      <div class=\"clear\"></div>\n    </div>\n  `,\n  styles: [`\n    .block-swatches {\n      margin-right: -10px;\n    }\n    .clear {\n      clear: both;\n    }\n  `],\n})\nexport class BlockSwatchesComponent implements OnInit {\n  @Input() colors: string[] | Shape[];\n  @Output() onClick = new EventEmitter<any>();\n  @Output() onSwatchHover = new EventEmitter<any>();\n  swatchStyle: {[key: string]: string};\n\n  constructor() { }\n\n  ngOnInit() {\n    this.swatchStyle = {\n      width: '22px',\n      height: '22px',\n      float: 'left',\n      marginRight: '10px',\n      marginBottom: '10px',\n      borderRadius: '4px',\n    };\n  }\n  handleClick({hex, $event}) {\n    this.onClick.emit({hex, $event});\n  }\n  focusStyle(c) {\n    return {\n      boxShadow: `${ c } 0 0 4px`,\n    };\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n} from '@angular/core';\n\nimport {\n  CheckboardModule,\n  ColorWrap,\n  EditableInputModule,\n  SwatchModule,\n  getContrastingColor,\n  isValidHex,\n} from 'ngx-color';\nimport { BlockSwatchesComponent } from './block-swatches.component';\n\n@Component({\n  selector: 'color-block',\n  template: `\n  <div class=\"block-card block-picker {{ className }}\">\n    <div class=\"block-triangle\" *ngIf=\"triangle !== 'hide'\"\n      [style.border-color]=\"'transparent transparent ' + this.hex + ' transparent'\"\n    ></div>\n\n    <div class=\"block-head\" [style.background]=\"hex\">\n      <color-checkboard *ngIf=\"hex === 'transparent'\"\n        borderRadius=\"6px 6px 0 0\"\n      ></color-checkboard>\n      <div class=\"block-label\" [style.color]=\"getContrastingColor(hex)\">\n        {{ hex }}\n      </div>\n    </div>\n\n    <div class=\"block-body\">\n      <color-block-swatches [colors]=\"colors\"\n        (onClick)=\"handleBlockChange($event)\"\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\n      ></color-block-swatches>\n      <color-editable-input [value]=\"hex\"\n        (onChange)=\"handleValueChange($event)\"\n        [style]=\"{input: input, wrap: wrap}\"\n      ></color-editable-input>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n    .block-card {\n      background: #fff;\n      border-radius: 6px;\n      box-shadow: 0 1px rgba(0, 0, 0, .1);\n      position: relative;\n    }\n    .block-head {\n      align-items: center;\n      border-radius: 6px 6px 0 0;\n      display: flex;\n      height: 110px;\n      justify-content: center;\n      position: relative;\n    }\n    .block-body {\n      padding: 10px;\n    }\n    .block-label {\n      font-size: 18px;\n      position: relative;\n    }\n    .block-triangle {\n      border-style: solid;\n      border-width: 0 10px 10px 10px;\n      height: 0;\n      left: 50%;\n      margin-left: -10px;\n      position: absolute;\n      top: -10px;\n      width: 0;\n    }\n  `,\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BlockComponent extends ColorWrap {\n  /** Pixel value for picker width */\n  @Input() width: string | number = 170;\n  /** Color squares to display */\n  @Input() colors = [\n    '#D9E3F0',\n    '#F47373',\n    '#697689',\n    '#37D67A',\n    '#2CCCE4',\n    '#555555',\n    '#dce775',\n    '#ff8a65',\n    '#ba68c8',\n  ];\n  @Input() triangle: 'top' | 'hide' = 'top';\n  triangleBorderColor: string;\n  input: {[key: string]: string} = {\n    width: '100%',\n    fontSize: '12px',\n    color: '#666',\n    border: '0px',\n    outline: 'none',\n    height: '22px',\n    boxShadow: 'inset 0 0 0 1px #ddd',\n    borderRadius: '4px',\n    padding: '0 7px',\n    boxSizing: 'border-box',\n  };\n  wrap: {[key: string]: string} = {\n    position: 'relative',\n    width: '100%',\n  };\n\n  constructor() {\n    super();\n  }\n\n  handleValueChange({ data, $event }) {\n    this.handleBlockChange({ hex: data, $event });\n  }\n  getContrastingColor(hex) {\n    return getContrastingColor(hex);\n  }\n  handleBlockChange({ hex, $event }) {\n    if (isValidHex(hex)) {\n      // this.hex = hex;\n      this.handleChange(\n        {\n          hex,\n          source: 'hex',\n        },\n        $event,\n      );\n    }\n  }\n}\n\n@NgModule({\n  declarations: [BlockComponent, BlockSwatchesComponent],\n  exports: [BlockComponent, BlockSwatchesComponent],\n  imports: [CommonModule, CheckboardModule, SwatchModule, EditableInputModule],\n})\nexport class ColorBlockModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './block.component';\n\nexport {BlockSwatchesComponent as Éµa} from './block-swatches.component';"],"names":[],"mappings":"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"}