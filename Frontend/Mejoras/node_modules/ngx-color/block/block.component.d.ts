import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './block-swatches.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ngx-color';
export declare class BlockComponent extends ColorWrap {
    /** Pixel value for picker width */
    width: string | number;
    /** Color squares to display */
    colors: string[];
    triangle: 'top' | 'hide';
    triangleBorderColor: string;
    input: {
        [key: string]: string;
    };
    wrap: {
        [key: string]: string;
    };
    constructor();
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    getContrastingColor(hex: any): "#fff" | "rgba(0,0,0,0.4)" | "#000";
    handleBlockChange({ hex, $event }: {
        hex: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BlockComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BlockComponent, "color-block", never, { "width": "width"; "colors": "colors"; "triangle": "triangle"; }, {}, never, never>;
}
export declare class ColorBlockModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorBlockModule, [typeof BlockComponent, typeof ɵngcc1.BlockSwatchesComponent], [typeof ɵngcc2.CommonModule, typeof ɵngcc3.CheckboardModule, typeof ɵngcc3.SwatchModule, typeof ɵngcc3.EditableInputModule], [typeof BlockComponent, typeof ɵngcc1.BlockSwatchesComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorBlockModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2suY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImJsb2NrLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3JXcmFwIH0gZnJvbSAnbmd4LWNvbG9yJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJsb2NrQ29tcG9uZW50IGV4dGVuZHMgQ29sb3JXcmFwIHtcbiAgICAvKiogUGl4ZWwgdmFsdWUgZm9yIHBpY2tlciB3aWR0aCAqL1xuICAgIHdpZHRoOiBzdHJpbmcgfCBudW1iZXI7XG4gICAgLyoqIENvbG9yIHNxdWFyZXMgdG8gZGlzcGxheSAqL1xuICAgIGNvbG9yczogc3RyaW5nW107XG4gICAgdHJpYW5nbGU6ICd0b3AnIHwgJ2hpZGUnO1xuICAgIHRyaWFuZ2xlQm9yZGVyQ29sb3I6IHN0cmluZztcbiAgICBpbnB1dDoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICB3cmFwOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIGNvbnN0cnVjdG9yKCk7XG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UoeyBkYXRhLCAkZXZlbnQgfToge1xuICAgICAgICBkYXRhOiBhbnk7XG4gICAgICAgICRldmVudDogYW55O1xuICAgIH0pOiB2b2lkO1xuICAgIGdldENvbnRyYXN0aW5nQ29sb3IoaGV4OiBhbnkpOiBcIiNmZmZcIiB8IFwicmdiYSgwLDAsMCwwLjQpXCIgfCBcIiMwMDBcIjtcbiAgICBoYW5kbGVCbG9ja0NoYW5nZSh7IGhleCwgJGV2ZW50IH06IHtcbiAgICAgICAgaGV4OiBhbnk7XG4gICAgICAgICRldmVudDogYW55O1xuICAgIH0pOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29sb3JCbG9ja01vZHVsZSB7XG59XG4iXX0=