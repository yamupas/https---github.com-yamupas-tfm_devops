import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './sketch-fields.component';
import * as ɵngcc2 from './sketch-preset-colors.component';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from 'ngx-color';
export declare class SketchComponent extends ColorWrap {
    /** Remove alpha slider and options from picker */
    disableAlpha: boolean;
    /** Hex strings for default colors at bottom of picker */
    presetColors: string[];
    /** Width of picker */
    width: number;
    activeBackground: string;
    constructor();
    afterValidChange(): void;
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    handleBlockChange({ hex, $event }: {
        hex: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SketchComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SketchComponent, "color-sketch", never, { "disableAlpha": "disableAlpha"; "presetColors": "presetColors"; "width": "width"; }, {}, never, never>;
}
export declare class ColorSketchModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorSketchModule, [typeof SketchComponent, typeof ɵngcc1.SketchFieldsComponent, typeof ɵngcc2.SketchPresetColorsComponent], [typeof ɵngcc3.CommonModule, typeof ɵngcc4.AlphaModule, typeof ɵngcc4.CheckboardModule, typeof ɵngcc4.EditableInputModule, typeof ɵngcc4.HueModule, typeof ɵngcc4.SaturationModule, typeof ɵngcc4.SwatchModule], [typeof SketchComponent, typeof ɵngcc1.SketchFieldsComponent, typeof ɵngcc2.SketchPresetColorsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorSketchModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJza2V0Y2guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2xvcldyYXAgfSBmcm9tICduZ3gtY29sb3InO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2tldGNoQ29tcG9uZW50IGV4dGVuZHMgQ29sb3JXcmFwIHtcbiAgICAvKiogUmVtb3ZlIGFscGhhIHNsaWRlciBhbmQgb3B0aW9ucyBmcm9tIHBpY2tlciAqL1xuICAgIGRpc2FibGVBbHBoYTogYm9vbGVhbjtcbiAgICAvKiogSGV4IHN0cmluZ3MgZm9yIGRlZmF1bHQgY29sb3JzIGF0IGJvdHRvbSBvZiBwaWNrZXIgKi9cbiAgICBwcmVzZXRDb2xvcnM6IHN0cmluZ1tdO1xuICAgIC8qKiBXaWR0aCBvZiBwaWNrZXIgKi9cbiAgICB3aWR0aDogbnVtYmVyO1xuICAgIGFjdGl2ZUJhY2tncm91bmQ6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcigpO1xuICAgIGFmdGVyVmFsaWRDaGFuZ2UoKTogdm9pZDtcbiAgICBoYW5kbGVWYWx1ZUNoYW5nZSh7IGRhdGEsICRldmVudCB9OiB7XG4gICAgICAgIGRhdGE6IGFueTtcbiAgICAgICAgJGV2ZW50OiBhbnk7XG4gICAgfSk6IHZvaWQ7XG4gICAgaGFuZGxlQmxvY2tDaGFuZ2UoeyBoZXgsICRldmVudCB9OiB7XG4gICAgICAgIGhleDogYW55O1xuICAgICAgICAkZXZlbnQ6IGFueTtcbiAgICB9KTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbG9yU2tldGNoTW9kdWxlIHtcbn1cbiJdfQ==