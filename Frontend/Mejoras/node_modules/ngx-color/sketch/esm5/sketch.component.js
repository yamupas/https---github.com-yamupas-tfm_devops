import { __decorate, __extends } from "tslib";
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input, NgModule, } from '@angular/core';
import { AlphaModule, CheckboardModule, ColorWrap, EditableInputModule, HueModule, SaturationModule, SwatchModule, isValidHex, } from 'ngx-color';
import { SketchFieldsComponent } from './sketch-fields.component';
import { SketchPresetColorsComponent } from './sketch-preset-colors.component';
var SketchComponent = /** @class */ (function (_super) {
    __extends(SketchComponent, _super);
    function SketchComponent() {
        var _this = _super.call(this) || this;
        /** Remove alpha slider and options from picker */
        _this.disableAlpha = false;
        /** Hex strings for default colors at bottom of picker */
        _this.presetColors = [
            '#D0021B',
            '#F5A623',
            '#F8E71C',
            '#8B572A',
            '#7ED321',
            '#417505',
            '#BD10E0',
            '#9013FE',
            '#4A90E2',
            '#50E3C2',
            '#B8E986',
            '#000000',
            '#4A4A4A',
            '#9B9B9B',
            '#FFFFFF',
        ];
        /** Width of picker */
        _this.width = 200;
        return _this;
    }
    SketchComponent.prototype.afterValidChange = function () {
        var alpha = this.disableAlpha ? 1 : this.rgb.a;
        this.activeBackground = "rgba(" + this.rgb.r + ", " + this.rgb.g + ", " + this.rgb.b + ", " + alpha + ")";
    };
    SketchComponent.prototype.handleValueChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    SketchComponent.prototype.handleBlockChange = function (_a) {
        var hex = _a.hex, $event = _a.$event;
        if (isValidHex(hex)) {
            // this.hex = hex;
            this.handleChange({
                hex: hex,
                source: 'hex',
            }, $event);
        }
    };
    __decorate([
        Input()
    ], SketchComponent.prototype, "disableAlpha", void 0);
    __decorate([
        Input()
    ], SketchComponent.prototype, "presetColors", void 0);
    __decorate([
        Input()
    ], SketchComponent.prototype, "width", void 0);
    SketchComponent = __decorate([
        Component({
            selector: 'color-sketch',
            template: "\n  <div class=\"sketch-picker {{ className }}\" [style.width]=\"width\">\n    <div class=\"sketch-saturation\">\n      <color-saturation [hsl]=\"hsl\" [hsv]=\"hsv\"\n        (onChange)=\"handleValueChange($event)\"\n      >\n      </color-saturation>\n    </div>\n    <div class=\"sketch-controls\">\n      <div class=\"sketch-sliders\">\n        <div class=\"sketch-hue\">\n          <color-hue [hsl]=\"hsl\"\n            (onChange)=\"handleValueChange($event)\"\n          ></color-hue>\n        </div>\n        <div class=\"sketch-alpha\" *ngIf=\"disableAlpha === false\">\n          <color-alpha\n            [radius]=\"2\" [rgb]=\"rgb\" [hsl]=\"hsl\"\n            (onChange)=\"handleValueChange($event)\"\n          ></color-alpha>\n        </div>\n      </div>\n      <div class=\"sketch-color\">\n        <color-checkboard></color-checkboard>\n        <div class=\"sketch-active\" [style.background]=\"activeBackground\"></div>\n      </div>\n    </div>\n    <div class=\"sketch-fields-container\">\n      <color-sketch-fields\n        [rgb]=\"rgb\" [hsl]=\"hsl\" [hex]=\"hex\"\n        [disableAlpha]=\"disableAlpha\"\n        (onChange)=\"handleValueChange($event)\"\n      ></color-sketch-fields>\n    </div>\n    <div class=\"sketch-swatches-container\" *ngIf=\"presetColors && presetColors.length\">\n      <color-sketch-preset-colors\n        [colors]=\"presetColors\"\n        (onClick)=\"handleBlockChange($event)\"\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\n      ></color-sketch-preset-colors>\n    </div>\n  </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .sketch-picker {\n      padding: 10px 10px 3px;\n      box-sizing: initial;\n      background: #fff;\n      border-radius: 4px;\n      box-shadow: 0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15);\n    }\n    .sketch-saturation {\n      width: 100%;\n      padding-bottom: 75%;\n      position: relative;\n      overflow: hidden;\n    }\n    .sketch-fields-container {\n      display: flex;\n    }\n    .sketch-swatches-container {\n      display: flex;\n    }\n    .sketch-controls {\n      display: flex;\n    }\n    .sketch-sliders {\n      padding: 4px 0px;\n      -webkit-box-flex: 1;\n      flex: 1 1 0%;\n    }\n    .sketch-hue {\n      position: relative;\n      height: 10px;\n      overflow: hidden;\n    }\n    .sketch-alpha {\n      position: relative;\n      height: 10px;\n      margin-top: 4px;\n      overflow: hidden;\n    }\n    .sketch-color {\n      width: 24px;\n      height: 24px;\n      position: relative;\n      margin-top: 4px;\n      margin-left: 4px;\n      border-radius: 3px;\n    }\n    .sketch-active {\n      position: absolute;\n      top: 0px;\n      right: 0px;\n      bottom: 0px;\n      left: 0px;\n      border-radius: 2px;\n      box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset, rgba(0, 0, 0, 0.25) 0px 0px 4px inset;\n    }\n  "]
        })
    ], SketchComponent);
    return SketchComponent;
}(ColorWrap));
export { SketchComponent };
var ColorSketchModule = /** @class */ (function () {
    function ColorSketchModule() {
    }
    ColorSketchModule = __decorate([
        NgModule({
            declarations: [
                SketchComponent,
                SketchFieldsComponent,
                SketchPresetColorsComponent,
            ],
            exports: [
                SketchComponent,
                SketchFieldsComponent,
                SketchPresetColorsComponent,
            ],
            imports: [
                CommonModule,
                AlphaModule,
                CheckboardModule,
                EditableInputModule,
                HueModule,
                SaturationModule,
                SwatchModule,
            ],
        })
    ], ColorSketchModule);
    return ColorSketchModule;
}());
export { ColorSketchModule };
//# sourceMappingURL=data:application/json;base64,