import { EventEmitter } from '@angular/core';
import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './photoshop-previews.component';
import * as ɵngcc2 from './photoshop-button.component';
import * as ɵngcc3 from './photoshop-fields.component';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from 'ngx-color';
export declare class PhotoshopComponent extends ColorWrap {
    /** Title text */
    header: string;
    onAccept: EventEmitter<Event>;
    onCancel: EventEmitter<Event>;
    circle: {
        width: string;
        height: string;
        borderRadius: string;
        boxShadow: string;
        transform: string;
    };
    constructor();
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PhotoshopComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PhotoshopComponent, "color-photoshop", never, { "header": "header"; }, { "onAccept": "onAccept"; "onCancel": "onCancel"; }, never, never>;
}
export declare class ColorPhotoshopModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorPhotoshopModule, [typeof PhotoshopComponent, typeof ɵngcc1.PhotoshopPreviewsComponent, typeof ɵngcc2.PhotoshopButtonComponent, typeof ɵngcc3.PhotoshopFieldsComponent], [typeof ɵngcc4.CommonModule, typeof ɵngcc5.EditableInputModule, typeof ɵngcc5.HueModule, typeof ɵngcc5.AlphaModule, typeof ɵngcc5.SwatchModule, typeof ɵngcc5.SaturationModule], [typeof PhotoshopComponent, typeof ɵngcc1.PhotoshopPreviewsComponent, typeof ɵngcc2.PhotoshopButtonComponent, typeof ɵngcc3.PhotoshopFieldsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorPhotoshopModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvdG9zaG9wLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwaG90b3Nob3AuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7Ozs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2xvcldyYXAgfSBmcm9tICduZ3gtY29sb3InO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUGhvdG9zaG9wQ29tcG9uZW50IGV4dGVuZHMgQ29sb3JXcmFwIHtcbiAgICAvKiogVGl0bGUgdGV4dCAqL1xuICAgIGhlYWRlcjogc3RyaW5nO1xuICAgIG9uQWNjZXB0OiBFdmVudEVtaXR0ZXI8RXZlbnQ+O1xuICAgIG9uQ2FuY2VsOiBFdmVudEVtaXR0ZXI8RXZlbnQ+O1xuICAgIGNpcmNsZToge1xuICAgICAgICB3aWR0aDogc3RyaW5nO1xuICAgICAgICBoZWlnaHQ6IHN0cmluZztcbiAgICAgICAgYm9yZGVyUmFkaXVzOiBzdHJpbmc7XG4gICAgICAgIGJveFNoYWRvdzogc3RyaW5nO1xuICAgICAgICB0cmFuc2Zvcm06IHN0cmluZztcbiAgICB9O1xuICAgIGNvbnN0cnVjdG9yKCk7XG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UoeyBkYXRhLCAkZXZlbnQgfToge1xuICAgICAgICBkYXRhOiBhbnk7XG4gICAgICAgICRldmVudDogYW55O1xuICAgIH0pOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29sb3JQaG90b3Nob3BNb2R1bGUge1xufVxuIl19