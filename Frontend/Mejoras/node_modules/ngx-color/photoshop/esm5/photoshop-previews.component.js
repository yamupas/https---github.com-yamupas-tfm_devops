import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
var PhotoshopPreviewsComponent = /** @class */ (function () {
    function PhotoshopPreviewsComponent() {
        this.currentColor = '';
        this.backgroundNew = '';
    }
    PhotoshopPreviewsComponent.prototype.ngOnChanges = function () {
        this.backgroundNew = "rgb(" + this.rgb.r + "," + this.rgb.g + ", " + this.rgb.b + ")";
    };
    __decorate([
        Input()
    ], PhotoshopPreviewsComponent.prototype, "rgb", void 0);
    __decorate([
        Input()
    ], PhotoshopPreviewsComponent.prototype, "currentColor", void 0);
    PhotoshopPreviewsComponent = __decorate([
        Component({
            selector: 'color-photoshop-previews',
            template: "\n  <div>\n    <div class=\"photoshop-label\">new</div>\n    <div class=\"photoshop-swatches\">\n      <div class=\"photoshop-new\" [style.background]=\"backgroundNew\"></div>\n      <div class=\"photoshop-current\" [style.background]=\"currentColor\"></div>\n    </div>\n    <div class=\"photoshop-label\">current</div>\n  </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n  .photoshop-swatches {\n    border: 1px solid #B3B3B3;\n    border-bottom: 1px solid #F0F0F0;\n    margin-bottom: 2px;\n    margin-top: 1px;\n  }\n  .photoshop-new {\n    height: 34px;\n    box-shadow: inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 1px 0 #000;\n  }\n  .photoshop-current {\n    height: 34px;\n    box-shadow: inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 -1px 0 #000;\n  }\n  .photoshop-label {\n    font-size: 14px;\n    color: #000;\n    text-align: center;\n  }\n  "]
        })
    ], PhotoshopPreviewsComponent);
    return PhotoshopPreviewsComponent;
}());
export { PhotoshopPreviewsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvdG9zaG9wLXByZXZpZXdzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jb2xvci9waG90b3Nob3AvIiwic291cmNlcyI6WyJwaG90b3Nob3AtcHJldmlld3MuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxLQUFLLEdBRU4sTUFBTSxlQUFlLENBQUM7QUF5Q3ZCO0lBQUE7UUFFVyxpQkFBWSxHQUFHLEVBQUUsQ0FBQztRQUMzQixrQkFBYSxHQUFHLEVBQUUsQ0FBQztJQUtyQixDQUFDO0lBSEMsZ0RBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxhQUFhLEdBQUcsU0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsVUFBSyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBRyxDQUFDO0lBQ3pFLENBQUM7SUFOUTtRQUFSLEtBQUssRUFBRTsyREFBVTtJQUNUO1FBQVIsS0FBSyxFQUFFO29FQUFtQjtJQUZoQiwwQkFBMEI7UUF0Q3RDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSwwQkFBMEI7WUFDcEMsUUFBUSxFQUFFLGdWQVNUO1lBd0JELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLG1CQUFtQixFQUFFLEtBQUs7cUJBdkJ4QiwrZUFvQkQ7U0FJRixDQUFDO09BQ1csMEJBQTBCLENBUXRDO0lBQUQsaUNBQUM7Q0FBQSxBQVJELElBUUM7U0FSWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgT25DaGFuZ2VzLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJHQiB9IGZyb20gJ25neC1jb2xvcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2NvbG9yLXBob3Rvc2hvcC1wcmV2aWV3cycsXG4gIHRlbXBsYXRlOiBgXG4gIDxkaXY+XG4gICAgPGRpdiBjbGFzcz1cInBob3Rvc2hvcC1sYWJlbFwiPm5ldzwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJwaG90b3Nob3Atc3dhdGNoZXNcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJwaG90b3Nob3AtbmV3XCIgW3N0eWxlLmJhY2tncm91bmRdPVwiYmFja2dyb3VuZE5ld1wiPjwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cInBob3Rvc2hvcC1jdXJyZW50XCIgW3N0eWxlLmJhY2tncm91bmRdPVwiY3VycmVudENvbG9yXCI+PC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInBob3Rvc2hvcC1sYWJlbFwiPmN1cnJlbnQ8L2Rpdj5cbiAgPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgLnBob3Rvc2hvcC1zd2F0Y2hlcyB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0IzQjNCMztcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0YwRjBGMDtcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgbWFyZ2luLXRvcDogMXB4O1xuICB9XG4gIC5waG90b3Nob3AtbmV3IHtcbiAgICBoZWlnaHQ6IDM0cHg7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMXB4IDAgMCAjMDAwLCBpbnNldCAtMXB4IDAgMCAjMDAwLCBpbnNldCAwIDFweCAwICMwMDA7XG4gIH1cbiAgLnBob3Rvc2hvcC1jdXJyZW50IHtcbiAgICBoZWlnaHQ6IDM0cHg7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMXB4IDAgMCAjMDAwLCBpbnNldCAtMXB4IDAgMCAjMDAwLCBpbnNldCAwIC0xcHggMCAjMDAwO1xuICB9XG4gIC5waG90b3Nob3AtbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBjb2xvcjogIzAwMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgYCxcbiAgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBQaG90b3Nob3BQcmV2aWV3c0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHJnYjogUkdCO1xuICBASW5wdXQoKSBjdXJyZW50Q29sb3IgPSAnJztcbiAgYmFja2dyb3VuZE5ldyA9ICcnO1xuXG4gIG5nT25DaGFuZ2VzKCkge1xuICAgIHRoaXMuYmFja2dyb3VuZE5ldyA9IGByZ2IoJHt0aGlzLnJnYi5yfSwke3RoaXMucmdiLmd9LCAke3RoaXMucmdiLmJ9KWA7XG4gIH1cbn1cbiJdfQ==