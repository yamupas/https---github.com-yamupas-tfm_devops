import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './chrome-fields.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ngx-color';
export declare class ChromeComponent extends ColorWrap {
    /** Remove alpha slider and options from picker */
    disableAlpha: boolean;
    circle: {
        [key: string]: string;
    };
    pointer: {
        [key: string]: string;
    };
    activeBackground: string;
    constructor();
    afterValidChange(): void;
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChromeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChromeComponent, "color-chrome", never, { "disableAlpha": "disableAlpha"; }, {}, never, never>;
}
export declare class ColorChromeModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorChromeModule, [typeof ChromeComponent, typeof ɵngcc1.ChromeFieldsComponent], [typeof ɵngcc2.CommonModule, typeof ɵngcc3.AlphaModule, typeof ɵngcc3.CheckboardModule, typeof ɵngcc3.EditableInputModule, typeof ɵngcc3.HueModule, typeof ɵngcc3.SaturationModule], [typeof ChromeComponent, typeof ɵngcc1.ChromeFieldsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorChromeModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hyb21lLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjaHJvbWUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3JXcmFwIH0gZnJvbSAnbmd4LWNvbG9yJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENocm9tZUNvbXBvbmVudCBleHRlbmRzIENvbG9yV3JhcCB7XG4gICAgLyoqIFJlbW92ZSBhbHBoYSBzbGlkZXIgYW5kIG9wdGlvbnMgZnJvbSBwaWNrZXIgKi9cbiAgICBkaXNhYmxlQWxwaGE6IGJvb2xlYW47XG4gICAgY2lyY2xlOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIHBvaW50ZXI6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgYWN0aXZlQmFja2dyb3VuZDogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKCk7XG4gICAgYWZ0ZXJWYWxpZENoYW5nZSgpOiB2b2lkO1xuICAgIGhhbmRsZVZhbHVlQ2hhbmdlKHsgZGF0YSwgJGV2ZW50IH06IHtcbiAgICAgICAgZGF0YTogYW55O1xuICAgICAgICAkZXZlbnQ6IGFueTtcbiAgICB9KTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbG9yQ2hyb21lTW9kdWxlIHtcbn1cbiJdfQ==