import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-color';
export declare class TwitterComponent extends ColorWrap {
    /** Pixel value for picker width */
    width: string | number;
    /** Color squares to display */
    colors: string[];
    triangle: 'hide' | 'top-left' | 'top-right' | 'bottom-right';
    swatchStyle: {
        [key: string]: string;
    };
    input: {
        [key: string]: string;
    };
    constructor();
    focus(color: string): {
        boxShadow: string;
    };
    handleBlockChange({ hex, $event }: {
        hex: any;
        $event: any;
    }): void;
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TwitterComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TwitterComponent, "color-twitter", never, { "width": "width"; "colors": "colors"; "triangle": "triangle"; }, {}, never, never>;
}
export declare class ColorTwitterModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorTwitterModule, [typeof TwitterComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SwatchModule, typeof ɵngcc2.EditableInputModule], [typeof TwitterComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorTwitterModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHdpdHRlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidHdpdHRlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2xvcldyYXAgfSBmcm9tICduZ3gtY29sb3InO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVHdpdHRlckNvbXBvbmVudCBleHRlbmRzIENvbG9yV3JhcCB7XG4gICAgLyoqIFBpeGVsIHZhbHVlIGZvciBwaWNrZXIgd2lkdGggKi9cbiAgICB3aWR0aDogc3RyaW5nIHwgbnVtYmVyO1xuICAgIC8qKiBDb2xvciBzcXVhcmVzIHRvIGRpc3BsYXkgKi9cbiAgICBjb2xvcnM6IHN0cmluZ1tdO1xuICAgIHRyaWFuZ2xlOiAnaGlkZScgfCAndG9wLWxlZnQnIHwgJ3RvcC1yaWdodCcgfCAnYm90dG9tLXJpZ2h0JztcbiAgICBzd2F0Y2hTdHlsZToge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICBpbnB1dDoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICBjb25zdHJ1Y3RvcigpO1xuICAgIGZvY3VzKGNvbG9yOiBzdHJpbmcpOiB7XG4gICAgICAgIGJveFNoYWRvdzogc3RyaW5nO1xuICAgIH07XG4gICAgaGFuZGxlQmxvY2tDaGFuZ2UoeyBoZXgsICRldmVudCB9OiB7XG4gICAgICAgIGhleDogYW55O1xuICAgICAgICAkZXZlbnQ6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICBoYW5kbGVWYWx1ZUNoYW5nZSh7IGRhdGEsICRldmVudCB9OiB7XG4gICAgICAgIGRhdGE6IGFueTtcbiAgICAgICAgJGV2ZW50OiBhbnk7XG4gICAgfSk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb2xvclR3aXR0ZXJNb2R1bGUge1xufVxuIl19