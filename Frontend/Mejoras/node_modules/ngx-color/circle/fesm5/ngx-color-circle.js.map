{"version":3,"file":"ngx-color-circle.js","sources":["ng://ngx-color/circle/circle-swatch.component.ts","ng://ngx-color/circle/circle.component.ts","ng://ngx-color/circle/ngx-color-circle.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'color-circle-swatch',\n  template: `\n  <div class=\"circle-swatch\"\n    [style.width.px]=\"circleSize\" [style.height.px]=\"circleSize\"\n    [style.margin-right.px]=\"circleSpacing\" [style.margin-bottom.px]=\"circleSpacing\"\n    >\n    <color-swatch\n      [color]=\"color\" [style]=\"swatchStyle\" [focus]=\"focus\" [focusStyle]=\"focusStyle\"\n      (onClick)=\"handleClick($event)\" (onHover)=\"onSwatchHover.emit($event)\">\n    </color-swatch>\n    <div class=\"clear\"></div>\n  </div>\n  `,\n  styles: [\n    `\n  .circle-swatch {\n    transform: scale(1);\n    transition: transform 100ms ease;\n  }\n  .circle-swatch:hover {\n    transform: scale(1.2);\n  }\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class CircleSwatchComponent implements OnChanges {\n  @Input() color: string;\n  @Input() circleSize = 28;\n  @Input() circleSpacing = 14;\n  @Input() focus = false;\n  @Output() onClick = new EventEmitter<any>();\n  @Output() onSwatchHover = new EventEmitter<any>();\n  focusStyle: { [key: string]: string } = {};\n  swatchStyle: { [key: string]: string } = {\n    borderRadius: '50%',\n    background: 'transparent',\n    transition: '100ms box-shadow ease 0s',\n  };\n\n  ngOnChanges() {\n    this.swatchStyle.boxShadow = `inset 0 0 0 ${this.circleSize / 2}px ${this.color}`;\n    this.focusStyle.boxShadow = `inset 0 0 0 ${ this.circleSize / 2 }px ${ this.color }, 0 0 5px ${ this.color }`;\n    if (this.focus) {\n      this.focusStyle.boxShadow = `inset 0 0 0 3px ${ this.color }, 0 0 5px ${ this.color }`;\n    }\n  }\n  handleClick({ hex, $event }) {\n    this.onClick.emit({ hex, $event });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport {\n  amber,\n  blue,\n  blueGrey,\n  brown,\n  cyan,\n  deepOrange,\n  deepPurple,\n  green,\n  indigo,\n  lightBlue,\n  lightGreen,\n  lime,\n  orange,\n  pink,\n  purple,\n  red,\n  teal,\n  yellow,\n} from 'material-colors';\nimport { TinyColor } from '@ctrl/tinycolor';\n\nimport { ColorWrap, SwatchModule, isValidHex } from 'ngx-color';\nimport { CircleSwatchComponent } from './circle-swatch.component';\n\n@Component({\n  selector: 'color-circle',\n  template: `\n    <div\n      class=\"circle-picker {{ className }}\"\n      [style.width.px]=\"width\"\n      [style.margin-right.px]=\"-circleSpacing\"\n      [style.margin-bottom.px]=\"-circleSpacing\"\n    >\n      <color-circle-swatch\n        *ngFor=\"let color of colors\"\n        [circleSize]=\"circleSize\"\n        [circleSpacing]=\"circleSpacing\"\n        [color]=\"color\"\n        [focus]=\"isActive(color)\"\n        (onClick)=\"handleBlockChange($event)\"\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\n      ></color-circle-swatch>\n    </div>\n  `,\n  styles: [\n    `\n      .circle-picker {\n        display: flex;\n        flex-wrap: wrap;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class CircleComponent extends ColorWrap {\n  /** Pixel value for picker width */\n  @Input() width: string | number = 252;\n  /** Color squares to display */\n  @Input()\n  colors: string[] = [\n    red['500'],\n    pink['500'],\n    purple['500'],\n    deepPurple['500'],\n    indigo['500'],\n    blue['500'],\n    lightBlue['500'],\n    cyan['500'],\n    teal['500'],\n    green['500'],\n    lightGreen['500'],\n    lime['500'],\n    yellow['500'],\n    amber['500'],\n    orange['500'],\n    deepOrange['500'],\n    brown['500'],\n    blueGrey['500'],\n  ];\n  /** Value for circle size */\n  @Input() circleSize = 28;\n  /** Value for spacing between circles */\n  @Input() circleSpacing = 14;\n\n  constructor() {\n    super();\n  }\n  isActive(color: string) {\n    return new TinyColor(this.hex).equals(color);\n  }\n  handleBlockChange({ hex, $event }: { hex: string, $event: Event }) {\n    if (isValidHex(hex)) {\n      this.handleChange({ hex, source: 'hex' }, $event);\n    }\n  }\n  handleValueChange({ data, $event }) {\n    this.handleChange(data, $event);\n  }\n}\n\n@NgModule({\n  declarations: [CircleComponent, CircleSwatchComponent],\n  exports: [CircleComponent, CircleSwatchComponent],\n  imports: [CommonModule, SwatchModule],\n})\nexport class ColorCircleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './circle.component';\n\nexport {CircleSwatchComponent as Éµa} from './circle-swatch.component';"],"names":[],"mappings":"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"}