import { EventEmitter, OnChanges } from '@angular/core';
import { HSLA, HSVA, HSVAsource } from './helpers/color.interfaces';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './coordinates.directive';
export declare class SaturationComponent implements OnChanges {
    hsl: HSLA;
    hsv: HSVA;
    radius: number;
    pointer: {
        [key: string]: string;
    };
    circle: {
        [key: string]: string;
    };
    onChange: EventEmitter<{
        data: HSVAsource;
        $event: Event;
    }>;
    background: string;
    pointerTop: string;
    pointerLeft: string;
    ngOnChanges(): void;
    handleChange({ top, left, containerHeight, containerWidth, $event }: {
        top: any;
        left: any;
        containerHeight: any;
        containerWidth: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SaturationComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SaturationComponent, "color-saturation", never, { "hsl": "hsl"; "hsv": "hsv"; "radius": "radius"; "pointer": "pointer"; "circle": "circle"; }, { "onChange": "onChange"; }, never, never>;
}
export declare class SaturationModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SaturationModule, [typeof SaturationComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.CoordinatesModule], [typeof SaturationComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SaturationModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F0dXJhdGlvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic2F0dXJhdGlvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEhTTEEsIEhTVkEsIEhTVkFzb3VyY2UgfSBmcm9tICcuL2hlbHBlcnMvY29sb3IuaW50ZXJmYWNlcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTYXR1cmF0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBoc2w6IEhTTEE7XG4gICAgaHN2OiBIU1ZBO1xuICAgIHJhZGl1czogbnVtYmVyO1xuICAgIHBvaW50ZXI6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgY2lyY2xlOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8e1xuICAgICAgICBkYXRhOiBIU1ZBc291cmNlO1xuICAgICAgICAkZXZlbnQ6IEV2ZW50O1xuICAgIH0+O1xuICAgIGJhY2tncm91bmQ6IHN0cmluZztcbiAgICBwb2ludGVyVG9wOiBzdHJpbmc7XG4gICAgcG9pbnRlckxlZnQ6IHN0cmluZztcbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xuICAgIGhhbmRsZUNoYW5nZSh7IHRvcCwgbGVmdCwgY29udGFpbmVySGVpZ2h0LCBjb250YWluZXJXaWR0aCwgJGV2ZW50IH06IHtcbiAgICAgICAgdG9wOiBhbnk7XG4gICAgICAgIGxlZnQ6IGFueTtcbiAgICAgICAgY29udGFpbmVySGVpZ2h0OiBhbnk7XG4gICAgICAgIGNvbnRhaW5lcldpZHRoOiBhbnk7XG4gICAgICAgICRldmVudDogYW55O1xuICAgIH0pOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2F0dXJhdGlvbk1vZHVsZSB7XG59XG4iXX0=