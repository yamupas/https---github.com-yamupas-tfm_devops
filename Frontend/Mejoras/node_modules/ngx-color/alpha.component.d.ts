import { EventEmitter, OnChanges } from '@angular/core';
import { HSLA, RGBA } from './helpers/color.interfaces';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './checkboard.component';
import * as ɵngcc3 from './coordinates.directive';
export declare class AlphaComponent implements OnChanges {
    hsl: HSLA;
    rgb: RGBA;
    pointer: {
        [key: string]: string;
    };
    shadow: string;
    radius: string;
    direction: 'horizontal' | 'vertical';
    onChange: EventEmitter<any>;
    gradient: {
        [key: string]: string;
    };
    pointerLeft: number;
    pointerTop: number;
    ngOnChanges(): void;
    handleChange({ top, left, containerHeight, containerWidth, $event }: {
        top: any;
        left: any;
        containerHeight: any;
        containerWidth: any;
        $event: any;
    }): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AlphaComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AlphaComponent, "color-alpha", never, { "direction": "direction"; "hsl": "hsl"; "rgb": "rgb"; "pointer": "pointer"; "shadow": "shadow"; "radius": "radius"; }, { "onChange": "onChange"; }, never, never>;
}
export declare class AlphaModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<AlphaModule, [typeof AlphaComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.CheckboardModule, typeof ɵngcc3.CoordinatesModule], [typeof AlphaComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<AlphaModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxwaGEuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFscGhhLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSFNMQSwgUkdCQSB9IGZyb20gJy4vaGVscGVycy9jb2xvci5pbnRlcmZhY2VzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFscGhhQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBoc2w6IEhTTEE7XG4gICAgcmdiOiBSR0JBO1xuICAgIHBvaW50ZXI6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgc2hhZG93OiBzdHJpbmc7XG4gICAgcmFkaXVzOiBzdHJpbmc7XG4gICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcgfCAndmVydGljYWwnO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBncmFkaWVudDoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICBwb2ludGVyTGVmdDogbnVtYmVyO1xuICAgIHBvaW50ZXJUb3A6IG51bWJlcjtcbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xuICAgIGhhbmRsZUNoYW5nZSh7IHRvcCwgbGVmdCwgY29udGFpbmVySGVpZ2h0LCBjb250YWluZXJXaWR0aCwgJGV2ZW50IH06IHtcbiAgICAgICAgdG9wOiBhbnk7XG4gICAgICAgIGxlZnQ6IGFueTtcbiAgICAgICAgY29udGFpbmVySGVpZ2h0OiBhbnk7XG4gICAgICAgIGNvbnRhaW5lcldpZHRoOiBhbnk7XG4gICAgICAgICRldmVudDogYW55O1xuICAgIH0pOiBhbnk7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbHBoYU1vZHVsZSB7XG59XG4iXX0=