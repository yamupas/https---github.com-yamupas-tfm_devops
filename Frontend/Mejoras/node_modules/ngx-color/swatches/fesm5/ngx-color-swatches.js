import { __decorate, __extends } from 'tslib';
import { CommonModule } from '@angular/common';
import { EventEmitter, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { red, pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, yellow, amber, orange, deepOrange, brown, blueGrey } from 'material-colors';
import { getContrastingColor, ColorWrap, SwatchModule, RaisedModule } from 'ngx-color';

var SwatchesColorComponent = /** @class */ (function () {
    function SwatchesColorComponent() {
        this.first = false;
        this.last = false;
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
        this.getContrastingColor = getContrastingColor;
        this.colorStyle = {
            width: '40px',
            height: '24px',
            cursor: 'pointer',
            marginBottom: '1px',
        };
        this.focusStyle = {};
    }
    SwatchesColorComponent.prototype.ngOnInit = function () {
        this.colorStyle.background = this.color;
        this.focusStyle.boxShadow = "0 0 4px " + this.color;
        if (this.first) {
            this.colorStyle.borderRadius = '2px 2px 0 0';
        }
        if (this.last) {
            this.colorStyle.borderRadius = '0 0 2px 2px';
        }
        if (this.color === '#FFFFFF') {
            this.colorStyle.boxShadow = 'inset 0 0 0 1px #ddd';
        }
    };
    SwatchesColorComponent.prototype.handleClick = function ($event) {
        this.onClick.emit({
            data: {
                hex: this.color,
                source: 'hex',
            },
            $event: $event,
        });
    };
    __decorate([
        Input()
    ], SwatchesColorComponent.prototype, "color", void 0);
    __decorate([
        Input()
    ], SwatchesColorComponent.prototype, "first", void 0);
    __decorate([
        Input()
    ], SwatchesColorComponent.prototype, "last", void 0);
    __decorate([
        Input()
    ], SwatchesColorComponent.prototype, "active", void 0);
    __decorate([
        Output()
    ], SwatchesColorComponent.prototype, "onClick", void 0);
    __decorate([
        Output()
    ], SwatchesColorComponent.prototype, "onSwatchHover", void 0);
    SwatchesColorComponent = __decorate([
        Component({
            selector: 'color-swatches-color',
            template: "\n  <color-swatch [color]=\"color\" [style]=\"colorStyle\" [focusStyle]=\"focusStyle\"\n    [class.first]=\"first\" [class.last]=\"last\"\n    (click)=\"handleClick($event)\" (onHover)=\"onSwatchHover.emit($event)\">\n    <div class=\"swatch-check\" *ngIf=\"active\" [class.first]=\"first\" [class.last]=\"last\">\n      <svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\" [style.fill]=\"getContrastingColor(color)\">\n        <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" />\n      </svg>\n    </div>\n  </color-swatch>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .swatches-group {\n      padding-bottom: 10px;\n      width: 40px;\n      float: left;\n      margin-right: 10px;\n    }\n    .swatch-check {\n      margin-left: 8px;\n    }\n  "]
        })
    ], SwatchesColorComponent);
    return SwatchesColorComponent;
}());

var SwatchesGroupComponent = /** @class */ (function () {
    function SwatchesGroupComponent() {
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
    }
    __decorate([
        Input()
    ], SwatchesGroupComponent.prototype, "group", void 0);
    __decorate([
        Input()
    ], SwatchesGroupComponent.prototype, "active", void 0);
    __decorate([
        Output()
    ], SwatchesGroupComponent.prototype, "onClick", void 0);
    __decorate([
        Output()
    ], SwatchesGroupComponent.prototype, "onSwatchHover", void 0);
    SwatchesGroupComponent = __decorate([
        Component({
            selector: 'color-swatches-group',
            template: "\n  <div class=\"swatches-group\">\n    <color-swatches-color\n      *ngFor=\"let color of group; let idx = index;\"\n      [active]=\"color.toLowerCase() === active\"\n      [color]=\"color\"\n      [first]=\"idx === 0\"\n      [last]=\"idx === group.length - 1\"\n      (onClick)=\"onClick.emit($event)\"\n    >\n    </color-swatches-color>\n  </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .swatches-group {\n      padding-bottom: 10px;\n      width: 40px;\n      float: left;\n      margin-right: 10px;\n    }\n  "]
        })
    ], SwatchesGroupComponent);
    return SwatchesGroupComponent;
}());

var SwatchesComponent = /** @class */ (function (_super) {
    __extends(SwatchesComponent, _super);
    function SwatchesComponent() {
        var _this = _super.call(this) || this;
        /** Pixel value for picker width */
        _this.width = 320;
        /** Color squares to display */
        _this.height = 240;
        /** An array of color groups, each with an array of colors */
        _this.colors = [
            [
                red['900'],
                red['700'],
                red['500'],
                red['300'],
                red['100'],
            ],
            [
                pink['900'],
                pink['700'],
                pink['500'],
                pink['300'],
                pink['100'],
            ],
            [
                purple['900'],
                purple['700'],
                purple['500'],
                purple['300'],
                purple['100'],
            ],
            [
                deepPurple['900'],
                deepPurple['700'],
                deepPurple['500'],
                deepPurple['300'],
                deepPurple['100'],
            ],
            [
                indigo['900'],
                indigo['700'],
                indigo['500'],
                indigo['300'],
                indigo['100'],
            ],
            [
                blue['900'],
                blue['700'],
                blue['500'],
                blue['300'],
                blue['100'],
            ],
            [
                lightBlue['900'],
                lightBlue['700'],
                lightBlue['500'],
                lightBlue['300'],
                lightBlue['100'],
            ],
            [
                cyan['900'],
                cyan['700'],
                cyan['500'],
                cyan['300'],
                cyan['100'],
            ],
            [
                teal['900'],
                teal['700'],
                teal['500'],
                teal['300'],
                teal['100'],
            ],
            [
                '#194D33',
                green['700'],
                green['500'],
                green['300'],
                green['100'],
            ],
            [
                lightGreen['900'],
                lightGreen['700'],
                lightGreen['500'],
                lightGreen['300'],
                lightGreen['100'],
            ],
            [
                lime['900'],
                lime['700'],
                lime['500'],
                lime['300'],
                lime['100'],
            ],
            [
                yellow['900'],
                yellow['700'],
                yellow['500'],
                yellow['300'],
                yellow['100'],
            ],
            [
                amber['900'],
                amber['700'],
                amber['500'],
                amber['300'],
                amber['100'],
            ],
            [
                orange['900'],
                orange['700'],
                orange['500'],
                orange['300'],
                orange['100'],
            ],
            [
                deepOrange['900'],
                deepOrange['700'],
                deepOrange['500'],
                deepOrange['300'],
                deepOrange['100'],
            ],
            [
                brown['900'],
                brown['700'],
                brown['500'],
                brown['300'],
                brown['100'],
            ],
            [
                blueGrey['900'],
                blueGrey['700'],
                blueGrey['500'],
                blueGrey['300'],
                blueGrey['100'],
            ],
            ['#000000', '#525252', '#969696', '#D9D9D9', '#FFFFFF'],
        ];
        _this.zDepth = 1;
        _this.radius = 1;
        _this.background = '#fff';
        return _this;
    }
    SwatchesComponent.prototype.handlePickerChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    __decorate([
        Input()
    ], SwatchesComponent.prototype, "width", void 0);
    __decorate([
        Input()
    ], SwatchesComponent.prototype, "height", void 0);
    __decorate([
        Input()
    ], SwatchesComponent.prototype, "colors", void 0);
    __decorate([
        Input()
    ], SwatchesComponent.prototype, "zDepth", void 0);
    __decorate([
        Input()
    ], SwatchesComponent.prototype, "radius", void 0);
    __decorate([
        Input()
    ], SwatchesComponent.prototype, "background", void 0);
    SwatchesComponent = __decorate([
        Component({
            selector: 'color-swatches',
            template: "\n  <div class=\"swatches-picker {{ className }}\"\n    [style.width.px]=\"width\" [style.height.px]=\"height\">\n    <color-raised [zDepth]=\"zDepth\" [background]=\"background\" [radius]=\"radius\">\n      <div class=\"swatches-overflow\" [style.height.px]=\"height\">\n        <div class=\"swatches-body\">\n          <color-swatches-group\n            *ngFor=\"let group of colors\"\n            [group]=\"group\" [active]=\"hex\"\n            (onClick)=\"handlePickerChange($event)\"\n          ></color-swatches-group>\n        </div>\n      </div>\n    </color-raised>\n  </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n      .swatches-overflow {\n        overflow-y: scroll;\n      }\n      .swatches-overflow {\n        padding: 16px 0 6px 16px;\n      }\n    "]
        })
    ], SwatchesComponent);
    return SwatchesComponent;
}(ColorWrap));
var ColorSwatchesModule = /** @class */ (function () {
    function ColorSwatchesModule() {
    }
    ColorSwatchesModule = __decorate([
        NgModule({
            declarations: [
                SwatchesComponent,
                SwatchesGroupComponent,
                SwatchesColorComponent,
            ],
            exports: [SwatchesComponent, SwatchesGroupComponent, SwatchesColorComponent],
            imports: [CommonModule, SwatchModule, RaisedModule],
        })
    ], ColorSwatchesModule);
    return ColorSwatchesModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { ColorSwatchesModule, SwatchesComponent, SwatchesGroupComponent as ɵa, SwatchesColorComponent as ɵb };
//# sourceMappingURL=ngx-color-swatches.js.map
