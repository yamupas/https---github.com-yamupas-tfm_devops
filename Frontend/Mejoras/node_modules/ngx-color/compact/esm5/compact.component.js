import { __decorate, __extends } from "tslib";
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input, NgModule, } from '@angular/core';
import { ColorWrap, EditableInputModule, RaisedModule, SwatchModule, isValidHex, } from 'ngx-color';
import { CompactColorComponent } from './compact-color.component';
import { CompactFieldsComponent } from './compact-fields.component';
var CompactComponent = /** @class */ (function (_super) {
    __extends(CompactComponent, _super);
    function CompactComponent() {
        var _this = _super.call(this) || this;
        /** Color squares to display */
        _this.colors = [
            '#4D4D4D',
            '#999999',
            '#FFFFFF',
            '#F44E3B',
            '#FE9200',
            '#FCDC00',
            '#DBDF00',
            '#A4DD00',
            '#68CCCA',
            '#73D8FF',
            '#AEA1FF',
            '#FDA1FF',
            '#333333',
            '#808080',
            '#cccccc',
            '#D33115',
            '#E27300',
            '#FCC400',
            '#B0BC00',
            '#68BC00',
            '#16A5A5',
            '#009CE0',
            '#7B64FF',
            '#FA28FF',
            '#000000',
            '#666666',
            '#B3B3B3',
            '#9F0500',
            '#C45100',
            '#FB9E00',
            '#808900',
            '#194D33',
            '#0C797D',
            '#0062B1',
            '#653294',
            '#AB149E',
        ];
        _this.zDepth = 1;
        _this.radius = 1;
        _this.background = '#fff';
        return _this;
    }
    CompactComponent.prototype.handleBlockChange = function (_a) {
        var hex = _a.hex, $event = _a.$event;
        if (isValidHex(hex)) {
            this.handleChange({ hex: hex, source: 'hex' }, $event);
        }
    };
    CompactComponent.prototype.handleValueChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    __decorate([
        Input()
    ], CompactComponent.prototype, "colors", void 0);
    __decorate([
        Input()
    ], CompactComponent.prototype, "zDepth", void 0);
    __decorate([
        Input()
    ], CompactComponent.prototype, "radius", void 0);
    __decorate([
        Input()
    ], CompactComponent.prototype, "background", void 0);
    CompactComponent = __decorate([
        Component({
            selector: 'color-compact',
            template: "\n  <color-raised class=\"color-compact\" [zDepth]=\"zDepth\" [background]=\"background\" [radius]=\"radius\">\n    <div class=\"compact-picker {{ className }}\">\n      <div>\n        <color-compact-color\n          *ngFor=\"let color of colors\" [color]=\"color\"\n          [active]=\"color.toLowerCase() === hex.toLowerCase()\"\n          (onClick)=\"handleBlockChange($event)\"\n        ></color-compact-color>\n        <div class=\"compact-clear\"></div>\n      </div>\n      <color-compact-fields\n        [hex]=\"hex\"\n        [rgb]=\"rgb\"\n        (onChange)=\"handleValueChange($event)\"\n      ></color-compact-fields>\n    </div>\n  </color-raised>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .color-compact {\n      background: #f6f6f6;\n      radius: 4px;\n    }\n    .compact-picker {\n      padding-top: 5px;\n      padding-left: 5px;\n      box-sizing: border-box;\n      width: 245px;\n    }\n    .compact-clear {\n      clear: both;\n    }\n  "]
        })
    ], CompactComponent);
    return CompactComponent;
}(ColorWrap));
export { CompactComponent };
var ColorCompactModule = /** @class */ (function () {
    function ColorCompactModule() {
    }
    ColorCompactModule = __decorate([
        NgModule({
            declarations: [
                CompactComponent,
                CompactColorComponent,
                CompactFieldsComponent,
            ],
            exports: [CompactComponent, CompactColorComponent, CompactFieldsComponent],
            imports: [CommonModule, EditableInputModule, SwatchModule, RaisedModule],
        })
    ], ColorCompactModule);
    return ColorCompactModule;
}());
export { ColorCompactModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGFjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtY29sb3IvY29tcGFjdC8iLCJzb3VyY2VzIjpbImNvbXBhY3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUNMLFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQ0wsU0FBUyxFQUNULG1CQUFtQixFQUNuQixZQUFZLEVBQ1osWUFBWSxFQUNaLFVBQVUsR0FFWCxNQUFNLFdBQVcsQ0FBQztBQUNuQixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQTJDcEU7SUFBc0Msb0NBQVM7SUE0QzdDO1FBQUEsWUFDRSxpQkFBTyxTQUNSO1FBN0NELCtCQUErQjtRQUN0QixZQUFNLEdBQUc7WUFDaEIsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1YsQ0FBQztRQUNPLFlBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsWUFBTSxHQUFHLENBQUMsQ0FBQztRQUNYLGdCQUFVLEdBQUcsTUFBTSxDQUFDOztJQUk3QixDQUFDO0lBQ0QsNENBQWlCLEdBQWpCLFVBQWtCLEVBQWU7WUFBYixZQUFHLEVBQUUsa0JBQU07UUFDN0IsSUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLEdBQUcsS0FBQSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztTQUNuRDtJQUNILENBQUM7SUFDRCw0Q0FBaUIsR0FBakIsVUFBa0IsRUFBZ0I7WUFBZCxjQUFJLEVBQUUsa0JBQU07UUFDOUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQXBEUTtRQUFSLEtBQUssRUFBRTtvREFxQ047SUFDTztRQUFSLEtBQUssRUFBRTtvREFBb0I7SUFDbkI7UUFBUixLQUFLLEVBQUU7b0RBQVk7SUFDWDtRQUFSLEtBQUssRUFBRTt3REFBcUI7SUExQ2xCLGdCQUFnQjtRQXpDNUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGVBQWU7WUFDekIsUUFBUSxFQUFFLDRwQkFrQlQ7WUFrQkQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsbUJBQW1CLEVBQUUsS0FBSztxQkFqQnhCLHlRQWNEO1NBSUYsQ0FBQztPQUNXLGdCQUFnQixDQXVENUI7SUFBRCx1QkFBQztDQUFBLEFBdkRELENBQXNDLFNBQVMsR0F1RDlDO1NBdkRZLGdCQUFnQjtBQWtFN0I7SUFBQTtJQUFpQyxDQUFDO0lBQXJCLGtCQUFrQjtRQVQ5QixRQUFRLENBQUM7WUFDUixZQUFZLEVBQUU7Z0JBQ1osZ0JBQWdCO2dCQUNoQixxQkFBcUI7Z0JBQ3JCLHNCQUFzQjthQUN2QjtZQUNELE9BQU8sRUFBRSxDQUFDLGdCQUFnQixFQUFFLHFCQUFxQixFQUFFLHNCQUFzQixDQUFDO1lBQzFFLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxtQkFBbUIsRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDO1NBQ3pFLENBQUM7T0FDVyxrQkFBa0IsQ0FBRztJQUFELHlCQUFDO0NBQUEsQUFBbEMsSUFBa0M7U0FBckIsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBOZ01vZHVsZSxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7XG4gIENvbG9yV3JhcCxcbiAgRWRpdGFibGVJbnB1dE1vZHVsZSxcbiAgUmFpc2VkTW9kdWxlLFxuICBTd2F0Y2hNb2R1bGUsXG4gIGlzVmFsaWRIZXgsXG4gIHpEZXB0aCxcbn0gZnJvbSAnbmd4LWNvbG9yJztcbmltcG9ydCB7IENvbXBhY3RDb2xvckNvbXBvbmVudCB9IGZyb20gJy4vY29tcGFjdC1jb2xvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tcGFjdEZpZWxkc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcGFjdC1maWVsZHMuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29sb3ItY29tcGFjdCcsXG4gIHRlbXBsYXRlOiBgXG4gIDxjb2xvci1yYWlzZWQgY2xhc3M9XCJjb2xvci1jb21wYWN0XCIgW3pEZXB0aF09XCJ6RGVwdGhcIiBbYmFja2dyb3VuZF09XCJiYWNrZ3JvdW5kXCIgW3JhZGl1c109XCJyYWRpdXNcIj5cbiAgICA8ZGl2IGNsYXNzPVwiY29tcGFjdC1waWNrZXIge3sgY2xhc3NOYW1lIH19XCI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8Y29sb3ItY29tcGFjdC1jb2xvclxuICAgICAgICAgICpuZ0Zvcj1cImxldCBjb2xvciBvZiBjb2xvcnNcIiBbY29sb3JdPVwiY29sb3JcIlxuICAgICAgICAgIFthY3RpdmVdPVwiY29sb3IudG9Mb3dlckNhc2UoKSA9PT0gaGV4LnRvTG93ZXJDYXNlKClcIlxuICAgICAgICAgIChvbkNsaWNrKT1cImhhbmRsZUJsb2NrQ2hhbmdlKCRldmVudClcIlxuICAgICAgICA+PC9jb2xvci1jb21wYWN0LWNvbG9yPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29tcGFjdC1jbGVhclwiPjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8Y29sb3ItY29tcGFjdC1maWVsZHNcbiAgICAgICAgW2hleF09XCJoZXhcIlxuICAgICAgICBbcmdiXT1cInJnYlwiXG4gICAgICAgIChvbkNoYW5nZSk9XCJoYW5kbGVWYWx1ZUNoYW5nZSgkZXZlbnQpXCJcbiAgICAgID48L2NvbG9yLWNvbXBhY3QtZmllbGRzPlxuICAgIDwvZGl2PlxuICA8L2NvbG9yLXJhaXNlZD5cbiAgYCxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAgIC5jb2xvci1jb21wYWN0IHtcbiAgICAgIGJhY2tncm91bmQ6ICNmNmY2ZjY7XG4gICAgICByYWRpdXM6IDRweDtcbiAgICB9XG4gICAgLmNvbXBhY3QtcGlja2VyIHtcbiAgICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICB3aWR0aDogMjQ1cHg7XG4gICAgfVxuICAgIC5jb21wYWN0LWNsZWFyIHtcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgYCxcbiAgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBDb21wYWN0Q29tcG9uZW50IGV4dGVuZHMgQ29sb3JXcmFwIHtcbiAgLyoqIENvbG9yIHNxdWFyZXMgdG8gZGlzcGxheSAqL1xuICBASW5wdXQoKSBjb2xvcnMgPSBbXG4gICAgJyM0RDRENEQnLFxuICAgICcjOTk5OTk5JyxcbiAgICAnI0ZGRkZGRicsXG4gICAgJyNGNDRFM0InLFxuICAgICcjRkU5MjAwJyxcbiAgICAnI0ZDREMwMCcsXG4gICAgJyNEQkRGMDAnLFxuICAgICcjQTRERDAwJyxcbiAgICAnIzY4Q0NDQScsXG4gICAgJyM3M0Q4RkYnLFxuICAgICcjQUVBMUZGJyxcbiAgICAnI0ZEQTFGRicsXG4gICAgJyMzMzMzMzMnLFxuICAgICcjODA4MDgwJyxcbiAgICAnI2NjY2NjYycsXG4gICAgJyNEMzMxMTUnLFxuICAgICcjRTI3MzAwJyxcbiAgICAnI0ZDQzQwMCcsXG4gICAgJyNCMEJDMDAnLFxuICAgICcjNjhCQzAwJyxcbiAgICAnIzE2QTVBNScsXG4gICAgJyMwMDlDRTAnLFxuICAgICcjN0I2NEZGJyxcbiAgICAnI0ZBMjhGRicsXG4gICAgJyMwMDAwMDAnLFxuICAgICcjNjY2NjY2JyxcbiAgICAnI0IzQjNCMycsXG4gICAgJyM5RjA1MDAnLFxuICAgICcjQzQ1MTAwJyxcbiAgICAnI0ZCOUUwMCcsXG4gICAgJyM4MDg5MDAnLFxuICAgICcjMTk0RDMzJyxcbiAgICAnIzBDNzk3RCcsXG4gICAgJyMwMDYyQjEnLFxuICAgICcjNjUzMjk0JyxcbiAgICAnI0FCMTQ5RScsXG4gIF07XG4gIEBJbnB1dCgpIHpEZXB0aDogekRlcHRoID0gMTtcbiAgQElucHV0KCkgcmFkaXVzID0gMTtcbiAgQElucHV0KCkgYmFja2dyb3VuZCA9ICcjZmZmJztcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG4gIGhhbmRsZUJsb2NrQ2hhbmdlKHsgaGV4LCAkZXZlbnQgfSkge1xuICAgIGlmIChpc1ZhbGlkSGV4KGhleCkpIHtcbiAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlKHsgaGV4LCBzb3VyY2U6ICdoZXgnIH0sICRldmVudCk7XG4gICAgfVxuICB9XG4gIGhhbmRsZVZhbHVlQ2hhbmdlKHsgZGF0YSwgJGV2ZW50IH0pIHtcbiAgICB0aGlzLmhhbmRsZUNoYW5nZShkYXRhLCAkZXZlbnQpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIENvbXBhY3RDb21wb25lbnQsXG4gICAgQ29tcGFjdENvbG9yQ29tcG9uZW50LFxuICAgIENvbXBhY3RGaWVsZHNDb21wb25lbnQsXG4gIF0sXG4gIGV4cG9ydHM6IFtDb21wYWN0Q29tcG9uZW50LCBDb21wYWN0Q29sb3JDb21wb25lbnQsIENvbXBhY3RGaWVsZHNDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBFZGl0YWJsZUlucHV0TW9kdWxlLCBTd2F0Y2hNb2R1bGUsIFJhaXNlZE1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIENvbG9yQ29tcGFjdE1vZHVsZSB7fVxuIl19