import { __decorate, __extends } from "tslib";
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input, NgModule, } from '@angular/core';
import { ColorWrap, HueModule, SwatchModule } from 'ngx-color';
import { SliderSwatchComponent } from './slider-swatch.component';
import { SliderSwatchesComponent } from './slider-swatches.component';
var SliderComponent = /** @class */ (function (_super) {
    __extends(SliderComponent, _super);
    function SliderComponent() {
        var _this = _super.call(this) || this;
        _this.pointer = {
            width: '14px',
            height: '14px',
            borderRadius: '6px',
            transform: 'translate(-7px, -2px)',
            backgroundColor: 'rgb(248, 248, 248)',
            boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)',
        };
        _this.radius = 2;
        return _this;
    }
    SliderComponent.prototype.handlePickerChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    __decorate([
        Input()
    ], SliderComponent.prototype, "pointer", void 0);
    __decorate([
        Input()
    ], SliderComponent.prototype, "radius", void 0);
    SliderComponent = __decorate([
        Component({
            selector: 'color-slider',
            template: "\n  <div class=\"slider-picker {{ className }}\">\n    <div class=\"slider-hue\">\n      <color-hue\n        [hsl]=\"hsl\" [radius]=\"radius\" [pointer]=\"pointer\"\n        (onChange)=\"handlePickerChange($event)\"\n      ></color-hue>\n    </div>\n    <div class=\"slider-swatches\">\n      <color-slider-swatches [hsl]=\"hsl\"\n        (onClick)=\"handlePickerChange($event)\"\n      ></color-slider-swatches>\n    </div>\n  </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .slider-hue {\n      height: 12px;\n      position: relative;\n    }\n  "]
        })
    ], SliderComponent);
    return SliderComponent;
}(ColorWrap));
export { SliderComponent };
var ColorSliderModule = /** @class */ (function () {
    function ColorSliderModule() {
    }
    ColorSliderModule = __decorate([
        NgModule({
            declarations: [
                SliderComponent,
                SliderSwatchComponent,
                SliderSwatchesComponent,
            ],
            exports: [SliderComponent, SliderSwatchComponent, SliderSwatchesComponent],
            imports: [CommonModule, HueModule, SwatchModule],
        })
    ], ColorSliderModule);
    return ColorSliderModule;
}());
export { ColorSliderModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jb2xvci9zbGlkZXIvIiwic291cmNlcyI6WyJzbGlkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUNMLFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDL0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUE4QnRFO0lBQXFDLG1DQUFTO0lBWTVDO1FBQUEsWUFDRSxpQkFBTyxTQUNSO1FBWkQsYUFBTyxHQUE4QjtZQUNuQyxLQUFLLEVBQUUsTUFBTTtZQUNiLE1BQU0sRUFBRSxNQUFNO1lBQ2QsWUFBWSxFQUFFLEtBQUs7WUFDbkIsU0FBUyxFQUFFLHVCQUF1QjtZQUNsQyxlQUFlLEVBQUUsb0JBQW9CO1lBQ3JDLFNBQVMsRUFBRSxpQ0FBaUM7U0FDN0MsQ0FBQztRQUNPLFlBQU0sR0FBRyxDQUFDLENBQUM7O0lBSXBCLENBQUM7SUFFRCw0Q0FBa0IsR0FBbEIsVUFBbUIsRUFBZ0I7WUFBZCxjQUFJLEVBQUUsa0JBQU07UUFDL0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQWhCRDtRQURDLEtBQUssRUFBRTtvREFRTjtJQUNPO1FBQVIsS0FBSyxFQUFFO21EQUFZO0lBVlQsZUFBZTtRQTVCM0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGNBQWM7WUFDeEIsUUFBUSxFQUFFLHdiQWNUO1lBU0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsbUJBQW1CLEVBQUUsS0FBSztxQkFSeEIsZ0ZBS0Q7U0FJRixDQUFDO09BQ1csZUFBZSxDQW1CM0I7SUFBRCxzQkFBQztDQUFBLEFBbkJELENBQXFDLFNBQVMsR0FtQjdDO1NBbkJZLGVBQWU7QUE4QjVCO0lBQUE7SUFBZ0MsQ0FBQztJQUFwQixpQkFBaUI7UUFUN0IsUUFBUSxDQUFDO1lBQ1IsWUFBWSxFQUFFO2dCQUNaLGVBQWU7Z0JBQ2YscUJBQXFCO2dCQUNyQix1QkFBdUI7YUFDeEI7WUFDRCxPQUFPLEVBQUUsQ0FBQyxlQUFlLEVBQUUscUJBQXFCLEVBQUUsdUJBQXVCLENBQUM7WUFDMUUsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFNBQVMsRUFBRSxZQUFZLENBQUM7U0FDakQsQ0FBQztPQUNXLGlCQUFpQixDQUFHO0lBQUQsd0JBQUM7Q0FBQSxBQUFqQyxJQUFpQztTQUFwQixpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIE5nTW9kdWxlLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29sb3JXcmFwLCBIdWVNb2R1bGUsIFN3YXRjaE1vZHVsZSB9IGZyb20gJ25neC1jb2xvcic7XG5pbXBvcnQgeyBTbGlkZXJTd2F0Y2hDb21wb25lbnQgfSBmcm9tICcuL3NsaWRlci1zd2F0Y2guY29tcG9uZW50JztcbmltcG9ydCB7IFNsaWRlclN3YXRjaGVzQ29tcG9uZW50IH0gZnJvbSAnLi9zbGlkZXItc3dhdGNoZXMuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29sb3Itc2xpZGVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgPGRpdiBjbGFzcz1cInNsaWRlci1waWNrZXIge3sgY2xhc3NOYW1lIH19XCI+XG4gICAgPGRpdiBjbGFzcz1cInNsaWRlci1odWVcIj5cbiAgICAgIDxjb2xvci1odWVcbiAgICAgICAgW2hzbF09XCJoc2xcIiBbcmFkaXVzXT1cInJhZGl1c1wiIFtwb2ludGVyXT1cInBvaW50ZXJcIlxuICAgICAgICAob25DaGFuZ2UpPVwiaGFuZGxlUGlja2VyQ2hhbmdlKCRldmVudClcIlxuICAgICAgPjwvY29sb3ItaHVlPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzbGlkZXItc3dhdGNoZXNcIj5cbiAgICAgIDxjb2xvci1zbGlkZXItc3dhdGNoZXMgW2hzbF09XCJoc2xcIlxuICAgICAgICAob25DbGljayk9XCJoYW5kbGVQaWNrZXJDaGFuZ2UoJGV2ZW50KVwiXG4gICAgICA+PC9jb2xvci1zbGlkZXItc3dhdGNoZXM+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICBgLFxuICBzdHlsZXM6IFtcbiAgICBgXG4gICAgLnNsaWRlci1odWUge1xuICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgYCxcbiAgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBTbGlkZXJDb21wb25lbnQgZXh0ZW5kcyBDb2xvcldyYXAge1xuICBASW5wdXQoKVxuICBwb2ludGVyOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0ge1xuICAgIHdpZHRoOiAnMTRweCcsXG4gICAgaGVpZ2h0OiAnMTRweCcsXG4gICAgYm9yZGVyUmFkaXVzOiAnNnB4JyxcbiAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoLTdweCwgLTJweCknLFxuICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYigyNDgsIDI0OCwgMjQ4KScsXG4gICAgYm94U2hhZG93OiAnMCAxcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjM3KScsXG4gIH07XG4gIEBJbnB1dCgpIHJhZGl1cyA9IDI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIGhhbmRsZVBpY2tlckNoYW5nZSh7IGRhdGEsICRldmVudCB9KSB7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UoZGF0YSwgJGV2ZW50KTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTbGlkZXJDb21wb25lbnQsXG4gICAgU2xpZGVyU3dhdGNoQ29tcG9uZW50LFxuICAgIFNsaWRlclN3YXRjaGVzQ29tcG9uZW50LFxuICBdLFxuICBleHBvcnRzOiBbU2xpZGVyQ29tcG9uZW50LCBTbGlkZXJTd2F0Y2hDb21wb25lbnQsIFNsaWRlclN3YXRjaGVzQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgSHVlTW9kdWxlLCBTd2F0Y2hNb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBDb2xvclNsaWRlck1vZHVsZSB7fVxuIl19