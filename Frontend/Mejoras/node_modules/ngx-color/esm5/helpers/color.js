import { TinyColor } from '@ctrl/tinycolor';
export function simpleCheckForValidColor(data) {
    var keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];
    var checked = 0;
    var passed = 0;
    keysToCheck.forEach(function (letter) {
        if (!data[letter]) {
            return;
        }
        checked += 1;
        if (!isNaN(data[letter])) {
            passed += 1;
        }
        if (letter === 's' || letter === 'l') {
            var percentPatt = /^\d+%$/;
            if (percentPatt.test(data[letter])) {
                passed += 1;
            }
        }
    });
    return checked === passed ? data : false;
}
export function toState(data, oldHue) {
    var color = data.hex ? new TinyColor(data.hex) : new TinyColor(data);
    var hsl = color.toHsl();
    var hsv = color.toHsv();
    var rgb = color.toRgb();
    var hex = color.toHex();
    if (hsl.s === 0) {
        hsl.h = oldHue || 0;
        hsv.h = oldHue || 0;
    }
    var transparent = hex === '000000' && rgb.a === 0;
    return {
        hsl: hsl,
        hex: transparent ? 'transparent' : color.toHexString(),
        rgb: rgb,
        hsv: hsv,
        oldHue: data.h || oldHue || hsl.h,
        source: data.source,
    };
}
export function isValidHex(hex) {
    return new TinyColor(hex).isValid;
}
export function getContrastingColor(data) {
    if (!data) {
        return '#fff';
    }
    var col = toState(data);
    if (col.hex === 'transparent') {
        return 'rgba(0,0,0,0.4)';
    }
    var yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;
    return yiq >= 128 ? '#000' : '#fff';
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtY29sb3IvIiwic291cmNlcyI6WyJoZWxwZXJzL2NvbG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUk1QyxNQUFNLFVBQVUsd0JBQXdCLENBQUMsSUFBSTtJQUMzQyxJQUFNLFdBQVcsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM3RCxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDaEIsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFBLE1BQU07UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNqQixPQUFPO1NBQ1I7UUFDRCxPQUFPLElBQUksQ0FBQyxDQUFDO1FBQ2IsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRTtZQUN4QixNQUFNLElBQUksQ0FBQyxDQUFDO1NBQ2I7UUFDRCxJQUFJLE1BQU0sS0FBSyxHQUFHLElBQUksTUFBTSxLQUFLLEdBQUcsRUFBRTtZQUNwQyxJQUFNLFdBQVcsR0FBRyxRQUFRLENBQUM7WUFDN0IsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFO2dCQUNsQyxNQUFNLElBQUksQ0FBQyxDQUFDO2FBQ2I7U0FDRjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxPQUFPLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztBQUMzQyxDQUFDO0FBRUQsTUFBTSxVQUFVLE9BQU8sQ0FBQyxJQUFJLEVBQUUsTUFBZTtJQUMzQyxJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZFLElBQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUMxQixJQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDMUIsSUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzFCLElBQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUMxQixJQUFJLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ2YsR0FBRyxDQUFDLENBQUMsR0FBRyxNQUFNLElBQUksQ0FBQyxDQUFDO1FBQ3BCLEdBQUcsQ0FBQyxDQUFDLEdBQUcsTUFBTSxJQUFJLENBQUMsQ0FBQztLQUNyQjtJQUNELElBQU0sV0FBVyxHQUFHLEdBQUcsS0FBSyxRQUFRLElBQUksR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFcEQsT0FBTztRQUNMLEdBQUcsS0FBQTtRQUNILEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRTtRQUN0RCxHQUFHLEtBQUE7UUFDSCxHQUFHLEtBQUE7UUFDSCxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsSUFBSSxNQUFNLElBQUksR0FBRyxDQUFDLENBQUM7UUFDakMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO0tBQ3BCLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxHQUFXO0lBQ3BDLE9BQU8sSUFBSSxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDO0FBQ3BDLENBQUM7QUFFRCxNQUFNLFVBQVUsbUJBQW1CLENBQUMsSUFBSTtJQUN0QyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1QsT0FBTyxNQUFNLENBQUM7S0FDZjtJQUNELElBQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQixJQUFJLEdBQUcsQ0FBQyxHQUFHLEtBQUssYUFBYSxFQUFFO1FBQzdCLE9BQU8saUJBQWlCLENBQUM7S0FDMUI7SUFDRCxJQUFNLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3pFLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7QUFDdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRpbnlDb2xvciB9IGZyb20gJ0BjdHJsL3Rpbnljb2xvcic7XG5cbmltcG9ydCB7IENvbG9yIH0gZnJvbSAnLi9jb2xvci5pbnRlcmZhY2VzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHNpbXBsZUNoZWNrRm9yVmFsaWRDb2xvcihkYXRhKSB7XG4gIGNvbnN0IGtleXNUb0NoZWNrID0gWydyJywgJ2cnLCAnYicsICdhJywgJ2gnLCAncycsICdsJywgJ3YnXTtcbiAgbGV0IGNoZWNrZWQgPSAwO1xuICBsZXQgcGFzc2VkID0gMDtcbiAga2V5c1RvQ2hlY2suZm9yRWFjaChsZXR0ZXIgPT4ge1xuICAgIGlmICghZGF0YVtsZXR0ZXJdKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNoZWNrZWQgKz0gMTtcbiAgICBpZiAoIWlzTmFOKGRhdGFbbGV0dGVyXSkpIHtcbiAgICAgIHBhc3NlZCArPSAxO1xuICAgIH1cbiAgICBpZiAobGV0dGVyID09PSAncycgfHwgbGV0dGVyID09PSAnbCcpIHtcbiAgICAgIGNvbnN0IHBlcmNlbnRQYXR0ID0gL15cXGQrJSQvO1xuICAgICAgaWYgKHBlcmNlbnRQYXR0LnRlc3QoZGF0YVtsZXR0ZXJdKSkge1xuICAgICAgICBwYXNzZWQgKz0gMTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY2hlY2tlZCA9PT0gcGFzc2VkID8gZGF0YSA6IGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9TdGF0ZShkYXRhLCBvbGRIdWU/OiBudW1iZXIpOiBDb2xvciB7XG4gIGNvbnN0IGNvbG9yID0gZGF0YS5oZXggPyBuZXcgVGlueUNvbG9yKGRhdGEuaGV4KSA6IG5ldyBUaW55Q29sb3IoZGF0YSk7XG4gIGNvbnN0IGhzbCA9IGNvbG9yLnRvSHNsKCk7XG4gIGNvbnN0IGhzdiA9IGNvbG9yLnRvSHN2KCk7XG4gIGNvbnN0IHJnYiA9IGNvbG9yLnRvUmdiKCk7XG4gIGNvbnN0IGhleCA9IGNvbG9yLnRvSGV4KCk7XG4gIGlmIChoc2wucyA9PT0gMCkge1xuICAgIGhzbC5oID0gb2xkSHVlIHx8IDA7XG4gICAgaHN2LmggPSBvbGRIdWUgfHwgMDtcbiAgfVxuICBjb25zdCB0cmFuc3BhcmVudCA9IGhleCA9PT0gJzAwMDAwMCcgJiYgcmdiLmEgPT09IDA7XG5cbiAgcmV0dXJuIHtcbiAgICBoc2wsXG4gICAgaGV4OiB0cmFuc3BhcmVudCA/ICd0cmFuc3BhcmVudCcgOiBjb2xvci50b0hleFN0cmluZygpLFxuICAgIHJnYixcbiAgICBoc3YsXG4gICAgb2xkSHVlOiBkYXRhLmggfHwgb2xkSHVlIHx8IGhzbC5oLFxuICAgIHNvdXJjZTogZGF0YS5zb3VyY2UsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkSGV4KGhleDogc3RyaW5nKSB7XG4gIHJldHVybiBuZXcgVGlueUNvbG9yKGhleCkuaXNWYWxpZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRyYXN0aW5nQ29sb3IoZGF0YSkge1xuICBpZiAoIWRhdGEpIHtcbiAgICByZXR1cm4gJyNmZmYnO1xuICB9XG4gIGNvbnN0IGNvbCA9IHRvU3RhdGUoZGF0YSk7XG4gIGlmIChjb2wuaGV4ID09PSAndHJhbnNwYXJlbnQnKSB7XG4gICAgcmV0dXJuICdyZ2JhKDAsMCwwLDAuNCknO1xuICB9XG4gIGNvbnN0IHlpcSA9IChjb2wucmdiLnIgKiAyOTkgKyBjb2wucmdiLmcgKiA1ODcgKyBjb2wucmdiLmIgKiAxMTQpIC8gMTAwMDtcbiAgcmV0dXJuIHlpcSA+PSAxMjggPyAnIzAwMCcgOiAnI2ZmZic7XG59XG4iXX0=