import { __decorate } from 'tslib';
import { CommonModule } from '@angular/common';
import { EventEmitter, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { red, pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, yellow, amber, orange, deepOrange, brown, blueGrey } from 'material-colors';
import { getContrastingColor, ColorWrap, SwatchModule, RaisedModule } from 'ngx-color';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-color';
import * as ɵngcc2 from '@angular/common';

function SwatchesColorComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 3);
    ɵngcc0.ɵɵelement(2, "path", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("first", ctx_r0.first)("last", ctx_r0.last);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("fill", ctx_r0.getContrastingColor(ctx_r0.color));
} }
function SwatchesGroupComponent_color_swatches_color_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "color-swatches-color", 2);
    ɵngcc0.ɵɵlistener("onClick", function SwatchesGroupComponent_color_swatches_color_1_Template_color_swatches_color_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onClick.emit($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const color_r1 = ctx.$implicit;
    const idx_r2 = ctx.index;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("active", color_r1.toLowerCase() === ctx_r0.active)("color", color_r1)("first", idx_r2 === 0)("last", idx_r2 === ctx_r0.group.length - 1);
} }
function SwatchesComponent_color_swatches_group_4_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "color-swatches-group", 4);
    ɵngcc0.ɵɵlistener("onClick", function SwatchesComponent_color_swatches_group_4_Template_color_swatches_group_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.handlePickerChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const group_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("group", group_r1)("active", ctx_r0.hex);
} }
let SwatchesColorComponent = class SwatchesColorComponent {
    constructor() {
        this.first = false;
        this.last = false;
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
        this.getContrastingColor = getContrastingColor;
        this.colorStyle = {
            width: '40px',
            height: '24px',
            cursor: 'pointer',
            marginBottom: '1px',
        };
        this.focusStyle = {};
    }
    ngOnInit() {
        this.colorStyle.background = this.color;
        this.focusStyle.boxShadow = `0 0 4px ${this.color}`;
        if (this.first) {
            this.colorStyle.borderRadius = '2px 2px 0 0';
        }
        if (this.last) {
            this.colorStyle.borderRadius = '0 0 2px 2px';
        }
        if (this.color === '#FFFFFF') {
            this.colorStyle.boxShadow = 'inset 0 0 0 1px #ddd';
        }
    }
    handleClick($event) {
        this.onClick.emit({
            data: {
                hex: this.color,
                source: 'hex',
            },
            $event,
        });
    }
};
SwatchesColorComponent.ɵfac = function SwatchesColorComponent_Factory(t) { return new (t || SwatchesColorComponent)(); };
SwatchesColorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwatchesColorComponent, selectors: [["color-swatches-color"]], inputs: { first: "first", last: "last", color: "color", active: "active" }, outputs: { onClick: "onClick", onSwatchHover: "onSwatchHover" }, decls: 2, vars: 9, consts: [[3, "color", "focusStyle", "click", "onHover"], ["class", "swatch-check", 3, "first", "last", 4, "ngIf"], [1, "swatch-check"], ["viewBox", "0 0 24 24", 2, "width", "24px", "height", "24px"], ["d", "M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"]], template: function SwatchesColorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "color-swatch", 0);
        ɵngcc0.ɵɵlistener("click", function SwatchesColorComponent_Template_color_swatch_click_0_listener($event) { return ctx.handleClick($event); })("onHover", function SwatchesColorComponent_Template_color_swatch_onHover_0_listener($event) { return ctx.onSwatchHover.emit($event); });
        ɵngcc0.ɵɵtemplate(1, SwatchesColorComponent_div_1_Template, 3, 6, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleMap(ctx.colorStyle);
        ɵngcc0.ɵɵclassProp("first", ctx.first)("last", ctx.last);
        ɵngcc0.ɵɵproperty("color", ctx.color)("focusStyle", ctx.focusStyle);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.active);
    } }, directives: [ɵngcc1.SwatchComponent, ɵngcc2.NgIf], styles: [".swatches-group[_ngcontent-%COMP%] {\n      padding-bottom: 10px;\n      width: 40px;\n      float: left;\n      margin-right: 10px;\n    }\n    .swatch-check[_ngcontent-%COMP%] {\n      margin-left: 8px;\n    }"], changeDetection: 0 });
__decorate([
    Input()
], SwatchesColorComponent.prototype, "color", void 0);
__decorate([
    Input()
], SwatchesColorComponent.prototype, "first", void 0);
__decorate([
    Input()
], SwatchesColorComponent.prototype, "last", void 0);
__decorate([
    Input()
], SwatchesColorComponent.prototype, "active", void 0);
__decorate([
    Output()
], SwatchesColorComponent.prototype, "onClick", void 0);
__decorate([
    Output()
], SwatchesColorComponent.prototype, "onSwatchHover", void 0);

let SwatchesGroupComponent = class SwatchesGroupComponent {
    constructor() {
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
    }
};
SwatchesGroupComponent.ɵfac = function SwatchesGroupComponent_Factory(t) { return new (t || SwatchesGroupComponent)(); };
SwatchesGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwatchesGroupComponent, selectors: [["color-swatches-group"]], inputs: { group: "group", active: "active" }, outputs: { onClick: "onClick", onSwatchHover: "onSwatchHover" }, decls: 2, vars: 1, consts: [[1, "swatches-group"], [3, "active", "color", "first", "last", "onClick", 4, "ngFor", "ngForOf"], [3, "active", "color", "first", "last", "onClick"]], template: function SwatchesGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SwatchesGroupComponent_color_swatches_color_1_Template, 1, 4, "color-swatches-color", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.group);
    } }, directives: [ɵngcc2.NgForOf, SwatchesColorComponent], styles: [".swatches-group[_ngcontent-%COMP%] {\n      padding-bottom: 10px;\n      width: 40px;\n      float: left;\n      margin-right: 10px;\n    }"], changeDetection: 0 });
__decorate([
    Input()
], SwatchesGroupComponent.prototype, "group", void 0);
__decorate([
    Input()
], SwatchesGroupComponent.prototype, "active", void 0);
__decorate([
    Output()
], SwatchesGroupComponent.prototype, "onClick", void 0);
__decorate([
    Output()
], SwatchesGroupComponent.prototype, "onSwatchHover", void 0);

let SwatchesComponent = class SwatchesComponent extends ColorWrap {
    constructor() {
        super();
        /** Pixel value for picker width */
        this.width = 320;
        /** Color squares to display */
        this.height = 240;
        /** An array of color groups, each with an array of colors */
        this.colors = [
            [
                red['900'],
                red['700'],
                red['500'],
                red['300'],
                red['100'],
            ],
            [
                pink['900'],
                pink['700'],
                pink['500'],
                pink['300'],
                pink['100'],
            ],
            [
                purple['900'],
                purple['700'],
                purple['500'],
                purple['300'],
                purple['100'],
            ],
            [
                deepPurple['900'],
                deepPurple['700'],
                deepPurple['500'],
                deepPurple['300'],
                deepPurple['100'],
            ],
            [
                indigo['900'],
                indigo['700'],
                indigo['500'],
                indigo['300'],
                indigo['100'],
            ],
            [
                blue['900'],
                blue['700'],
                blue['500'],
                blue['300'],
                blue['100'],
            ],
            [
                lightBlue['900'],
                lightBlue['700'],
                lightBlue['500'],
                lightBlue['300'],
                lightBlue['100'],
            ],
            [
                cyan['900'],
                cyan['700'],
                cyan['500'],
                cyan['300'],
                cyan['100'],
            ],
            [
                teal['900'],
                teal['700'],
                teal['500'],
                teal['300'],
                teal['100'],
            ],
            [
                '#194D33',
                green['700'],
                green['500'],
                green['300'],
                green['100'],
            ],
            [
                lightGreen['900'],
                lightGreen['700'],
                lightGreen['500'],
                lightGreen['300'],
                lightGreen['100'],
            ],
            [
                lime['900'],
                lime['700'],
                lime['500'],
                lime['300'],
                lime['100'],
            ],
            [
                yellow['900'],
                yellow['700'],
                yellow['500'],
                yellow['300'],
                yellow['100'],
            ],
            [
                amber['900'],
                amber['700'],
                amber['500'],
                amber['300'],
                amber['100'],
            ],
            [
                orange['900'],
                orange['700'],
                orange['500'],
                orange['300'],
                orange['100'],
            ],
            [
                deepOrange['900'],
                deepOrange['700'],
                deepOrange['500'],
                deepOrange['300'],
                deepOrange['100'],
            ],
            [
                brown['900'],
                brown['700'],
                brown['500'],
                brown['300'],
                brown['100'],
            ],
            [
                blueGrey['900'],
                blueGrey['700'],
                blueGrey['500'],
                blueGrey['300'],
                blueGrey['100'],
            ],
            ['#000000', '#525252', '#969696', '#D9D9D9', '#FFFFFF'],
        ];
        this.zDepth = 1;
        this.radius = 1;
        this.background = '#fff';
    }
    handlePickerChange({ data, $event }) {
        this.handleChange(data, $event);
    }
};
SwatchesComponent.ɵfac = function SwatchesComponent_Factory(t) { return new (t || SwatchesComponent)(); };
SwatchesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwatchesComponent, selectors: [["color-swatches"]], inputs: { width: "width", height: "height", colors: "colors", zDepth: "zDepth", radius: "radius", background: "background" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 13, consts: [[3, "zDepth", "background", "radius"], [1, "swatches-overflow"], [1, "swatches-body"], [3, "group", "active", "onClick", 4, "ngFor", "ngForOf"], [3, "group", "active", "onClick"]], template: function SwatchesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "color-raised", 0);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵtemplate(4, SwatchesComponent_color_swatches_group_4_Template, 1, 2, "color-swatches-group", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("swatches-picker ", ctx.className, "");
        ɵngcc0.ɵɵstyleProp("width", ctx.width, "px")("height", ctx.height, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("zDepth", ctx.zDepth)("background", ctx.background)("radius", ctx.radius);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("height", ctx.height, "px");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.colors);
    } }, directives: [ɵngcc1.RaisedComponent, ɵngcc2.NgForOf, SwatchesGroupComponent], styles: [".swatches-overflow[_ngcontent-%COMP%] {\n        overflow-y: scroll;\n      }\n      .swatches-overflow[_ngcontent-%COMP%] {\n        padding: 16px 0 6px 16px;\n      }"], changeDetection: 0 });
__decorate([
    Input()
], SwatchesComponent.prototype, "width", void 0);
__decorate([
    Input()
], SwatchesComponent.prototype, "height", void 0);
__decorate([
    Input()
], SwatchesComponent.prototype, "colors", void 0);
__decorate([
    Input()
], SwatchesComponent.prototype, "zDepth", void 0);
__decorate([
    Input()
], SwatchesComponent.prototype, "radius", void 0);
__decorate([
    Input()
], SwatchesComponent.prototype, "background", void 0);
let ColorSwatchesModule = class ColorSwatchesModule {
};
ColorSwatchesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ColorSwatchesModule });
ColorSwatchesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ColorSwatchesModule_Factory(t) { return new (t || ColorSwatchesModule)(); }, imports: [[CommonModule, SwatchModule, RaisedModule]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SwatchesColorComponent, [{
        type: Component,
        args: [{
                selector: 'color-swatches-color',
                template: `
  <color-swatch [color]="color" [style]="colorStyle" [focusStyle]="focusStyle"
    [class.first]="first" [class.last]="last"
    (click)="handleClick($event)" (onHover)="onSwatchHover.emit($event)">
    <div class="swatch-check" *ngIf="active" [class.first]="first" [class.last]="last">
      <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" [style.fill]="getContrastingColor(color)">
        <path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" />
      </svg>
    </div>
  </color-swatch>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                styles: [`
    .swatches-group {
      padding-bottom: 10px;
      width: 40px;
      float: left;
      margin-right: 10px;
    }
    .swatch-check {
      margin-left: 8px;
    }
  `]
            }]
    }], function () { return []; }, { first: [{
            type: Input
        }], last: [{
            type: Input
        }], onClick: [{
            type: Output
        }], onSwatchHover: [{
            type: Output
        }], color: [{
            type: Input
        }], active: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SwatchesGroupComponent, [{
        type: Component,
        args: [{
                selector: 'color-swatches-group',
                template: `
  <div class="swatches-group">
    <color-swatches-color
      *ngFor="let color of group; let idx = index;"
      [active]="color.toLowerCase() === active"
      [color]="color"
      [first]="idx === 0"
      [last]="idx === group.length - 1"
      (onClick)="onClick.emit($event)"
    >
    </color-swatches-color>
  </div>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                styles: [`
    .swatches-group {
      padding-bottom: 10px;
      width: 40px;
      float: left;
      margin-right: 10px;
    }
  `]
            }]
    }], function () { return []; }, { onClick: [{
            type: Output
        }], onSwatchHover: [{
            type: Output
        }], group: [{
            type: Input
        }], active: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SwatchesComponent, [{
        type: Component,
        args: [{
                selector: 'color-swatches',
                template: `
  <div class="swatches-picker {{ className }}"
    [style.width.px]="width" [style.height.px]="height">
    <color-raised [zDepth]="zDepth" [background]="background" [radius]="radius">
      <div class="swatches-overflow" [style.height.px]="height">
        <div class="swatches-body">
          <color-swatches-group
            *ngFor="let group of colors"
            [group]="group" [active]="hex"
            (onClick)="handlePickerChange($event)"
          ></color-swatches-group>
        </div>
      </div>
    </color-raised>
  </div>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                styles: [`
      .swatches-overflow {
        overflow-y: scroll;
      }
      .swatches-overflow {
        padding: 16px 0 6px 16px;
      }
    `]
            }]
    }], function () { return []; }, { width: [{
            type: Input
        }], height: [{
            type: Input
        }], colors: [{
            type: Input
        }], zDepth: [{
            type: Input
        }], radius: [{
            type: Input
        }], background: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ColorSwatchesModule, { declarations: function () { return [SwatchesComponent,
        SwatchesGroupComponent,
        SwatchesColorComponent]; }, imports: function () { return [CommonModule, SwatchModule, RaisedModule]; }, exports: function () { return [SwatchesComponent,
        SwatchesGroupComponent,
        SwatchesColorComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorSwatchesModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    SwatchesComponent,
                    SwatchesGroupComponent,
                    SwatchesColorComponent,
                ],
                exports: [SwatchesComponent, SwatchesGroupComponent, SwatchesColorComponent],
                imports: [CommonModule, SwatchModule, RaisedModule]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ColorSwatchesModule, SwatchesComponent, SwatchesGroupComponent as ɵa, SwatchesColorComponent as ɵb };

//# sourceMappingURL=ngx-color-swatches.js.map