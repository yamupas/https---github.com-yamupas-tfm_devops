{"version":3,"file":"ngx-color-hue.js","sources":["ng:/ngx-color/hue/hue-picker.component.ts","ng:/ngx-color/hue/ngx-color-hue.ts"],"names":[],"mappings":";;;;;;;IAiCa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,SAAS;AAAG,IAgBlD;AACF,QAAI,KAAK,EAAE,CAAC;AACZ;AAGqB,QAnBV,UAAK,GAAoB,GAAG,CAAC;AACxC;AACM,QAAK,WAAM,GAAoB,EAAE,CAAC;AACxC,QAAW,WAAM,GAAG,CAAC,CAAC;AACtB,QAAW,cAAS,GAA8B,YAAY,CAAC;AAC/D,QAAE,YAAO,GAA4B;AACrC,YAAI,KAAK,EAAE,MAAM;AACjB,YAAI,MAAM,EAAE,MAAM;AAClB,YAAI,YAAY,EAAE,KAAK;AACvB,YAAI,SAAS,EAAE,uBAAuB;AACtC,YAAI,eAAe,EAAE,oBAAoB;AACzC,YAAI,SAAS,EAAE,iCAAiC;AAChD,SAAG,CAAC;AACJ,KAGG;AACH,IACE,WAAW;AACb,QAAI,IAAI,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;AACvC,YAAM,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,uBAAuB,CAAC;AACvD,SAAK;AACL,QAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACpD,KAAG;AACH,IAAE,kBAAkB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;AACrC,QAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AACjE,KAAG;AACH;;;;;;;;;;;;;kJAAC;AA3BU;AAAa,IAArB,KAAK,EAAE;AAAC,iDAA6B;AAE7B;AAAa,IAArB,KAAK,EAAE;AAAC,kDAA6B;AAC7B;AACV,IADE,KAAK,EAAE;AAAC,kDAAW;AACX;AAAa,IAArB,KAAK,EAAE;AAAC,qDAAoD,CAwB/D;AA9Ba,kBAAkB,oBAtB9B,tCAqDD,IAKa,cAAc,GAA3B,MAAa,cAAc;AAAG,EAAA;AA1DpB,CAAC,UACT,QAAQ,EAAE,kBAAkB,UAC5B,QAAQ,EAAE,3DAwDC,cAAc,oBAL1B,QAAQ,CAAC,UACR,YAAY,EAAE,CAAC;aAAkB,CAAC,UAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC,UAC7B,OAAO,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,OACnC,CAAC,IACW,cAAc,CAAG;;UA/C3B,UAQD;UAAe,EAAE;kBAAuB,CAAC,MAAM,UAC/C;QAAmB,EAAE,KAAK;MAPxB;mBAID,OAIF,CAAC,IACW,kBAAkB,CA6B9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQD;AAAC;ACtED;AACA;AACA;AACA;AACA;AACO","sourcesContent":["import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n  OnChanges,\n} from '@angular/core';\n\nimport { ColorWrap, HueModule, toState } from 'ngx-color';\n\n@Component({\n  selector: 'color-hue-picker',\n  template: `\n  <div class=\"hue-picker {{ className }}\"\n    [style.width.px]=\"width\" [style.height.px]=\"height\"\n  >\n    <color-hue [hsl]=\"hsl\" [pointer]=\"pointer\"\n      [direction]=\"direction\" [radius]=\"radius\"\n      (onChange)=\"handlePickerChange($event)\"\n    ></color-hue>\n  </div>\n  `,\n  styles: [\n    `\n    .hue-picker {\n      position: relative;\n    }\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class HuePickerComponent extends ColorWrap implements OnChanges {\n  /** Pixel value for picker width */\n  @Input() width: string | number = 316;\n  /** Pixel value for picker height */\n  @Input() height: string | number = 16;\n  @Input() radius = 2;\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n  pointer: {[key: string]: string} = {\n    width: '18px',\n    height: '18px',\n    borderRadius: '50%',\n    transform: 'translate(-9px, -2px)',\n    backgroundColor: 'rgb(248, 248, 248)',\n    boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)',\n  };\n\n  constructor() {\n    super();\n  }\n\n  ngOnChanges() {\n    if (this.direction === 'vertical') {\n      this.pointer.transform = 'translate(-3px, -9px)';\n    }\n    this.setState(toState(this.color, this.oldHue));\n  }\n  handlePickerChange({ data, $event }) {\n    this.handleChange({ a: 1, h: data.h, l: 0.5, s: 1 }, $event);\n  }\n}\n\n@NgModule({\n  declarations: [HuePickerComponent],\n  exports: [HuePickerComponent],\n  imports: [CommonModule, HueModule],\n})\nexport class ColorHueModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './hue-picker.component';\n"]}