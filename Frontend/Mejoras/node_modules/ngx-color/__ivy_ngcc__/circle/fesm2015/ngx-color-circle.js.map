{"version":3,"file":"ngx-color-circle.js","sources":["ng:/ngx-color/circle/circle-swatch.component.ts","ng:/ngx-color/circle/circle.component.ts","ng:/ngx-color/circle/ngx-color-circle.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'color-circle-swatch',\n  template: `\n  <div class=\"circle-swatch\"\n    [style.width.px]=\"circleSize\" [style.height.px]=\"circleSize\"\n    [style.margin-right.px]=\"circleSpacing\" [style.margin-bottom.px]=\"circleSpacing\"\n    >\n    <color-swatch\n      [color]=\"color\" [style]=\"swatchStyle\" [focus]=\"focus\" [focusStyle]=\"focusStyle\"\n      (onClick)=\"handleClick($event)\" (onHover)=\"onSwatchHover.emit($event)\">\n    </color-swatch>\n    <div class=\"clear\"></div>\n  </div>\n  `,\n  styles: [\n    `\n  .circle-swatch {\n    transform: scale(1);\n    transition: transform 100ms ease;\n  }\n  .circle-swatch:hover {\n    transform: scale(1.2);\n  }\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class CircleSwatchComponent implements OnChanges {\n  @Input() color: string;\n  @Input() circleSize = 28;\n  @Input() circleSpacing = 14;\n  @Input() focus = false;\n  @Output() onClick = new EventEmitter<any>();\n  @Output() onSwatchHover = new EventEmitter<any>();\n  focusStyle: { [key: string]: string } = {};\n  swatchStyle: { [key: string]: string } = {\n    borderRadius: '50%',\n    background: 'transparent',\n    transition: '100ms box-shadow ease 0s',\n  };\n\n  ngOnChanges() {\n    this.swatchStyle.boxShadow = `inset 0 0 0 ${this.circleSize / 2}px ${this.color}`;\n    this.focusStyle.boxShadow = `inset 0 0 0 ${ this.circleSize / 2 }px ${ this.color }, 0 0 5px ${ this.color }`;\n    if (this.focus) {\n      this.focusStyle.boxShadow = `inset 0 0 0 3px ${ this.color }, 0 0 5px ${ this.color }`;\n    }\n  }\n  handleClick({ hex, $event }) {\n    this.onClick.emit({ hex, $event });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport {\n  amber,\n  blue,\n  blueGrey,\n  brown,\n  cyan,\n  deepOrange,\n  deepPurple,\n  green,\n  indigo,\n  lightBlue,\n  lightGreen,\n  lime,\n  orange,\n  pink,\n  purple,\n  red,\n  teal,\n  yellow,\n} from 'material-colors';\nimport { TinyColor } from '@ctrl/tinycolor';\n\nimport { ColorWrap, SwatchModule, isValidHex } from 'ngx-color';\nimport { CircleSwatchComponent } from './circle-swatch.component';\n\n@Component({\n  selector: 'color-circle',\n  template: `\n    <div\n      class=\"circle-picker {{ className }}\"\n      [style.width.px]=\"width\"\n      [style.margin-right.px]=\"-circleSpacing\"\n      [style.margin-bottom.px]=\"-circleSpacing\"\n    >\n      <color-circle-swatch\n        *ngFor=\"let color of colors\"\n        [circleSize]=\"circleSize\"\n        [circleSpacing]=\"circleSpacing\"\n        [color]=\"color\"\n        [focus]=\"isActive(color)\"\n        (onClick)=\"handleBlockChange($event)\"\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\n      ></color-circle-swatch>\n    </div>\n  `,\n  styles: [\n    `\n      .circle-picker {\n        display: flex;\n        flex-wrap: wrap;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class CircleComponent extends ColorWrap {\n  /** Pixel value for picker width */\n  @Input() width: string | number = 252;\n  /** Color squares to display */\n  @Input()\n  colors: string[] = [\n    red['500'],\n    pink['500'],\n    purple['500'],\n    deepPurple['500'],\n    indigo['500'],\n    blue['500'],\n    lightBlue['500'],\n    cyan['500'],\n    teal['500'],\n    green['500'],\n    lightGreen['500'],\n    lime['500'],\n    yellow['500'],\n    amber['500'],\n    orange['500'],\n    deepOrange['500'],\n    brown['500'],\n    blueGrey['500'],\n  ];\n  /** Value for circle size */\n  @Input() circleSize = 28;\n  /** Value for spacing between circles */\n  @Input() circleSpacing = 14;\n\n  constructor() {\n    super();\n  }\n  isActive(color: string) {\n    return new TinyColor(this.hex).equals(color);\n  }\n  handleBlockChange({ hex, $event }: { hex: string, $event: Event }) {\n    if (isValidHex(hex)) {\n      this.handleChange({ hex, source: 'hex' }, $event);\n    }\n  }\n  handleValueChange({ data, $event }) {\n    this.handleChange(data, $event);\n  }\n}\n\n@NgModule({\n  declarations: [CircleComponent, CircleSwatchComponent],\n  exports: [CircleComponent, CircleSwatchComponent],\n  imports: [CommonModule, SwatchModule],\n})\nexport class ColorCircleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './circle.component';\n\nexport {CircleSwatchComponent as Éµa} from './circle-swatch.component';"]}