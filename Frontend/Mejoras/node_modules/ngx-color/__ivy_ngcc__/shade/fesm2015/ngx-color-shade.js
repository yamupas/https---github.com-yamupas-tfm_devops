import { __decorate } from 'tslib';
import { CommonModule } from '@angular/common';
import { Input, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { ColorWrap, toState, ShadeModule } from 'ngx-color';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-color';
let ShadeSliderComponent = class ShadeSliderComponent extends ColorWrap {
    constructor() {
        super();
        /** Pixel value for picker width */
        this.width = 316;
        /** Pixel value for picker height */
        this.height = 16;
        this.pointer = {
            width: '18px',
            height: '18px',
            borderRadius: '50%',
            transform: 'translate(-9px, -2px)',
            boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)',
        };
    }
    ngOnChanges() {
        this.setState(toState(this.color, this.oldHue));
    }
    handlePickerChange({ data, $event }) {
        this.handleChange(data, $event);
    }
};
ShadeSliderComponent.ɵfac = function ShadeSliderComponent_Factory(t) { return new (t || ShadeSliderComponent)(); };
ShadeSliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ShadeSliderComponent, selectors: [["color-shade-picker"]], inputs: { width: "width", height: "height" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 10, consts: [[3, "hsl", "rgb", "pointer", "onChange"]], template: function ShadeSliderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "color-shade", 0);
        ɵngcc0.ɵɵlistener("onChange", function ShadeSliderComponent_Template_color_shade_onChange_1_listener($event) { return ctx.handlePickerChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("shade-slider ", ctx.className || "", "");
        ɵngcc0.ɵɵstyleProp("width", ctx.width, "px")("height", ctx.height, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hsl", ctx.hsl)("rgb", ctx.rgb)("pointer", ctx.pointer);
    } }, directives: [ɵngcc1.ShadeComponent], styles: [".shade-slider[_ngcontent-%COMP%] {\n      position: relative;\n    }"], changeDetection: 0 });
__decorate([
    Input()
], ShadeSliderComponent.prototype, "width", void 0);
__decorate([
    Input()
], ShadeSliderComponent.prototype, "height", void 0);
let ColorShadeModule = class ColorShadeModule {
};
ColorShadeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ColorShadeModule });
ColorShadeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ColorShadeModule_Factory(t) { return new (t || ColorShadeModule)(); }, imports: [[CommonModule, ShadeModule]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShadeSliderComponent, [{
        type: Component,
        args: [{
                selector: 'color-shade-picker',
                template: `
    <div class="shade-slider {{ className || '' }}"
      [style.width.px]="width" [style.height.px]="height">
      <color-shade
        [hsl]="hsl"
        [rgb]="rgb"
        [pointer]="pointer"
        (onChange)="handlePickerChange($event)"
      ></color-shade>
    </div>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                styles: [`
    .shade-slider {
      position: relative;
    }
  `]
            }]
    }], function () { return []; }, { width: [{
            type: Input
        }], height: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ColorShadeModule, { declarations: function () { return [ShadeSliderComponent]; }, imports: function () { return [CommonModule, ShadeModule]; }, exports: function () { return [ShadeSliderComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorShadeModule, [{
        type: NgModule,
        args: [{
                declarations: [ShadeSliderComponent],
                exports: [ShadeSliderComponent],
                imports: [CommonModule, ShadeModule]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ColorShadeModule, ShadeSliderComponent };

//# sourceMappingURL=ngx-color-shade.js.map