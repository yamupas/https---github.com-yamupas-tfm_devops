import { __decorate } from 'tslib';
import { CommonModule } from '@angular/common';
import { Input, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { ColorWrap, isValidHex, SwatchModule, EditableInputModule } from 'ngx-color';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-color';

function TwitterComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelementStart(1, "color-swatch", 8);
    ɵngcc0.ɵɵlistener("onClick", function TwitterComponent_div_4_Template_color_swatch_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.handleBlockChange($event); })("onHover", function TwitterComponent_div_4_Template_color_swatch_onHover_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onSwatchHover.emit($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const color_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleMap(ctx_r0.swatchStyle);
    ɵngcc0.ɵɵproperty("color", color_r1)("focusStyle", ctx_r0.focus(color_r1));
} }
const _c0 = function (a0) { return { input: a0 }; };
let TwitterComponent = class TwitterComponent extends ColorWrap {
    constructor() {
        super();
        /** Pixel value for picker width */
        this.width = 276;
        /** Color squares to display */
        this.colors = [
            '#FF6900',
            '#FCB900',
            '#7BDCB5',
            '#00D084',
            '#8ED1FC',
            '#0693E3',
            '#ABB8C3',
            '#EB144C',
            '#F78DA7',
            '#9900EF',
        ];
        this.triangle = 'top-left';
        this.swatchStyle = {
            width: '30px',
            height: '30px',
            borderRadius: '4px',
            fontSize: '0',
        };
        this.input = {
            borderRadius: '4px',
            borderBottomLeftRadius: '0',
            borderTopLeftRadius: '0',
            border: '1px solid #e6ecf0',
            boxSizing: 'border-box',
            display: 'inline',
            fontSize: '14px',
            height: '30px',
            padding: '0',
            paddingLeft: '6px',
            width: '100%',
            color: '#657786',
        };
    }
    focus(color) {
        return { boxShadow: `0 0 4px ${color}` };
    }
    handleBlockChange({ hex, $event }) {
        if (isValidHex(hex)) {
            // this.hex = hex;
            this.handleChange({ hex, source: 'hex' }, $event);
        }
    }
    handleValueChange({ data, $event }) {
        this.handleBlockChange({ hex: data, $event });
    }
};
TwitterComponent.ɵfac = function TwitterComponent_Factory(t) { return new (t || TwitterComponent)(); };
TwitterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TwitterComponent, selectors: [["color-twitter"]], inputs: { width: "width", colors: "colors", triangle: "triangle" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 12, consts: [[1, "triangleShadow"], [1, "triangle"], [1, "twitter-body"], ["class", "twitter-swatch", 4, "ngFor", "ngForOf"], [1, "twitter-hash"], [1, "twitter-input"], [3, "value", "onChange"], [1, "twitter-swatch"], [3, "color", "focusStyle", "onClick", "onHover"]], template: function TwitterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelement(1, "div", 0);
        ɵngcc0.ɵɵelement(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵtemplate(4, TwitterComponent_div_4_Template, 2, 4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "div");
        ɵngcc0.ɵɵtext(7, "#");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 5);
        ɵngcc0.ɵɵelementStart(9, "color-editable-input", 6);
        ɵngcc0.ɵɵlistener("onChange", function TwitterComponent_Template_color_editable_input_onChange_9_listener($event) { return ctx.handleValueChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate2("twitter-picker ", ctx.triangle, "-triangle ", ctx.className, "");
        ɵngcc0.ɵɵstyleProp("width", ctx.width, "px");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.colors);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction1(10, _c0, ctx.input));
        ɵngcc0.ɵɵproperty("value", ctx.hex.replace("#", ""));
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.EditableInputComponent, ɵngcc2.SwatchComponent], styles: [".twitter-picker[_ngcontent-%COMP%] {\n      background: rgb(255, 255, 255);\n      border: 0px solid rgba(0, 0, 0, 0.25);\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 1px 4px;\n      border-radius: 4px;\n      position: relative;\n      box-sizing: border-box;\n    }\n    .triangleShadow[_ngcontent-%COMP%] {\n      width: 0px;\n      height: 0px;\n      border-style: solid;\n      border-width: 0px 9px 10px;\n      border-color: transparent transparent rgba(0, 0, 0, 0.1);\n      position: absolute;\n    }\n    .triangle[_ngcontent-%COMP%] {\n      width: 0px;\n      height: 0px;\n      border-style: solid;\n      border-width: 0px 9px 10px;\n      border-color: transparent transparent rgb(255, 255, 255);\n      position: absolute;\n    }\n    .hide-triangle[_ngcontent-%COMP%]    > .triangle[_ngcontent-%COMP%] {\n      display: none;\n    }\n    .hide-triangle[_ngcontent-%COMP%]    > .triangleShadow[_ngcontent-%COMP%] {\n      display: none;\n    }\n    .top-left-triangle[_ngcontent-%COMP%]    > .triangle[_ngcontent-%COMP%] {\n      top: -10px;\n      left: 12px;\n    }\n    .top-left-triangle[_ngcontent-%COMP%]    > .triangleShadow[_ngcontent-%COMP%] {\n      top: -11px;\n      left: 12px;\n    }\n    .top-right-triangle[_ngcontent-%COMP%]    > .triangle[_ngcontent-%COMP%] {\n      top: -10px;\n      right: 12px;\n    }\n    .top-right-triangle[_ngcontent-%COMP%]    > .triangleShadow[_ngcontent-%COMP%] {\n      top: -11px;\n      right: 12px;\n    }\n    .twitter-body[_ngcontent-%COMP%] {\n      padding: 15px 9px 9px 15px;\n    }\n    .twitter-swatch[_ngcontent-%COMP%] {\n      width: 30px;\n      height: 30px;\n      display: inline-block;\n      margin: 0 6px 0 0;\n    }\n    .twitter-hash[_ngcontent-%COMP%] {\n      background: rgb(240, 240, 240);\n      height: 30px;\n      width: 30px;\n      border-radius: 4px 0px 0px 4px;\n      color: rgb(152, 161, 164);\n      margin-left: -3px;\n      display: inline-block;\n\n    }\n    .twitter-hash[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n      position: absolute;\n      align-items: center;\n      justify-content: center;\n      height: 30px;\n      width: 30px;\n      display: flex;\n    }\n    .twitter-input[_ngcontent-%COMP%] {\n      position: relative;\n      display: inline-block;\n      margin-top: -6px;\n      font-size: 10px;\n      height: 27px;\n      padding: 0;\n      position: relative;\n      top: 6px;\n      vertical-align: top;\n      width: 108px;\n      margin-left: -4px;\n    }"], changeDetection: 0 });
__decorate([
    Input()
], TwitterComponent.prototype, "width", void 0);
__decorate([
    Input()
], TwitterComponent.prototype, "colors", void 0);
__decorate([
    Input()
], TwitterComponent.prototype, "triangle", void 0);
let ColorTwitterModule = class ColorTwitterModule {
};
ColorTwitterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ColorTwitterModule });
ColorTwitterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ColorTwitterModule_Factory(t) { return new (t || ColorTwitterModule)(); }, imports: [[CommonModule, SwatchModule, EditableInputModule]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TwitterComponent, [{
        type: Component,
        args: [{
                selector: 'color-twitter',
                template: `
  <div class="twitter-picker {{ triangle }}-triangle {{ className }}" [style.width.px]="width">
    <div class="triangleShadow"></div>
    <div class="triangle"></div>
    <div class="twitter-body">
      <div class="twitter-swatch" *ngFor="let color of colors">
        <color-swatch
          [color]="color"
          [style]="swatchStyle"
          [focusStyle]="focus(color)"
          (onClick)="handleBlockChange($event)"
          (onHover)="onSwatchHover.emit($event)"
        ></color-swatch>
      </div>
      <div class="twitter-hash">
        <div>#</div>
      </div>
      <div class="twitter-input">
        <color-editable-input
          [style]="{ input: input }"
          [value]="hex.replace('#', '')"
          (onChange)="handleValueChange($event)"
        ></color-editable-input>
      </div>
    </div>
  </div>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                styles: [`
    .twitter-picker {
      background: rgb(255, 255, 255);
      border: 0px solid rgba(0, 0, 0, 0.25);
      box-shadow: rgba(0, 0, 0, 0.25) 0px 1px 4px;
      border-radius: 4px;
      position: relative;
      box-sizing: border-box;
    }
    .triangleShadow {
      width: 0px;
      height: 0px;
      border-style: solid;
      border-width: 0px 9px 10px;
      border-color: transparent transparent rgba(0, 0, 0, 0.1);
      position: absolute;
    }
    .triangle {
      width: 0px;
      height: 0px;
      border-style: solid;
      border-width: 0px 9px 10px;
      border-color: transparent transparent rgb(255, 255, 255);
      position: absolute;
    }
    .hide-triangle > .triangle {
      display: none;
    }
    .hide-triangle > .triangleShadow {
      display: none;
    }
    .top-left-triangle > .triangle {
      top: -10px;
      left: 12px;
    }
    .top-left-triangle > .triangleShadow {
      top: -11px;
      left: 12px;
    }
    .top-right-triangle > .triangle {
      top: -10px;
      right: 12px;
    }
    .top-right-triangle > .triangleShadow {
      top: -11px;
      right: 12px;
    }
    .twitter-body {
      padding: 15px 9px 9px 15px;
    }
    .twitter-swatch {
      width: 30px;
      height: 30px;
      display: inline-block;
      margin: 0 6px 0 0;
    }
    .twitter-hash {
      background: rgb(240, 240, 240);
      height: 30px;
      width: 30px;
      border-radius: 4px 0px 0px 4px;
      color: rgb(152, 161, 164);
      margin-left: -3px;
      display: inline-block;

    }
    .twitter-hash > div {
      position: absolute;
      align-items: center;
      justify-content: center;
      height: 30px;
      width: 30px;
      display: flex;
    }
    .twitter-input {
      position: relative;
      display: inline-block;
      margin-top: -6px;
      font-size: 10px;
      height: 27px;
      padding: 0;
      position: relative;
      top: 6px;
      vertical-align: top;
      width: 108px;
      margin-left: -4px;
    }
  `]
            }]
    }], function () { return []; }, { width: [{
            type: Input
        }], colors: [{
            type: Input
        }], triangle: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ColorTwitterModule, { declarations: function () { return [TwitterComponent]; }, imports: function () { return [CommonModule, SwatchModule, EditableInputModule]; }, exports: function () { return [TwitterComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorTwitterModule, [{
        type: NgModule,
        args: [{
                declarations: [TwitterComponent],
                exports: [TwitterComponent],
                imports: [CommonModule, SwatchModule, EditableInputModule]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ColorTwitterModule, TwitterComponent };

//# sourceMappingURL=ngx-color-twitter.js.map