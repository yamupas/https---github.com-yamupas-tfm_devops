{"version":3,"file":"ngx-color-chrome.js","sources":["ng:/ngx-color/chrome/chrome-fields.component.ts","ng:/ngx-color/chrome/chrome.component.ts","ng:/ngx-color/chrome/ngx-color-chrome.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { isValidHex, HSLA, RGBA } from 'ngx-color';\nimport { TinyColor } from '@ctrl/tinycolor';\n\n@Component({\n  selector: 'color-chrome-fields',\n  template: `\n    <div class=\"chrome-wrap\">\n      <div class=\"chrome-fields\">\n        <ng-template [ngIf]=\"view === 'hex'\">\n          <div class=\"chrome-field\">\n            <color-editable-input\n              [style]=\"{ input: input, label: label }\"\n              label=\"hex\" [value]=\"hex\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n        </ng-template>\n        <ng-template [ngIf]=\"view === 'rgb'\">\n          <div class=\"chrome-field\">\n            <color-editable-input\n              [style]=\"{ input: input, label: label }\"\n              label=\"r\" [value]=\"rgb.r\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n          <div class=\"chrome-field\">\n            <color-editable-input\n              [style]=\"{ input: input, label: label }\"\n              label=\"g\" [value]=\"rgb.g\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n          <div class=\"chrome-field\">\n            <color-editable-input\n              [style]=\"{ input: input, label: label }\"\n              label=\"b\" [value]=\"rgb.b\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n          <div class=\"chrome-field\">\n            <color-editable-input *ngIf=\"!disableAlpha\"\n              [style]=\"{ input: input, label: label }\"\n              label=\"a\" [value]=\"rgb.a\"\n              [arrowOffset]=\"0.01\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n        </ng-template>\n        <ng-template [ngIf]=\"view === 'hsl'\">\n          <div class=\"chrome-field\">\n            <color-editable-input\n              [style]=\"{ input: input, label: label }\"\n              label=\"h\"\n              [value]=\"round(hsl.h)\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n          <div class=\"chrome-field\">\n            <color-editable-input\n              [style]=\"{ input: input, label: label }\"\n              label=\"s\" [value]=\"round(hsl.s * 100) + '%'\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n          <div class=\"chrome-field\">\n            <color-editable-input\n              [style]=\"{ input: input, label: label }\"\n              label=\"l\" [value]=\"round(hsl.l * 100) + '%'\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n          <div class=\"chrome-field\">\n            <color-editable-input *ngIf=\"!disableAlpha\"\n              [style]=\"{ input: input, label: label }\"\n              label=\"a\" [value]=\"hsl.a\"\n              [arrowOffset]=\"0.01\"\n              (onChange)=\"handleChange($event)\"\n            ></color-editable-input>\n          </div>\n        </ng-template>\n      </div>\n\n      <div class=\"chrome-toggle\">\n        <div class=\"chrome-icon\" (click)=\"toggleViews()\" #icon>\n          <svg class=\"chrome-toggle-svg\" viewBox=\"0 0 24 24\">\n            <path #iconUp fill=\"#333\"\n              d=\"M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z\"\n            />\n            <path #iconDown fill=\"#333\"\n              d=\"M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15Z\"\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .chrome-wrap {\n        padding-top: 16px;\n        display: flex;\n      }\n      .chrome-fields {\n        flex: 1;\n        display: flex;\n        margin-left: -6px;\n      }\n      .chrome-field {\n        padding-left: 6px;\n        width: 100%;\n      }\n      .chrome-toggle {\n        width: 32px;\n        text-align: right;\n        position: relative;\n      }\n      .chrome-icon {\n        margin-right: -4px;\n        margin-top: 12px;\n        cursor: pointer;\n        position: relative;\n      }\n      .chrome-toggle-svg {\n        width: 24px;\n        height: 24px;\n        border: 1px transparent solid;\n        border-radius: 5px;\n      }\n      .chrome-toggle-svg:hover {\n        background: #eee;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class ChromeFieldsComponent implements OnInit {\n  @Input() disableAlpha: boolean;\n  @Input() hsl: HSLA;\n  @Input() rgb: RGBA;\n  @Input() hex: string;\n  @Output() onChange = new EventEmitter<any>();\n  view = '';\n  input: { [key: string]: string } = {\n    fontSize: '11px',\n    color: '#333',\n    width: '100%',\n    borderRadius: '2px',\n    border: 'none',\n    boxShadow: 'inset 0 0 0 1px #dadada',\n    height: '21px',\n    'text-align': 'center',\n  };\n  label: { [key: string]: string } = {\n    'text-transform': 'uppercase',\n    fontSize: '11px',\n    'line-height': '11px',\n    color: '#969696',\n    'text-align': 'center',\n    display: 'block',\n    marginTop: '12px',\n  };\n\n  ngOnInit() {\n    if (this.hsl.a === 1 && this.view !== 'hex') {\n      this.view = 'hex';\n    } else if (this.view !== 'rgb' && this.view !== 'hsl') {\n      this.view = 'rgb';\n    }\n  }\n  toggleViews() {\n    if (this.view === 'hex') {\n      this.view = 'rgb';\n    } else if (this.view === 'rgb') {\n      this.view = 'hsl';\n    } else if (this.view === 'hsl') {\n      if (this.hsl.a === 1) {\n        this.view = 'hex';\n      } else {\n        this.view = 'rgb';\n      }\n    }\n  }\n  round(value) {\n    return Math.round(value);\n  }\n  handleChange({ data, $event }) {\n    if (data.hex) {\n      if (isValidHex(data.hex)) {\n        const color = new TinyColor(data.hex);\n        this.onChange.emit({\n          data: {\n            hex: this.disableAlpha ? color.toHex() : color.toHex8(),\n            source: 'hex',\n          },\n          $event,\n        });\n      }\n    } else if (data.r || data.g || data.b) {\n      this.onChange.emit({\n        data: {\n          r: data.r || this.rgb.r,\n          g: data.g || this.rgb.g,\n          b: data.b || this.rgb.b,\n          source: 'rgb',\n        },\n        $event,\n      });\n    } else if (data.a) {\n      if (data.a < 0) {\n        data.a = 0;\n      } else if (data.a > 1) {\n        data.a = 1;\n      }\n\n      if (this.disableAlpha) {\n        data.a = 1;\n      }\n\n      this.onChange.emit({\n        data: {\n          h: this.hsl.h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a: Math.round(data.a * 100) / 100,\n          source: 'rgb',\n        },\n        $event,\n      });\n    } else if (data.h || data.s || data.l) {\n      const s = data.s && data.s.replace('%', '');\n      const l = data.l && data.l.replace('%', '');\n      this.onChange.emit({\n        data: {\n          h: data.h || this.hsl.h,\n          s: Number(s || this.hsl.s),\n          l: Number(l || this.hsl.l),\n          source: 'hsl',\n        },\n        $event,\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n} from '@angular/core';\n\nimport {\n  AlphaModule,\n  CheckboardModule,\n  ColorWrap,\n  EditableInputModule,\n  HueModule,\n  SaturationModule,\n} from 'ngx-color';\nimport { ChromeFieldsComponent } from './chrome-fields.component';\n\n@Component({\n  selector: 'color-chrome',\n  template: `\n  <div class=\"chrome-picker {{ className }}\">\n    <div class=\"saturation\">\n      <color-saturation\n        [hsl]=\"hsl\"\n        [hsv]=\"hsv\"\n        [circle]=\"circle\"\n        (onChange)=\"handleValueChange($event)\"\n      ></color-saturation>\n    </div>\n    <div class=\"chrome-body\">\n      <div class=\"chrome-controls\">\n        <div class=\"chrome-color\">\n          <div class=\"chrome-swatch\">\n            <div class=\"chrome-active\"\n              [style.background]=\"activeBackground\"\n            ></div>\n            <color-checkboard></color-checkboard>\n          </div>\n        </div>\n        <div class=\"chrome-toggles\">\n          <div class=\"chrome-hue\">\n            <color-hue\n              [radius]=\"2\"\n              [hsl]=\"hsl\"\n              [pointer]=\"pointer\"\n              (onChange)=\"handleValueChange($event)\"\n            ></color-hue>\n          </div>\n          <div class=\"chrome-alpha\" *ngIf=\"!disableAlpha\">\n            <color-alpha\n              [radius]=\"2\" [rgb]=\"rgb\" [hsl]=\"hsl\"\n              [pointer]=\"pointer\" (onChange)=\"handleValueChange($event)\"\n            ></color-alpha>\n          </div>\n        </div>\n      </div>\n      <color-chrome-fields\n        [rgb]=\"rgb\" [hsl]=\"hsl\" [hex]=\"hex\"\n        [disableAlpha]=\"disableAlpha\"\n        (onChange)=\"handleValueChange($event)\"\n      ></color-chrome-fields>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n      .chrome-picker {\n        background: #fff;\n        border-radius: 2px;\n        box-shadow: 0 0 2px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.3);\n        box-sizing: initial;\n        width: 225px;\n        font-family: 'Menlo';\n      }\n      .chrome-controls {\n        display: flex;\n      }\n      .chrome-color {\n        width: 42px;\n      }\n      .chrome-body {\n        padding: 14px 14px 12px;\n      }\n      .chrome-active {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        border-radius: 20px;\n        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n        z-index: 2;\n      }\n      .chrome-swatch {\n        width: 28px;\n        height: 28px;\n        border-radius: 15px;\n        position: relative;\n        overflow: hidden;\n      }\n      .saturation {\n        width: 100%;\n        padding-bottom: 55%;\n        position: relative;\n        border-radius: 2px 2px 0 0;\n        overflow: hidden;\n      }\n      .chrome-toggles {\n        flex: 1;\n      }\n      .chrome-hue {\n        height: 10px;\n        position: relative;\n        margin-bottom: 8px;\n      }\n      .chrome-alpha {\n        height: 10px;\n        position: relative;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class ChromeComponent extends ColorWrap {\n  /** Remove alpha slider and options from picker */\n  @Input() disableAlpha = false;\n  circle: { [key: string]: string } = {\n    width: '12px',\n    height: '12px',\n    borderRadius: '6px',\n    boxShadow: 'rgb(255, 255, 255) 0px 0px 0px 1px inset',\n    transform: 'translate(-6px, -8px)',\n  };\n  pointer: { [key: string]: string } = {\n    width: '12px',\n    height: '12px',\n    borderRadius: '6px',\n    transform: 'translate(-6px, -2px)',\n    backgroundColor: 'rgb(248, 248, 248)',\n    boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)',\n  };\n  activeBackground: string;\n\n  constructor() {\n    super();\n  }\n\n  afterValidChange() {\n    const alpha = this.disableAlpha ? 1 : this.rgb.a;\n    this.activeBackground = `rgba(${this.rgb.r}, ${this.rgb.g}, ${this.rgb.b}, ${alpha})`;\n  }\n  handleValueChange({ data, $event }) {\n    this.handleChange(data, $event);\n  }\n}\n\n@NgModule({\n  declarations: [ChromeComponent, ChromeFieldsComponent],\n  exports: [ChromeComponent, ChromeFieldsComponent],\n  imports: [\n    CommonModule,\n    AlphaModule,\n    CheckboardModule,\n    EditableInputModule,\n    HueModule,\n    SaturationModule,\n  ],\n})\nexport class ColorChromeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './chrome.component';\n\nexport {ChromeFieldsComponent as ɵa} from './chrome-fields.component';"]}