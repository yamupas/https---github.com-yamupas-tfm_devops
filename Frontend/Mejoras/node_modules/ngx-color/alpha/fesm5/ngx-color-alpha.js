import { __extends, __decorate } from 'tslib';
import { CommonModule } from '@angular/common';
import { Input, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { toState, ColorWrap, AlphaModule, CheckboardModule } from 'ngx-color';

var AlphaPickerComponent = /** @class */ (function (_super) {
    __extends(AlphaPickerComponent, _super);
    function AlphaPickerComponent() {
        var _this = _super.call(this) || this;
        /** Pixel value for picker width */
        _this.width = 316;
        /** Pixel value for picker height */
        _this.height = 16;
        _this.direction = 'horizontal';
        _this.pointer = {
            width: '18px',
            height: '18px',
            borderRadius: '50%',
            transform: 'translate(-9px, -2px)',
            boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)',
        };
        return _this;
    }
    AlphaPickerComponent.prototype.ngOnChanges = function () {
        if (this.direction === 'vertical') {
            this.pointer.transform = 'translate(-3px, -9px)';
        }
        this.setState(toState(this.color, this.oldHue));
    };
    AlphaPickerComponent.prototype.handlePickerChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    __decorate([
        Input()
    ], AlphaPickerComponent.prototype, "width", void 0);
    __decorate([
        Input()
    ], AlphaPickerComponent.prototype, "height", void 0);
    __decorate([
        Input()
    ], AlphaPickerComponent.prototype, "direction", void 0);
    AlphaPickerComponent = __decorate([
        Component({
            selector: 'color-alpha-picker',
            template: "\n    <div class=\"alpha-picker {{ className }}\"\n      [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <color-alpha\n        [hsl]=\"hsl\"\n        [rgb]=\"rgb\"\n        [pointer]=\"pointer\"\n        [direction]=\"direction\"\n        (onChange)=\"handlePickerChange($event)\"\n      ></color-alpha>\n    </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .alpha-picker {\n      position: relative;\n    }\n    .color-alpha {\n      radius: 2px;\n    }\n  "]
        })
    ], AlphaPickerComponent);
    return AlphaPickerComponent;
}(ColorWrap));
var ColorAlphaModule = /** @class */ (function () {
    function ColorAlphaModule() {
    }
    ColorAlphaModule = __decorate([
        NgModule({
            declarations: [AlphaPickerComponent],
            exports: [AlphaPickerComponent],
            imports: [CommonModule, AlphaModule, CheckboardModule],
        })
    ], ColorAlphaModule);
    return ColorAlphaModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { AlphaPickerComponent, ColorAlphaModule };
//# sourceMappingURL=ngx-color-alpha.js.map
