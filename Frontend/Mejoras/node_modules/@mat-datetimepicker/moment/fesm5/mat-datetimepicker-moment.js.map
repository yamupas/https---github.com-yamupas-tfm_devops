{"version":3,"file":"mat-datetimepicker-moment.js","sources":["ng://@mat-datetimepicker/moment/adapter/moment-datetime-adapter.ts","ng://@mat-datetimepicker/moment/adapter/moment-datetime-formats.ts","ng://@mat-datetimepicker/moment/adapter/index.ts"],"sourcesContent":["import {Inject, Injectable, Optional} from \"@angular/core\";\r\nimport {DateAdapter, MAT_DATE_LOCALE} from \"@angular/material/core\";\r\nimport {MAT_MOMENT_DATE_ADAPTER_OPTIONS, MatMomentDateAdapterOptions} from \"@angular/material-moment-adapter\";\r\nimport {DatetimeAdapter} from \"@mat-datetimepicker/core\";\r\n\r\nimport * as moment_ from \"moment\";\r\nimport {Moment} from \"moment\";\r\n\r\nconst moment = moment_;\r\n\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n@Injectable()\r\nexport class MomentDatetimeAdapter extends DatetimeAdapter<Moment> {\r\n\r\n  private _localeData: {\r\n    firstDayOfWeek: number,\r\n    longMonths: string[],\r\n    shortMonths: string[],\r\n    dates: string[],\r\n    hours: string[],\r\n    minutes: string[],\r\n    longDaysOfWeek: string[],\r\n    shortDaysOfWeek: string[],\r\n    narrowDaysOfWeek: string[]\r\n  };\r\n\r\n  private _useUtc = false;\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string,\r\n              @Optional() @Inject(MAT_MOMENT_DATE_ADAPTER_OPTIONS) matMomentAdapterOptions: MatMomentDateAdapterOptions,\r\n              _delegate: DateAdapter<Moment>) {\r\n    super(_delegate);\r\n    this.setLocale(matDateLocale || moment.locale());\r\n    this._useUtc = matMomentAdapterOptions.useUtc;\r\n  }\r\n\r\n  setLocale(locale: string) {\r\n    super.setLocale(locale);\r\n\r\n    const momentLocaleData = moment.localeData(locale);\r\n    this._localeData = {\r\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\r\n      longMonths: momentLocaleData.months(),\r\n      shortMonths: momentLocaleData.monthsShort(),\r\n      dates: range(31, (i) => super.createDate(2017, 0, i + 1).format(\"D\")),\r\n      hours: range(24, (i) => this.createDatetime(2017, 0, 1, i, 0).format(\"H\")),\r\n      minutes: range(60, (i) => this.createDatetime(2017, 0, 1, 1, i).format(\"m\")),\r\n      longDaysOfWeek: momentLocaleData.weekdays(),\r\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\r\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin()\r\n    };\r\n  }\r\n\r\n  getHour(date: Moment): number {\r\n    return super.clone(date).hour();\r\n  }\r\n\r\n  getMinute(date: Moment): number {\r\n    return super.clone(date).minute();\r\n  }\r\n\r\n  isInNextMonth(startDate: Moment, endDate: Moment): boolean {\r\n    const nextMonth = this.getDateInNextMonth(startDate);\r\n    return super.sameMonthAndYear(nextMonth, endDate);\r\n  }\r\n\r\n  createDatetime(year: number, month: number, date: number, hour: number, minute: number): Moment {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    if (hour < 0 || hour > 23) {\r\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\r\n    }\r\n\r\n    if (minute < 0 || minute > 59) {\r\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\r\n    }\r\n\r\n    // const result = moment({year, month, date, hour, minute}).locale(this.locale);\r\n    let result = moment({year, month, date, hour, minute});\r\n    if (this._useUtc) {\r\n      result = result.utc();\r\n    }\r\n\r\n    // If the result isn't valid, the date must have been out of bounds for this month.\r\n    if (!result.isValid()) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getFirstDateOfMonth(date: Moment): Moment {\r\n    return super.clone(date).startOf(\"month\");\r\n  }\r\n\r\n  getHourNames(): string[] {\r\n    return this._localeData.hours;\r\n  }\r\n\r\n  getMinuteNames(): string[] {\r\n    return this._localeData.minutes;\r\n  }\r\n\r\n  addCalendarHours(date: Moment, hours: number): Moment {\r\n    return super.clone(date).add({hours});\r\n  }\r\n\r\n  addCalendarMinutes(date: Moment, minutes: number): Moment {\r\n    return super.clone(date).add({minutes});\r\n  }\r\n\r\n  deserialize(value: any): Moment | null {\r\n    return this._delegate.deserialize(value);\r\n  }\r\n\r\n  private getDateInNextMonth(date: Moment) {\r\n    return super.clone(date).date(1).add({month: 1});\r\n  }\r\n}\r\n","import {MatDatetimeFormats} from \"@mat-datetimepicker/core\";\r\n\r\nexport const MAT_MOMENT_DATETIME_FORMATS: MatDatetimeFormats = {\r\n  parse: {\r\n    dateInput: \"L\",\r\n    monthInput: \"MMMM\",\r\n    timeInput: \"LT\",\r\n    datetimeInput: \"L LT\"\r\n  },\r\n  display: {\r\n    dateInput: \"L\",\r\n    monthInput: \"MMMM\",\r\n    datetimeInput: \"L LT\",\r\n    timeInput: \"LT\",\r\n    monthYearLabel: \"MMM YYYY\",\r\n    dateA11yLabel: \"LL\",\r\n    monthYearA11yLabel: \"MMMM YYYY\",\r\n    popupHeaderDateLabel: \"ddd, DD MMM\"\r\n  }\r\n};\r\n","import {NgModule} from \"@angular/core\";\r\nimport {MatMomentDateModule, MomentDateModule} from \"@angular/material-moment-adapter\";\r\nimport {DatetimeAdapter, MAT_DATETIME_FORMATS} from \"@mat-datetimepicker/core\";\r\nimport {MomentDatetimeAdapter} from \"./moment-datetime-adapter\";\r\nimport {MAT_MOMENT_DATETIME_FORMATS} from \"./moment-datetime-formats\";\r\n\r\nexport * from \"./moment-datetime-adapter\";\r\nexport * from \"./moment-datetime-formats\";\r\n\r\n@NgModule({\r\n  imports: [MomentDateModule],\r\n  providers: [\r\n    {\r\n      provide: DatetimeAdapter,\r\n      useClass: MomentDatetimeAdapter\r\n    }\r\n  ]\r\n})\r\nexport class MomentDatetimeModule {\r\n}\r\n\r\n@NgModule({\r\n  imports: [MomentDatetimeModule, MatMomentDateModule],\r\n  providers: [{provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS}]\r\n})\r\nexport class MatMomentDatetimeModule {\r\n}\r\n"],"names":[],"mappings":"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"}