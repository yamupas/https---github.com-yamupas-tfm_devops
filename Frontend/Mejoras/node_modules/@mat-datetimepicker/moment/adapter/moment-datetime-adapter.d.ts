import { DateAdapter } from "@angular/material/core";
import { MatMomentDateAdapterOptions } from "@angular/material-moment-adapter";
import { DatetimeAdapter } from "@mat-datetimepicker/core";
import { Moment } from "moment";
import * as ɵngcc0 from '@angular/core';
export declare class MomentDatetimeAdapter extends DatetimeAdapter<Moment> {
    private _localeData;
    private _useUtc;
    constructor(matDateLocale: string, matMomentAdapterOptions: MatMomentDateAdapterOptions, _delegate: DateAdapter<Moment>);
    setLocale(locale: string): void;
    getHour(date: Moment): number;
    getMinute(date: Moment): number;
    isInNextMonth(startDate: Moment, endDate: Moment): boolean;
    createDatetime(year: number, month: number, date: number, hour: number, minute: number): Moment;
    getFirstDateOfMonth(date: Moment): Moment;
    getHourNames(): string[];
    getMinuteNames(): string[];
    addCalendarHours(date: Moment, hours: number): Moment;
    addCalendarMinutes(date: Moment, minutes: number): Moment;
    deserialize(value: any): Moment | null;
    private getDateInNextMonth;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MomentDatetimeAdapter, [{ optional: true; }, { optional: true; }, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<MomentDatetimeAdapter>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9tZW50LWRhdGV0aW1lLWFkYXB0ZXIuZC50cyIsInNvdXJjZXMiOlsibW9tZW50LWRhdGV0aW1lLWFkYXB0ZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRlQWRhcHRlciB9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9jb3JlXCI7XHJcbmltcG9ydCB7IE1hdE1vbWVudERhdGVBZGFwdGVyT3B0aW9ucyB9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC1tb21lbnQtYWRhcHRlclwiO1xyXG5pbXBvcnQgeyBEYXRldGltZUFkYXB0ZXIgfSBmcm9tIFwiQG1hdC1kYXRldGltZXBpY2tlci9jb3JlXCI7XHJcbmltcG9ydCB7IE1vbWVudCB9IGZyb20gXCJtb21lbnRcIjtcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTW9tZW50RGF0ZXRpbWVBZGFwdGVyIGV4dGVuZHMgRGF0ZXRpbWVBZGFwdGVyPE1vbWVudD4ge1xyXG4gICAgcHJpdmF0ZSBfbG9jYWxlRGF0YTtcclxuICAgIHByaXZhdGUgX3VzZVV0YztcclxuICAgIGNvbnN0cnVjdG9yKG1hdERhdGVMb2NhbGU6IHN0cmluZywgbWF0TW9tZW50QWRhcHRlck9wdGlvbnM6IE1hdE1vbWVudERhdGVBZGFwdGVyT3B0aW9ucywgX2RlbGVnYXRlOiBEYXRlQWRhcHRlcjxNb21lbnQ+KTtcclxuICAgIHNldExvY2FsZShsb2NhbGU6IHN0cmluZyk6IHZvaWQ7XHJcbiAgICBnZXRIb3VyKGRhdGU6IE1vbWVudCk6IG51bWJlcjtcclxuICAgIGdldE1pbnV0ZShkYXRlOiBNb21lbnQpOiBudW1iZXI7XHJcbiAgICBpc0luTmV4dE1vbnRoKHN0YXJ0RGF0ZTogTW9tZW50LCBlbmREYXRlOiBNb21lbnQpOiBib29sZWFuO1xyXG4gICAgY3JlYXRlRGF0ZXRpbWUoeWVhcjogbnVtYmVyLCBtb250aDogbnVtYmVyLCBkYXRlOiBudW1iZXIsIGhvdXI6IG51bWJlciwgbWludXRlOiBudW1iZXIpOiBNb21lbnQ7XHJcbiAgICBnZXRGaXJzdERhdGVPZk1vbnRoKGRhdGU6IE1vbWVudCk6IE1vbWVudDtcclxuICAgIGdldEhvdXJOYW1lcygpOiBzdHJpbmdbXTtcclxuICAgIGdldE1pbnV0ZU5hbWVzKCk6IHN0cmluZ1tdO1xyXG4gICAgYWRkQ2FsZW5kYXJIb3VycyhkYXRlOiBNb21lbnQsIGhvdXJzOiBudW1iZXIpOiBNb21lbnQ7XHJcbiAgICBhZGRDYWxlbmRhck1pbnV0ZXMoZGF0ZTogTW9tZW50LCBtaW51dGVzOiBudW1iZXIpOiBNb21lbnQ7XHJcbiAgICBkZXNlcmlhbGl6ZSh2YWx1ZTogYW55KTogTW9tZW50IHwgbnVsbDtcclxuICAgIHByaXZhdGUgZ2V0RGF0ZUluTmV4dE1vbnRoO1xyXG59XHJcbiJdfQ==